{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_define_property.js","src/partials/js/refs.js","src/partials/js/catalog/createCards.js","src/partials/js/catalog/catalogUtils.js","src/partials/js/catalog/pagination.js","src/partials/js/catalog/catalogApi.js","src/partials/js/catalog/example.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","const refs = {\n  pagination: document.getElementById('pagination'),\n  //_______Catalog_______\n  catalogFilms: document.querySelector('.catalog-films'),\n  //____________________\n};\n\nexport { refs };\n","import { refs } from '../refs';\n\nexport const createCards = dataCard => {\n  const markup = dataCard\n    .map(card => {\n      return `<div data-id=${card.id} class=\"catalog-card\">\n      <img src='https://image.tmdb.org/t/p/original${card.poster}' alt=\"${\n        card.title\n      }\" loading=\"lazy\" />\n      <div class=\"catalog-info\">\n        <div>\n          <p class=\"catalog-info-name\">\n            <b>${card.title}</b>\n          </p>\n          <p class=\"catalog-info-details\">\n            <span>${card.genres}</span>\n            <span class=\"catalog-info-border\" >${card.date}</span>\n          </p>\n        </div>\n        <div\n          class=\"Stars\"\n          style=\"--rating: ${card.rating / 2}\"\n          aria-label=\"Rating of this product is 2.3 out of 5.\"\n        ></div>\n      </div>\n    </div>`;\n    })\n    .join('');\n  addHTML(markup);\n  //console.log(markup);\n  //   dataCard.map(el => console.log(el));\n};\n\nfunction addHTML(cards) {\n  refs.catalogFilms.innerHTML = cards;\n}\n","import { fetchGenre } from './catalogApi';\nimport { createCards } from './createCards';\n\nconst createDataCards = async moviesData => {\n  //console.log(moviesData);\n  const genre = await fetchGenre();\n  const newCardsDate = moviesData.map(\n    ({ id, title, poster_path, vote_average, genre_ids, release_date }) => {\n      return {\n        id: id,\n        title: title,\n        poster: poster_path,\n        rating: vote_average,\n        genres: createGenreStr(genre, genre_ids),\n        date: createMovieDate(release_date),\n      };\n    }\n  );\n  createCards(newCardsDate);\n};\n\nconst createGenreStr = (genre, genre_ids) => {\n  const genres = [];\n  genre.map(({ id, name }) => {\n    if (genre_ids.indexOf(id) !== -1) {\n      genres.push(name);\n    }\n  });\n  return genres.join(',');\n};\n\nconst createMovieDate = dateString => {\n  const date = new Date(dateString);\n  const year = date.getFullYear();\n  return year;\n};\n\nconst saveLocal = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nconst loadLocal = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nexport {\n  createDataCards,\n  createGenreStr,\n  createMovieDate,\n  saveLocal,\n  loadLocal,\n};\n","import { refs } from '../refs';\nimport { saveLocal } from './catalogUtils';\n\nexport default class Pagination {\n  constructor(totalPages, page, getMovies) {\n    this.totalPages = totalPages;\n    this.currentPage = page;\n    this.getMovies = getMovies;\n  }\n\n  createButton = () => {\n    const arrPaginationItems = [];\n\n    this.addFirstPages(arrPaginationItems);\n    this.totalPages > 3 && this.addEllipsisIfNeeded(arrPaginationItems);\n    this.totalPages > 3 && this.addMiddlePages(arrPaginationItems);\n    this.totalPages > 3 && this.addEllipsisIfNeeded(arrPaginationItems, true);\n    this.totalPages > 3 && this.addLastPage(arrPaginationItems);\n\n    const markup = this.createPagination(arrPaginationItems.join(''));\n    this.render(markup);\n    saveLocal('currentPage', this.currentPage);\n    this.getMovies(this.currentPage);\n  };\n\n  addFirstPages = arr => {\n    for (let page = 1; page <= Math.min(3, this.totalPages); page++) {\n      const activeEl = this.currentPage === page ? 'btn-active' : '';\n      const btn = this.createPaginationItem(page, activeEl);\n      arr.push(btn);\n    }\n  };\n\n  addMiddlePages = arr => {\n    const startPage = Math.max(4, this.currentPage - 2);\n    const endPage = Math.min(this.currentPage + 1, this.totalPages - 1);\n    for (let page = startPage; page <= endPage; page++) {\n      const activeEl = this.currentPage === page ? 'btn-active' : '';\n      const btn = this.createPaginationItem(page, activeEl);\n      arr.push(btn);\n    }\n  };\n\n  addEllipsisIfNeeded = (arr, atEnd = false) => {\n    if (\n      (atEnd && this.currentPage < this.totalPages - 2) ||\n      (!atEnd && this.currentPage > 3)\n    ) {\n      arr.push('<li class=\"pagination-item\">...</li>');\n    }\n  };\n\n  addLastPage = arr => {\n    const lastPage = this.totalPages;\n    const activeEl = this.currentPage === lastPage ? 'btn-active' : '';\n    const btn = this.createPaginationItem(lastPage, activeEl);\n    arr.push(btn);\n  };\n\n  createPaginationItem = (page, activeClass) => {\n    return `<li class='pagination-item ${activeClass}'>\n              <a href='#' data-page='${page}' class='pagination-btn'>${page}</a>\n            </li>`;\n  };\n\n  createPagination = paginationItems => {\n    return `<ul class='pagination'>${paginationItems}</ul>`;\n  };\n\n  render = pagination => {\n    this.reset();\n    refs.catalogFilms.insertAdjacentHTML('afterend', pagination);\n    const el = document.querySelector('.pagination');\n    el.addEventListener('click', this.handlerBtn);\n  };\n\n  reset = () => {\n    const el = document.querySelector('.pagination');\n    if (el) el.remove();\n  };\n\n  handlerBtn = e => {\n    e.preventDefault();\n    const page = parseInt(e.target.dataset.page);\n    if (!isNaN(page)) {\n      this.currentPage = page;\n      this.createButton();\n    }\n  };\n}\n","import Pagination from './pagination';\nimport { getByQuery } from '../api';\nimport { createDataCards, loadLocal } from './catalogUtils';\nimport axios from 'axios';\n\nconst API_KEY = '88b8a7c5d221d3120fb29d734050dc7d';\n\nexport const getMoviesByQuery = async (chosenPage = 1) => {\n  const searchTerm = loadLocal('searchTerm');\n  console.log(chosenPage, searchTerm);\n  const { results, total_pages, page } = await getByQuery(\n    searchTerm,\n    chosenPage\n  );\n  createDataCards(results);\n  return {\n    results,\n    total_pages,\n    page,\n  };\n};\n\nexport const showNewestMovies = async currentPage => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/now_playing?api_key=${API_KEY}&page=${currentPage}&language=en-US`\n  );\n  const { results, page, total_pages } = data;\n  createDataCards(results);\n  return {\n    results,\n    page,\n    total_pages,\n  };\n};\n\nexport const fetchGenre = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`\n  );\n  const { genres } = data;\n  return genres;\n};\n","import { getMoviesByQuery, showNewestMovies } from './catalogApi';\nimport { loadLocal, saveLocal } from './catalogUtils';\nimport Pagination from './pagination';\n\nconst searchForm = document.querySelector('.search-form');\n\nconst submitHandler = e => {\n  e.preventDefault();\n  const formData = new FormData(e.target);\n  const { searchMovies } = Object.fromEntries(formData.entries());\n  if (!searchMovies.length) {\n    afterLoad();\n    return;\n  }\n  saveLocal('searchTerm', searchMovies);\n  afterSearching(searchMovies);\n};\n\nconst afterLoad = async () => {\n  const { page, total_pages } = await showNewestMovies();\n  const pagination = new Pagination(total_pages, page, showNewestMovies);\n  pagination.createButton();\n};\n\nconst afterSearching = async searchMovies => {\n  const { page, total_pages } = await getMoviesByQuery();\n  const pagination = new Pagination(total_pages, page, getMoviesByQuery);\n  pagination.createButton();\n};\n\nsearchForm.addEventListener('submit', submitHandler);\nwindow.addEventListener('load', afterLoad);\n\nexport { createDataCards };\n"],"names":["Object","defineProperty","$da4b248c00322402$exports","value","default","obj","key","enumerable","configurable","writable","$97b4d273c2f21ef2$export$21666b427502ea6d","pagination","document","getElementById","catalogFilms","querySelector","$900f3e5968da7b57$export$659b6b545718ce73","dataCard","markup","map","card","id","poster","title","genres","date","rating","join","cards","innerHTML","$80ce91662cd26072$export$f3fd225445632348","async","moviesData","genre","$df1db51f1d31cfcf$export$13a873f6c4b5d516","newCardsDate","poster_path","vote_average","genre_ids","release_date","$80ce91662cd26072$export$44f0485a2f926b66","$80ce91662cd26072$export$e57ec8acbf34a811","name","indexOf","push","dateString","Date","getFullYear","$80ce91662cd26072$export$b38f1b11c5e38f18","serializedState","JSON","stringify","localStorage","setItem","error","console","message","$80ce91662cd26072$export$9f183916f445c495","getItem","undefined","parse","$f2e078fcec063076$export$2e2bcd8739ae039","constructor","totalPages","page1","getMovies","$parcel$interopDefault","this","arrPaginationItems","addFirstPages","addEllipsisIfNeeded","addMiddlePages","addLastPage","createPagination","render","currentPage","arr","page","Math","min","activeEl","btn","createPaginationItem","startPage","max","endPage","atEnd","lastPage","activeClass","paginationItems","reset","insertAdjacentHTML","addEventListener","handlerBtn","el","remove","e","preventDefault","parseInt","target","dataset","isNaN","createButton","$df1db51f1d31cfcf$export$4a3145eab4db56d2","chosenPage","searchTerm","log","results","total_pages","$19F3f","getByQuery","$df1db51f1d31cfcf$export$49f9e704d857526c","data","$2shzp","get","$e5c465ec961d44e9$var$searchForm","$e5c465ec961d44e9$var$afterLoad","$e5c465ec961d44e9$var$afterSearching","searchMovies","formData","FormData","fromEntries","entries","length","window"],"version":3,"file":"catalog.a2a1e3cb.js.map"}