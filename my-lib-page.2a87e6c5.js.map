{"mappings":"8pBAAA,IAAAA,EAAAC,EAAA,S,+FAOMC,EAAO,CACXC,UAAWC,SAASC,cAAc,qBAClCC,WAAYF,SAASC,cAAc,sBACnCE,SAAUH,SAASC,cAAc,gBACjCG,eAAgBJ,SAASC,cAAc,eACvCI,YAAa,MAwBf,SAASC,IACPC,OAAOC,oBAAoB,UAAWC,GAErBF,OAAOG,SAASC,KACjBC,SAAS,qBACvBC,EAAAC,OAAOC,SAASC,QAGlBhB,SAASiB,KAAKC,UAAUC,OAAO,mBAC/BrB,EAAKK,SAASe,UAAUE,IAAI,Y,CAS9B,SAASX,EAAcY,GACF,WAAfA,EAAMC,MAAmBhB,G,UAGhBiB,I,OAAAA,EAAfC,EAAA5B,EAAA,CAAA4B,EAAAC,GAAAC,MAAA,SAAAC,EAA4BC,G,mFACP,EAAAC,EAAAC,gBAAeF,G,OAClCG,EADUC,EAAAC,M,4CADeC,MAAAC,KAAAC,U,UAKZL,EAAkBM,G,OAAlBC,EAAiBJ,MAAAC,KAAAC,U,UAAjBE,I,OAAAA,EAAfd,EAAA5B,EAAA,CAAA4B,EAAAC,GAAAC,MAAA,SAAAC,EAAiCU,G,IAG7BE,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAlB,EAIImB,EACAC,EAEFC,EAUEC,EAgDAC,E,yEA3ENC,QAAQC,IAAIhB,GAEVE,EASEF,EATFE,YACAC,EAQEH,EARFG,cACAC,EAOEJ,EAPFI,OACAC,EAMEL,EANFK,SACAC,EAKEN,EALFM,WACAC,EAIEP,EAJFO,MACAC,EAGER,EAHFQ,aACAC,EAEET,EAFFS,WACAlB,EACES,EADFT,GAGFwB,QAAQC,IAAI,gBAAiBd,GACvBQ,EAAgBN,EAAOa,KAAI,SAAAC,G,OAASA,EAAM3B,E,cACnB,EAAA4B,EAAAC,gBAAeV,G,OAAtCC,EAAchB,EAAAC,KAEhBgB,EAAY,GAEdA,EADkB,OAAhBV,EACU,uCAAmDmB,OAAZnB,GACxB,OAAlBC,EACG,uCAAqDkB,OAAdlB,GAGjD,yEAGEU,EAAS,uFASsBQ,OALxBT,EAAU,8GAUHS,OALiBd,EAAM,2NAOXc,OAFZb,EAAac,QACnB,GACA,oBAOCD,OAPiBZ,EAAW,gRAaKY,OANjCf,EAAWgB,QAAQ,GAAG,8NAWID,OALOV,EAAe,iKAQ8CU,OAHpEhB,EAAS,qPAG8DgB,OAAH9B,EAAG,gEAMhH9B,EAAKM,eAAewD,UAAYV,EAEhCpD,EAAKO,YAAcL,SAAS6D,eAAe,oBAC3CT,QAAQC,IAAI,gBAAiBvD,EAAKO,aAE5B8C,EAAW,SAAAW,IACf,EAAAC,EAAAC,kBAAiB3B,E,EAGnBvC,EAAKO,YAAY4D,iBAAiB,QAASd,G,6CAhFbjB,MAAAC,KAAAC,U,CAhDhCpC,SAASiE,iBAAiB,SAI1B,SAAqB5C,GACnB,IAAM6C,EAAS7C,EAAM8C,OAAOC,QAAQ,UACpC,GAAe,OAAXF,EAAiB,Q,SAqCKtC,GAAbL,EAAYW,MAAAC,KAAAC,U,EAlCzBiC,CADeH,EAAOI,QAAQ1C,IAGbrB,OAAOG,SAASC,KACjBC,SAAS,qBACvBC,EAAAC,OAAOC,SAASwD,OAGlBvE,SAASiB,KAAKC,UAAUE,IAAI,mBAC5Bb,OAAO0D,iBAAiB,UAAWxD,GACnCX,EAAKK,SAASe,UAAUC,OAAO,Y,IAjBjCrB,EAAKI,WAAW+D,iBAAiB,QAAS3D,GAC1CR,EAAKK,SAAS8D,iBAAiB,SA+B/B,SAAyB5C,GACnBA,EAAMmD,gBAAkBnD,EAAM8C,QAChC7D,G,4MClDJ,IAAAmE,EAAA5E,EAAA,S,aACM6E,EAAiBC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,GAE9DC,EAAmB,SAAAC,G,IACvBzC,EAAWyC,EAAXzC,YACAK,EAAKoC,EAALpC,MACAqC,EAAID,EAAJC,KACAC,EAAcF,EAAdE,eACAC,EAAYH,EAAZG,aACAtC,EAAYmC,EAAZnC,aACAjB,EAAEoD,EAAFpD,GACAa,EAAMuC,EAANvC,OACA2C,EAASJ,EAATI,UAEMC,EACJ5C,GAAUA,EAAO6C,OAAS,EAAI7C,EAAOa,KAAI,SAAAC,G,OAASA,EAAM3B,E,IAAMwD,EAIhE,IAFqBV,EAAea,MAAK,SAAAC,G,OAASA,EAAM5D,KAAOA,C,IAkB7D,OAfA8C,EAAee,QAAQ,CACrBlD,cACAK,QACAqC,OACAC,iBACAC,eACAtC,eACAjB,KACAyD,cAEFR,aAAaa,QAAQ,QAASf,KAAKgB,UAAUjB,SAC7CkB,EAAAC,OAAOC,QACL,gCACA,qCAIJF,EAAAC,OAAOE,QACL,mBACA,6D,EAcEC,EATiB,WACrB,IACE,IAAMC,EAAWpB,aAAaC,QAAQ,SACtC,OAAOH,KAAKC,MAAMqB,IAAa,E,CAC/B,MAAOC,GACP9C,QAAQ8C,MAAMA,E,EAIEC,GAEdC,EACJ5E,EAAAiD,EAAA,CAAG,IAAI4B,IAAIL,EAAYM,SAAQ,SAAAjE,G,OAAQA,EAAKgD,S,MAG9CjC,QAAQC,IAAI,wBAAyB+C,E,2FC3DrC,IAAAxG,EAAAC,EAAA,S,mCAEe0G,EAAeC,G,OAAfC,EAAcvE,MAAAC,KAAAC,U,UAAdqE,I,OAAAA,EAAfjF,EAAA5B,EAAA,CAAA4B,EAAAC,GAAAC,MAAA,SAAAC,EAA8B6E,G,IACtBE,EACAjE,EAEAkE,E,mFAHa,EAAA9E,EAAA+E,Y,cAAbF,EAAI1E,EAAAC,KACJQ,EAASiE,EAAKjE,OAEdkE,EAAYH,EAAIlD,KAAI,SAAA1B,GACxB,IAAMiF,EAAQpE,EAAOqE,MAAK,SAAAvD,G,OAASA,EAAM3B,KAAOA,C,IAChD,OAAOiF,EAAQA,EAAM5B,KAAO,E,sBAEvB0B,EAAUI,KAAK,O,4CARK7E,MAAAC,KAAAC,U","sources":["src/partials/js/modal.js","src/partials/js/my-lib/lib-storage.js","src/partials/js/my-lib/example-my-lib.js"],"sourcesContent":["import { swiper } from '../../partials/js/hero/hero';\nimport { getInfoByMovie } from './api';\nimport { getGenre } from './api';\nimport { addFilmToStorage } from './my-lib/lib-storage';\nimport { onWatchTrailer } from './hero/trailer-modal';\nimport { getGenresByIds } from './my-lib/example-my-lib';\n\nconst refs = {\n  openModal: document.querySelector('[data-modal-open]'),\n  closeModal: document.querySelector('[data-modal-close]'),\n  backdrop: document.querySelector('[data-modal]'),\n  upcomingWrapLi: document.querySelector('.modal-info'),\n  addToLibBtn: null,\n};\n\ndocument.addEventListener('click', onOpenModal);\nrefs.closeModal.addEventListener('click', onCloseModal);\nrefs.backdrop.addEventListener('click', onBackdropClick);\n\nfunction onOpenModal(event) {\n  const cardEl = event.target.closest('.is-id');\n  if (cardEl === null) return;\n\n  const cardId = cardEl.dataset.id;\n  getMovieById(cardId);\n\n  let currentUrl = window.location.href;\n  if (!currentUrl.includes('my-lib-page.html')) {\n    swiper.autoplay.stop();\n  }\n\n  document.body.classList.add('not-scroll-body');\n  window.addEventListener('keydown', onEscKeyPress);\n  refs.backdrop.classList.remove('is-hidden');\n}\n\nfunction onCloseModal() {\n  window.removeEventListener('keydown', onEscKeyPress);\n\n  let currentUrl = window.location.href;\n  if (!currentUrl.includes('my-lib-page.html')) {\n    swiper.autoplay.start();\n  }\n\n  document.body.classList.remove('not-scroll-body');\n  refs.backdrop.classList.add('is-hidden');\n}\n\nfunction onBackdropClick(event) {\n  if (event.currentTarget === event.target) {\n    onCloseModal();\n  }\n}\n\nfunction onEscKeyPress(event) {\n  if (event.code === 'Escape') onCloseModal();\n}\n\nasync function getMovieById(id) {\n  const data = await getInfoByMovie(id);\n  renderFilmInModal(data);\n}\n\nasync function renderFilmInModal(film) {\n  console.log(film);\n  const {\n    poster_path,\n    backdrop_path,\n    genres,\n    overview,\n    popularity,\n    title,\n    vote_average,\n    vote_count,\n    id,\n  } = film;\n  \n  console.log('poster_path: ', poster_path);\n  const genresListIds = genres.map(genre => genre.id);\n  const formatedGenres = await getGenresByIds(genresListIds);\n\n  let imagePath = '';\n  if (poster_path !== null) {\n    imagePath = `https://image.tmdb.org/t/p/original/${poster_path}`;\n  } else if (backdrop_path !== null) {\n    imagePath = `https://image.tmdb.org/t/p/original/${backdrop_path}`;\n  } else {\n    imagePath =\n      'https://d2ths1nqi4sbhh.cloudfront.net/images/no-image.png?v=3884857787';\n  }\n\n  const markup = `\n    <div class=\"modal-card\">\n      <img\n        class=\"modal-img\"\n        src=\"${imagePath}\"\n        alt=\" \"\n      />\n\n      <div class=\"modal-card-wrap\">\n        <h3 class=\"modal-card-title\">${title}</h3>\n\n          <div class=\"modal-card-vote-wrap\">\n            <div class=\"modal-card-vote color-description\"><span>Vote / Votes</span></div>\n            <div class=\"modal-card-vote-data\">\n              <span>${vote_average.toFixed(\n                1\n              )}</span> / <span>${vote_count}</span>\n            </div>\n          </div>\n        \n          <div class=\"modal-card-popularity-wrap\">\n            <span class=\"modal-card-popularity-text color-description\">Popularity</span>\n            <span class=\"modal-card-popularity-data\"\n              >${popularity.toFixed(1)}</span\n            >\n          </div>\n\n          <div class=\"modal-card-genre-wrap\">\n            <span class=\"modal-card-genre-text color-description\">Genre</span>\n            <span class=\"modal-card-genre-data\">${formatedGenres}</span>\n          </div>\n        \n        <span class=\"modal-card-about-title color-description\">About</span>\n\n        <p class=\"modal-card-about-text\">${overview}</p>\n\n        <button class=\"modal-button gap-right\" id=\"add-to-lib-modal\" type=\"button\"><span>Add to my library</span></button>\n         <button type=\"button\" class=\"hero-btn modal-button hero-btn-trailer\" id=\"hero-btn-trailer\" data-id=\"${id}\">\n    Watch trailer\n  </button>\n      </div>\n    </div>`;\n\n  refs.upcomingWrapLi.innerHTML = markup;\n\n  refs.addToLibBtn = document.getElementById('add-to-lib-modal');\n  console.log('addToLibBtn: ', refs.addToLibBtn);\n\n  const addToLib = evt => {\n    addFilmToStorage(film);\n  };\n\n  refs.addToLibBtn.addEventListener('click', addToLib);\n}\n\nexport { refs };\n","import { Report } from 'notiflix';\nconst localMoviesArr = JSON.parse(localStorage.getItem('films')) || [];\n\nconst addFilmToStorage = ({\n  poster_path,\n  title,\n  name,\n  first_air_date,\n  release_date,\n  vote_average,\n  id,\n  genres,\n  genre_ids,\n}) => {\n  const genresIds =\n    genres && genres.length > 0 ? genres.map(genre => genre.id) : genre_ids;\n\n  const isFilmExists = localMoviesArr.some(movie => movie.id === id);\n\n  if (!isFilmExists) {\n    localMoviesArr.unshift({\n      poster_path,\n      title,\n      name,\n      first_air_date,\n      release_date,\n      vote_average,\n      id,\n      genresIds,\n    });\n    localStorage.setItem('films', JSON.stringify(localMoviesArr));\n    Report.success(\n      'Film was added to the library',\n      'Go to the library and check it :)'\n    );\n    return;\n  }\n  Report.failure(\n    'Is added already',\n    \"Sorry, but you've already added this film to your library \"\n  );\n  // removeItemFromLocalStorage(film.id);\n};\n\nconst getParsedFilms = () => {\n  try {\n    const filmsArr = localStorage.getItem('films');\n    return JSON.parse(filmsArr) || [];\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst parsedFilms = getParsedFilms();\n\nconst parsedFilmsGenreIds = [\n  ...new Set(parsedFilms.flatMap(film => film.genresIds)),\n];\n\nconsole.log('parsedFilmsGenreIds: ', parsedFilmsGenreIds);\n\nexport { parsedFilms, parsedFilmsGenreIds, addFilmToStorage };\n","import { getGenre } from '../api';\n\nasync function getGenresByIds(ids) {\n  const data = await getGenre();\n  const genres = data.genres;\n\n  const arrGenres = ids.map(id => {\n    const genre = genres.find(genre => genre.id === id);\n    return genre ? genre.name : '';\n  });\n  return arrGenres.join(', ');\n}\n\nexport { getGenresByIds };\n"],"names":["$bpxeT","parcelRequire","$161b301ea1fa5d59$export$21666b427502ea6d","openModal","document","querySelector","closeModal","backdrop","upcomingWrapLi","addToLibBtn","$161b301ea1fa5d59$var$onCloseModal","window","removeEventListener","$161b301ea1fa5d59$var$onEscKeyPress","location","href","includes","$i6wQM","swiper","autoplay","start","body","classList","remove","add","event","code","$161b301ea1fa5d59$var$_getMovieById","$parcel$interopDefault","$2TvXO","mark","_callee","id","$jyO6b","getInfoByMovie","$161b301ea1fa5d59$var$renderFilmInModal","_ctx","sent","apply","this","arguments","film","$161b301ea1fa5d59$var$_renderFilmInModal","poster_path","backdrop_path","genres","overview","popularity","title","vote_average","vote_count","genresListIds","formatedGenres","imagePath","markup","addToLib","console","log","map","genre","$kMKXw","getGenresByIds","concat","toFixed","innerHTML","getElementById","evt","$kaqNk","addFilmToStorage","addEventListener","cardEl","target","closest","$161b301ea1fa5d59$var$getMovieById","dataset","stop","currentTarget","$8nrFW","$eae986af956624d5$var$localMoviesArr","JSON","parse","localStorage","getItem","$eae986af956624d5$export$d326f28fa561aa06","param","name","first_air_date","release_date","genre_ids","genresIds","length","some","movie","unshift","setItem","stringify","$6JpON","Report","success","failure","$eae986af956624d5$export$c118d883ed694a49","filmsArr","error","$eae986af956624d5$var$getParsedFilms","$eae986af956624d5$export$c149f286d6cc84b6","Set","flatMap","$f21cb773459bdad5$export$f426a0af08472714","ids","$f21cb773459bdad5$var$_getGenresByIds","data","arrGenres","getGenre","genre1","find","join"],"version":3,"file":"my-lib-page.2a87e6c5.js.map"}