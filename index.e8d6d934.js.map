{"mappings":"oeAAAA,EAAA,SCAA,IAAAC,EAAAD,EAAA,SAEA,MAAME,EAAO,CACXC,UAAWC,SAASC,cAAc,qBAClCC,WAAYF,SAASC,cAAc,sBACnCE,SAAUH,SAASC,cAAc,iBAenC,SAASG,IACPC,OAAOC,oBAAoB,UAAWC,GACtCT,EAAKK,SAASK,UAAUC,IAAI,Y,CAS9B,SAASF,EAAcG,GACF,WAAfA,EAAMC,MAAmBP,G,CAxB/BN,EAAKC,UAAUa,iBAAiB,SAIhC,SAAqBF,IAuBrBG,eAA4BC,GAC1B,MAAMC,QAAa,EAAAlB,EAAAmB,gBAAeF,GAClCG,QAAQC,IAAIH,E,EAvBZI,CADeT,EAAMU,OAAOC,QAAQ,MAAMC,QAAQR,IAGlDT,OAAOO,iBAAiB,UAAWL,GACnCT,EAAKK,SAASK,UAAUe,OAAO,Y,IARjCzB,EAAKI,WAAWU,iBAAiB,QAASR,GAC1CN,EAAKK,SAASS,iBAAiB,SAe/B,SAAyBF,GACnBA,EAAMc,gBAAkBd,EAAMU,QAChChB,G,2CCtBJ,MAAMqB,EAAczB,SAASC,cAAc,sBACrCyB,EAAiB1B,SAASC,cAAc,kBA4D9CY,eAAec,EAAcC,GAC3B,MACMC,SADa,EAAAhC,EAAAiC,aACCD,OAMpB,OAJkBD,EAAIG,KAAIjB,IACxB,MAAMkB,EAAQH,EAAOI,MAAKC,GAASA,EAAMpB,KAAOA,IAChD,OAAOkB,EAAQA,EAAMG,KAAO,EAAE,IAEfC,KAAK,K,CAnETpC,SAASC,cAAc,sBAI/BW,iBAAiB,SAAS,KAC/ByB,SAASC,KAAO,cAAc,IAqKhCjC,OAAOO,iBAAiB,oBAlGxBC,iBACE,MAAM0B,mBAAEA,EAAkBC,iBAAEA,GAyE9B,WACE,MAAMC,EAAc,IAAIC,KAClBC,EAAcF,EAAYG,cAC1BC,EAAeC,OAAOL,EAAYM,WAAa,GAAGC,SAAS,EAAG,KAC9DC,EAAaH,OAAOL,EAAYS,WAAWF,SAAS,EAAG,KAEvDT,EAAqB,GAAGI,KAAeE,KAAgBI,IAEvDE,EAAoB,IAAIT,KAAKC,EAAaE,EAAc,GACxDO,EAAiB,IAAIV,KAAKS,EAAoB,GAAGD,UACjDG,EAA0BP,OAAOM,GAAgBJ,SAAS,EAAG,KAInE,MAAO,C,mBAAET,E,iBAFgB,GAAGI,KAAeE,KAAgBQ,I,CApFzDC,GACF,IACE,MAAMvC,QAAa,EAAAlB,EAAA0D,aAAYhB,EAAoBC,IAQvD3B,eAAkC2C,GAChCvC,QAAQC,IAAIsC,GACZ,MAAMC,cACJA,EAAaC,UACbA,EAASC,WACTA,EAAUC,aACVA,EAAYC,MACZA,EAAKC,aACLA,EAAYC,WACZA,EAAUC,SACVA,GACER,EAEES,QAAmBtC,EAAc+B,GAEjCQ,EAAS,sHAEqET,4GAGxCI,sQAKaD,0PAMjCE,oBAA+BC,kVAQKJ,EAAWQ,QACvD,wNAMuCF,6KAMPD,gKAOhDtC,EAAe0C,mBAAmB,YAAaF,E,CAjE7CG,CAuFJ,SAAwBC,GACtB,MAAMC,EAAcC,KAAKC,MAAMD,KAAKE,SAAWJ,EAAMK,QACrD,OAAOL,EAAMC,E,CA1FSK,CAAe7D,EAAK8D,S,CAExC,MAAOC,GACP7D,QAAQC,IAAI4D,EAAMC,Q,KA2FtB1E,OAAOO,iBAAiB,oBAjKxBC,kBAUAA,eAAuCmE,GACrC,MAAMd,QAAee,QAAQC,IAC3BF,EAAgBjD,KACdlB,OAAO4C,cACLA,EAAaI,MACbA,EAAKD,aACLA,EAAYF,UACZA,EAAS5C,GACTA,EAAEqE,YACFA,MAEA,MAAMlB,QAAmBtC,EAAc+B,GAGvC,OAFAzC,QAAQC,IAAI+C,GAEL,mCAAmCnD,gKAIIqE,2MAMEtB,mEACAI,OAAgBL,EAAawB,MAC3E,EACA,gGAIE,KAKV3D,EAAY4D,UAAYnB,EAAO9B,KAAK,G,CA3CpCkD,QAFmB,EAAAzF,EAAA0F,sBACgCV,QAKtCO,MAAM,EAAG,G","sources":["src/index.js","src/partials/js/modal.js","src/partials/js/home/example-home.js"],"sourcesContent":["import * as hero from './partials/js/hero/hero';\nimport * as hero from './partials/js/home/example-home';\n// import { Roboto400, Roboto500, Roboto700 } from './partials/js/fonts';\n// import '@fontsource/roboto/400.css';\n// import '@fontsource/roboto/500.css';\n// import '@fontsource/roboto/700.css';\n","import { getInfoByMovie } from './api';\n\nconst refs = {\n  openModal: document.querySelector('[data-modal-open]'),\n  closeModal: document.querySelector('[data-modal-close]'),\n  backdrop: document.querySelector('[data-modal]'),\n};\n\nrefs.openModal.addEventListener('click', onOpenModal);\nrefs.closeModal.addEventListener('click', onCloseModal);\nrefs.backdrop.addEventListener('click', onBackdropClick);\n\nfunction onOpenModal(event) {\n  const cardId = event.target.closest('Li').dataset.id;\n  getMovieById(cardId);\n\n  window.addEventListener('keydown', onEscKeyPress);\n  refs.backdrop.classList.remove('is-hidden');\n}\n\nfunction onCloseModal() {\n  window.removeEventListener('keydown', onEscKeyPress);\n  refs.backdrop.classList.add('is-hidden');\n}\n\nfunction onBackdropClick(event) {\n  if (event.currentTarget === event.target) {\n    onCloseModal();\n  }\n}\n\nfunction onEscKeyPress(event) {\n  if (event.code === 'Escape') onCloseModal();\n}\n\nasync function getMovieById(id) {\n  const data = await getInfoByMovie(id);\n  console.log(data);\n}\n","import * as hero from '../../js/modal';\nimport { getWeeklyTrending } from '../api';\nimport { getUpcoming } from '../api';\nimport { getGenre } from '../api';\n\nconst listOfFilms = document.querySelector('.weekly-cards-wrap');\nconst upcomingWrapLi = document.querySelector('.upcoming_wrap');\nconst seeAll = document.querySelector('.weekly-title-link');\n\n// ================See all=================\n\nseeAll.addEventListener('click', () => {\n  location.href = 'catalog.html';\n});\n\n// ================ Weekly trends section ==============\n\nasync function getWeeklyTrends() {\n  const data = await getWeeklyTrending();\n  const firstThreeFilms = getFirstThreeElements(data.results);\n  renderWeeklyThreeTrends(firstThreeFilms);\n}\n\nfunction getFirstThreeElements(array) {\n  return array.slice(0, 3);\n}\n\nasync function renderWeeklyThreeTrends(firstThreeFilms) {\n  const markup = await Promise.all(\n    firstThreeFilms.map(\n      async ({\n        backdrop_path,\n        title,\n        release_date,\n        genre_ids,\n        id,\n        poster_path,\n      }) => {\n        const listGenres = await getGenresById(genre_ids);\n        console.log(listGenres);\n\n        return `<li class=\"weekly-card\" data-id=${id}>\n        <div class=\"weekly-container-image\">\n          <img\n            class=\"weekly-card-image\"\n           src=\"https://image.tmdb.org/t/p/original/${poster_path}\"\n            alt=\"\"\n          />\n         <div class=\"overlay\"></div>       \n        </div>\n        <div class=\"weekly-card-description\">\n          <span class=\"weekly-card-description-title\">${title}</span>\n          <span class=\"weekly-card-description-other\">${listGenres} | ${release_date.slice(\n          0,\n          4\n        )}</span>\n        </div>\n        <div class=\"weekly-card-raiting\">Stars5*</div>\n      </li>`;\n      }\n    )\n  );\n\n  listOfFilms.innerHTML = markup.join('');\n}\n\nasync function getGenresById(ids) {\n  const data = await getGenre();\n  const genres = data.genres;\n\n  const arrGenres = ids.map(id => {\n    const genre = genres.find(genre => genre.id === id);\n    return genre ? genre.name : '';\n  });\n  return arrGenres.join(', ');\n}\n\n// ================ Upcoming this month section ==============\n\nasync function getUpcomingFilm() {\n  const { formattedStartDate, formattedEndDate } =\n    getCurrentEndLastDayOfMonth();\n  try {\n    const data = await getUpcoming(formattedStartDate, formattedEndDate);\n    const randomValue = getRandomValue(data.results);\n    renderUpcomingFilm(randomValue);\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nasync function renderUpcomingFilm(upcomingFilm) {\n  console.log(upcomingFilm);\n  const {\n    backdrop_path,\n    genre_ids,\n    popularity,\n    release_date,\n    title,\n    vote_average,\n    vote_count,\n    overview,\n  } = upcomingFilm;\n\n  const listGenres = await getGenresById(genre_ids);\n\n  const markup = `<div class=\"upcoming-card\">\n\n            <img class=\"upcoming-card-img\" src=\"https://image.tmdb.org/t/p/original/${backdrop_path}\" alt=\" \" />\n\n          <div class=\"upcoming-card-wrap\">\n            <h3 class=\"upcoming-card-title\">${title}</h3>\n\n            <div class=\"upcoming-card-numbers-wrap-top\">\n              <div class=\"upcoming-card-release-wrap\">\n                <span class=\"upcoming-card-release-text\">Release date</span>\n                <span class=\"upcoming-card-release-data\">${release_date}</span>\n              </div>\n\n              <div class=\"upcoming-card-vote-wrap\">\n                <div class=\"upcoming-card-vote\"><span>Vote / Votes</span></div>\n                <div class=\"upcoming-card-vote-data\">\n                  <span>${vote_average}</span> / <span>${vote_count}</span>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"upcoming-card-numbers-wrap-down\">\n              <div class=\"upcoming-card-popularity-wrap\">\n                <span class=\"upcoming-card-popularity-text\">Popularity</span>\n                <span class=\"upcoming-card-popularity-data\">${popularity.toFixed(\n                  1\n                )}</span>\n              </div>\n\n              <div class=\"upcoming-card-genre-wrap\">\n                <span class=\"upcoming-card-genre-text\">Genre</span>\n                <span class=\"upcoming-card-genre-data\">${listGenres}</span>\n              </div>\n            </div>\n\n            <span class=\"upcoming-card-about-title\">About</span>\n\n            <p class=\"upcoming-card-about-text\">${overview}</p>\n\n            <button class=\"upcoming-button\" type=\"button\">\n              Add to my library\n            </button>\n          </div>\n        </div>`;\n  upcomingWrapLi.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction getCurrentEndLastDayOfMonth() {\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const currentMonth = String(currentDate.getMonth() + 1).padStart(2, '0'); // Додаємо 1, оскільки номер місяця починається з 0\n  const currentDay = String(currentDate.getDate()).padStart(2, '0');\n\n  const formattedStartDate = `${currentYear}-${currentMonth}-${currentDay}`;\n\n  const nextMonthFirstDay = new Date(currentYear, currentMonth, 1);\n  const lastDayOfMonth = new Date(nextMonthFirstDay - 1).getDate();\n  const lastDayOfMonthFormatted = String(lastDayOfMonth).padStart(2, '0');\n\n  const formattedEndDate = `${currentYear}-${currentMonth}-${lastDayOfMonthFormatted}`;\n\n  return { formattedStartDate, formattedEndDate };\n}\n\n// =========== function getRandomValue =============\n\nfunction getRandomValue(array) {\n  const randomIndex = Math.floor(Math.random() * array.length);\n  return array[randomIndex];\n}\n\nwindow.addEventListener('DOMContentLoaded', getUpcomingFilm);\nwindow.addEventListener('DOMContentLoaded', getWeeklyTrends);\n"],"names":["parcelRequire","$19F3f","$51a648048b126082$var$refs","openModal","document","querySelector","closeModal","backdrop","$51a648048b126082$var$onCloseModal","window","removeEventListener","$51a648048b126082$var$onEscKeyPress","classList","add","event","code","addEventListener","async","id","data","getInfoByMovie","console","log","$51a648048b126082$var$getMovieById","target","closest","dataset","remove","currentTarget","$756bd49929fd9e28$var$listOfFilms","$756bd49929fd9e28$var$upcomingWrapLi","$756bd49929fd9e28$var$getGenresById","ids","genres","getGenre","map","genre1","find","genre","name","join","location","href","formattedStartDate","formattedEndDate","currentDate","Date","currentYear","getFullYear","currentMonth","String","getMonth","padStart","currentDay","getDate","nextMonthFirstDay","lastDayOfMonth","lastDayOfMonthFormatted","$756bd49929fd9e28$var$getCurrentEndLastDayOfMonth","getUpcoming","upcomingFilm","backdrop_path","genre_ids","popularity","release_date","title","vote_average","vote_count","overview","listGenres","markup","toFixed","insertAdjacentHTML","$756bd49929fd9e28$var$renderUpcomingFilm","array","randomIndex","Math","floor","random","length","$756bd49929fd9e28$var$getRandomValue","results","error","message","firstThreeFilms","Promise","all","poster_path","slice","innerHTML","$756bd49929fd9e28$var$renderWeeklyThreeTrends","getWeeklyTrending"],"version":3,"file":"index.e8d6d934.js.map"}