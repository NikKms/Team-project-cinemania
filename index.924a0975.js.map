{"mappings":"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","sources":["src/index.js","src/partials/js/home/example-home.js","src/partials/js/modal.js"],"sourcesContent":["import * as hero from './partials/js/hero/hero';\nimport * as home from './partials/js/home/example-home';\nimport * as header from './partials/js/header/header';\n// import { Roboto400, Roboto500, Roboto700 } from './partials/js/fonts';\n// import '@fontsource/roboto/400.css';\n// import '@fontsource/roboto/500.css';\n// import '@fontsource/roboto/700.css';\n","import * as hero from '../../js/modal';\nimport { getWeeklyTrending } from '../api';\nimport { getUpcoming } from '../api';\nimport { getGenre } from '../api';\n\nconst listOfFilms = document.querySelector('.weekly-cards-wrap');\nconst upcomingWrapLi = document.querySelector('.upcoming_wrap');\nconst seeAll = document.querySelector('.weekly-title-link');\n\n// ================See all=================\n\nseeAll.addEventListener('click', () => {\n  location.href = 'catalog.html';\n});\n\n// ================ Weekly trends section ==============\n\nasync function getWeeklyTrends() {\n  const data = await getWeeklyTrending();\n  const firstThreeFilms = getFirstThreeElements(data.results);\n  renderWeeklyThreeTrends(firstThreeFilms);\n}\n\nfunction getFirstThreeElements(array) {\n  return array.slice(0, 3);\n}\n\nasync function renderWeeklyThreeTrends(firstThreeFilms) {\n  const markup = await Promise.all(\n    firstThreeFilms.map(\n      async ({\n        backdrop_path,\n        title,\n        release_date,\n        genre_ids,\n        id,\n        poster_path,\n      }) => {\n        const listGenres = await getGenresById(genre_ids);\n        console.log(listGenres);\n\n        return `<li class=\"weekly-card\" data-id=${id}>\n        <div class=\"weekly-container-image\">\n          <img\n            class=\"weekly-card-image\"\n           src=\"https://image.tmdb.org/t/p/original/${poster_path}\"\n            alt=\"\"\n          />\n         <div class=\"overlay\"></div>       \n        </div>\n        <div class=\"weekly-card-description\">\n          <span class=\"weekly-card-description-title\">${title}</span>\n          <span class=\"weekly-card-description-other\">${listGenres} | ${release_date.slice(\n          0,\n          4\n        )}</span>\n        </div>\n        <div class=\"weekly-card-raiting\">Stars5*</div>\n      </li>`;\n      }\n    )\n  );\n\n  listOfFilms.innerHTML = markup.join('');\n}\n\nasync function getGenresById(ids) {\n  const data = await getGenre();\n  const genres = data.genres;\n\n  const arrGenres = ids.map(id => {\n    const genre = genres.find(genre => genre.id === id);\n    return genre ? genre.name : '';\n  });\n  return arrGenres.join(', ');\n}\n\n// ================ Upcoming this month section ==============\n\nasync function getUpcomingFilm() {\n  const { formattedStartDate, formattedEndDate } =\n    getCurrentEndLastDayOfMonth();\n  try {\n    const data = await getUpcoming(formattedStartDate, formattedEndDate);\n    const randomValue = getRandomValue(data.results);\n    renderUpcomingFilm(randomValue);\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nasync function renderUpcomingFilm(upcomingFilm) {\n  console.log(upcomingFilm);\n  const {\n    backdrop_path,\n    genre_ids,\n    popularity,\n    release_date,\n    title,\n    vote_average,\n    vote_count,\n    overview,\n  } = upcomingFilm;\n\n  const listGenres = await getGenresById(genre_ids);\n\n  const markup = `<div class=\"upcoming-card\">\n\n            <img class=\"upcoming-card-img\" src=\"https://image.tmdb.org/t/p/original/${backdrop_path}\" alt=\" \" />\n\n          <div class=\"upcoming-card-wrap\">\n            <h3 class=\"upcoming-card-title\">${title}</h3>\n\n            <div class=\"upcoming-card-numbers-wrap-top\">\n              <div class=\"upcoming-card-release-wrap\">\n                <span class=\"upcoming-card-release-text\">Release date</span>\n                <span class=\"upcoming-card-release-data\">${release_date}</span>\n              </div>\n\n              <div class=\"upcoming-card-vote-wrap\">\n                <div class=\"upcoming-card-vote\"><span>Vote / Votes</span></div>\n                <div class=\"upcoming-card-vote-data\">\n                  <span>${vote_average}</span> / <span>${vote_count}</span>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"upcoming-card-numbers-wrap-down\">\n              <div class=\"upcoming-card-popularity-wrap\">\n                <span class=\"upcoming-card-popularity-text\">Popularity</span>\n                <span class=\"upcoming-card-popularity-data\">${popularity.toFixed(\n                  1\n                )}</span>\n              </div>\n\n              <div class=\"upcoming-card-genre-wrap\">\n                <span class=\"upcoming-card-genre-text\">Genre</span>\n                <span class=\"upcoming-card-genre-data\">${listGenres}</span>\n              </div>\n            </div>\n\n            <span class=\"upcoming-card-about-title\">About</span>\n\n            <p class=\"upcoming-card-about-text\">${overview}</p>\n\n            <button class=\"upcoming-button\" type=\"button\">\n              Add to my library\n            </button>\n          </div>\n        </div>`;\n  upcomingWrapLi.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction getCurrentEndLastDayOfMonth() {\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const currentMonth = String(currentDate.getMonth() + 1).padStart(2, '0'); // Додаємо 1, оскільки номер місяця починається з 0\n  const currentDay = String(currentDate.getDate()).padStart(2, '0');\n\n  const formattedStartDate = `${currentYear}-${currentMonth}-${currentDay}`;\n\n  const nextMonthFirstDay = new Date(currentYear, currentMonth, 1);\n  const lastDayOfMonth = new Date(nextMonthFirstDay - 1).getDate();\n  const lastDayOfMonthFormatted = String(lastDayOfMonth).padStart(2, '0');\n\n  const formattedEndDate = `${currentYear}-${currentMonth}-${lastDayOfMonthFormatted}`;\n\n  return { formattedStartDate, formattedEndDate };\n}\n\n// =========== function getRandomValue =============\n\nfunction getRandomValue(array) {\n  const randomIndex = Math.floor(Math.random() * array.length);\n  return array[randomIndex];\n}\n\nwindow.addEventListener('DOMContentLoaded', getUpcomingFilm);\nwindow.addEventListener('DOMContentLoaded', getWeeklyTrends);\n","import { getInfoByMovie } from './api';\n\nconst refs = {\n  openModal: document.querySelector('[data-modal-open]'),\n  closeModal: document.querySelector('[data-modal-close]'),\n  backdrop: document.querySelector('[data-modal]'),\n};\n\nrefs.openModal.addEventListener('click', onOpenModal);\nrefs.closeModal.addEventListener('click', onCloseModal);\nrefs.backdrop.addEventListener('click', onBackdropClick);\n\nfunction onOpenModal(event) {\n  const cardId = event.target.closest('Li').dataset.id;\n  getMovieById(cardId);\n\n  window.addEventListener('keydown', onEscKeyPress);\n  refs.backdrop.classList.remove('is-hidden');\n}\n\nfunction onCloseModal() {\n  window.removeEventListener('keydown', onEscKeyPress);\n  refs.backdrop.classList.add('is-hidden');\n}\n\nfunction onBackdropClick(event) {\n  if (event.currentTarget === event.target) {\n    onCloseModal();\n  }\n}\n\nfunction onEscKeyPress(event) {\n  if (event.code === 'Escape') onCloseModal();\n}\n\nasync function getMovieById(id) {\n  const data = await getInfoByMovie(id);\n  console.log(data);\n}\n"],"names":["parcelRequire","$bpxeT","$161b301ea1fa5d59$var$refs","openModal","document","querySelector","closeModal","backdrop","$161b301ea1fa5d59$var$onCloseModal","window","removeEventListener","$161b301ea1fa5d59$var$onEscKeyPress","classList","add","event","code","$161b301ea1fa5d59$var$_getMovieById","$parcel$interopDefault","$2TvXO","mark","_callee","id","data","$jyO6b","getInfoByMovie","_ctx","sent","console","log","apply","this","arguments","addEventListener","$161b301ea1fa5d59$var$getMovieById","target","closest","dataset","remove","currentTarget","$ef95d285b54824a0$var$listOfFilms","$ef95d285b54824a0$var$upcomingWrapLi","$ef95d285b54824a0$var$_getWeeklyTrends","getWeeklyTrending","$ef95d285b54824a0$var$renderWeeklyThreeTrends","$ef95d285b54824a0$var$getFirstThreeElements","results","array","slice","firstThreeFilms","$ef95d285b54824a0$var$_renderWeeklyThreeTrends","_callee1","markup","Promise","all","map","param","title","release_date","genre_ids","poster_path","listGenres","backdrop_path","$ef95d285b54824a0$var$getGenresById","concat","_ctx1","innerHTML","join","ids","$ef95d285b54824a0$var$_getGenresById","genres","arrGenres","getGenre","genre1","find","genre","name","$ef95d285b54824a0$var$_getUpcomingFilm","ref","formattedStartDate","formattedEndDate","$ef95d285b54824a0$var$getCurrentEndLastDayOfMonth","getUpcoming","$ef95d285b54824a0$var$renderUpcomingFilm","$ef95d285b54824a0$var$getRandomValue","t0","message","upcomingFilm","$ef95d285b54824a0$var$_renderUpcomingFilm","popularity","vote_average","vote_count","overview","toFixed","insertAdjacentHTML","currentDate","Date","currentYear","getFullYear","currentMonth","String","getMonth","padStart","currentDay","getDate","nextMonthFirstDay","lastDayOfMonth","lastDayOfMonthFormatted","Math","floor","random","length","location","href"],"version":3,"file":"index.924a0975.js.map"}