{"mappings":"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","sources":["src/partials/js/home/example-home.js","src/partials/js/modal.js"],"sourcesContent":["import * as hero from '../../js/modal';\nimport { getWeeklyTrending } from '../api';\nimport { getUpcoming } from '../api';\nimport { getGenre } from '../api';\n\nconst listOfFilms = document.querySelector('.weekly-cards-wrap');\nconst upcomingWrapLi = document.querySelector('.upcoming_wrap');\nconst seeAll = document.querySelector('.weekly-title-link');\n\n// ================See all=================\n\nseeAll.addEventListener('click', () => {\n  location.href = 'catalog.html';\n});\n\n// ================ Weekly trends section ==============\n\nasync function getWeeklyTrends() {\n  const data = await getWeeklyTrending();\n\n  const firstThreeFilms = getFirstThreeElements(data.results);\n  console.log(firstThreeFilms);\n  renderWeeklyThreeTrends(firstThreeFilms);\n}\n\nfunction getFirstThreeElements(array) {\n  return array.slice(0, 3);\n}\n\nasync function renderWeeklyThreeTrends(firstThreeFilms) {\n  const markup = await Promise.all(\n    firstThreeFilms.map(\n      async ({\n        backdrop_path,\n        title,\n        release_date,\n        genre_ids,\n        id,\n        poster_path,\n        name,\n        first_air_date,\n      }) => {\n        const listGenres = await getGenresById(genre_ids);\n\n        return `<li class=\"weekly-card\" >\n        <div class=\"weekly-container-image\">\n          <img\n            class=\"weekly-card-image\"\n           src=\"https://image.tmdb.org/t/p/original/${poster_path}\"\n            alt=\"\"\n          />\n         <div class=\"overlay is-id\" data-id=${id}></div>       \n        </div>\n        <div class=\"weekly-card-description\">\n          <span class=\"weekly-card-description-title\">${title || name}</span>\n          <span class=\"weekly-card-description-other\">${listGenres} | ${\n          release_date\n            ? release_date.substring(0, 4)\n            : first_air_date.substring(0, 4)\n        }</span>\n        </div>\n        <div class=\"weekly-card-raiting\">Stars5*</div>\n      </li>`;\n      }\n    )\n  );\n\n  listOfFilms.innerHTML = markup.join('');\n}\n\nasync function getGenresById(ids) {\n  const data = await getGenre();\n  const genres = data.genres;\n\n  const arrGenres = ids.map(id => {\n    const genre = genres.find(genre => genre.id === id);\n    return genre ? genre.name : '';\n  });\n  return arrGenres.join(', ');\n}\n\n// ================ Upcoming this month section ==============\n\nasync function getUpcomingFilm() {\n  const { formattedStartDate, formattedEndDate } =\n    getCurrentEndLastDayOfMonth();\n  try {\n    const data = await getUpcoming(formattedStartDate, formattedEndDate);\n    const randomValue = getRandomValue(data.results);\n    renderUpcomingFilm(randomValue);\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nasync function renderUpcomingFilm(upcomingFilm) {\n  console.log(upcomingFilm);\n  const {\n    backdrop_path,\n    genre_ids,\n    popularity,\n    release_date,\n    title,\n    vote_average,\n    vote_count,\n    overview,\n  } = upcomingFilm;\n\n  const listGenres = await getGenresById(genre_ids);\n\n  const markup = `<div class=\"upcoming-card\">\n\n            <img class=\"upcoming-card-img\" src=\"https://image.tmdb.org/t/p/original/${backdrop_path}\" alt=\" \" />\n\n          <div class=\"upcoming-card-wrap\">\n            <h3 class=\"upcoming-card-title\">${title}</h3>\n\n            <div class=\"upcoming-card-numbers-wrap-top\">\n              <div class=\"upcoming-card-release-wrap\">\n                <span class=\"upcoming-card-release-text\">Release date</span>\n                <span class=\"upcoming-card-release-data\">${release_date}</span>\n              </div>\n\n              <div class=\"upcoming-card-vote-wrap\">\n                <div class=\"upcoming-card-vote\"><span>Vote / Votes</span></div>\n                <div class=\"upcoming-card-vote-data\">\n                  <span>${vote_average}</span> / <span>${vote_count}</span>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"upcoming-card-numbers-wrap-down\">\n              <div class=\"upcoming-card-popularity-wrap\">\n                <span class=\"upcoming-card-popularity-text\">Popularity</span>\n                <span class=\"upcoming-card-popularity-data\">${popularity.toFixed(\n                  1\n                )}</span>\n              </div>\n\n              <div class=\"upcoming-card-genre-wrap\">\n                <span class=\"upcoming-card-genre-text\">Genre</span>\n                <span class=\"upcoming-card-genre-data\">${listGenres}</span>\n              </div>\n            </div>\n\n            <span class=\"upcoming-card-about-title\">About</span>\n\n            <p class=\"upcoming-card-about-text\">${overview}</p>\n\n            <button class=\"upcoming-button\" type=\"button\">\n              Add to my library\n            </button>\n          </div>\n        </div>`;\n  upcomingWrapLi.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction getCurrentEndLastDayOfMonth() {\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const currentMonth = String(currentDate.getMonth() + 1).padStart(2, '0'); // Додаємо 1, оскільки номер місяця починається з 0\n  const currentDay = String(currentDate.getDate()).padStart(2, '0');\n\n  const formattedStartDate = `${currentYear}-${currentMonth}-${currentDay}`;\n\n  const nextMonthFirstDay = new Date(currentYear, currentMonth, 1);\n  const lastDayOfMonth = new Date(nextMonthFirstDay - 1).getDate();\n  const lastDayOfMonthFormatted = String(lastDayOfMonth).padStart(2, '0');\n\n  const formattedEndDate = `${currentYear}-${currentMonth}-${lastDayOfMonthFormatted}`;\n\n  return { formattedStartDate, formattedEndDate };\n}\n\n// =========== function getRandomValue =============\n\nfunction getRandomValue(array) {\n  const randomIndex = Math.floor(Math.random() * array.length);\n  return array[randomIndex];\n}\n\nwindow.addEventListener('DOMContentLoaded', getUpcomingFilm);\nwindow.addEventListener('DOMContentLoaded', getWeeklyTrends);\n","import { getInfoByMovie } from './api';\nimport { getGenre } from './api';\n\nconst refs = {\n  openModal: document.querySelector('[data-modal-open]'),\n  closeModal: document.querySelector('[data-modal-close]'),\n  backdrop: document.querySelector('[data-modal]'),\n  upcomingWrapLi: document.querySelector('.upcoming_modal'),\n};\n\nrefs.openModal.addEventListener('click', onOpenModal);\nrefs.closeModal.addEventListener('click', onCloseModal);\nrefs.backdrop.addEventListener('click', onBackdropClick);\n\nfunction onOpenModal(event) {\n  console.log(event.target);\n  if (event.target.classList.contains('is-id')) {\n    const cardId = event.target.dataset.id;\n    getMovieById(cardId);\n  }\n\n  window.addEventListener('keydown', onEscKeyPress);\n  refs.backdrop.classList.remove('is-hidden');\n}\n\nfunction onCloseModal() {\n  window.removeEventListener('keydown', onEscKeyPress);\n  refs.backdrop.classList.add('is-hidden');\n}\n\nfunction onBackdropClick(event) {\n  if (event.currentTarget === event.target) {\n    onCloseModal();\n  }\n}\n\nfunction onEscKeyPress(event) {\n  if (event.code === 'Escape') onCloseModal();\n}\n\nasync function getMovieById(id) {\n  const data = await getInfoByMovie(id);\n  renderFilmInModal(data);\n}\n\nfunction renderFilmInModal(film) {\n  console.log(film);\n  const {\n    poster_path,\n    backdrop_path,\n    genres,\n    overview,\n    popularity,\n    title,\n    vote_average,\n    vote_count,\n  } = film;\n  const genresList = genres.map(genre => genre.name);\n  const formatedGenres = genresList.join(', ');\n\n  const imagePath =\n    poster_path !== null\n      ? `https://image.tmdb.org/t/p/original/${poster_path}`\n      : `https://image.tmdb.org/t/p/original/${backdrop_path}`;\n\n  const markup = `\n    <div class=\"modal-card\">\n      <img\n        class=\"modal-img\"\n        src=\"https://image.tmdb.org/t/p/original/${imagePath}\"\n        alt=\" \"\n      />\n\n      <div class=\"modal-card-wrap\">\n        <h3 class=\"modal-card-title\">${title}</h3>\n\n          <div class=\"modal-card-vote-wrap\">\n            <div class=\"modal-card-vote\"><span>Vote / Votes</span></div>\n            <div class=\"modal-card-vote-data\">\n              <span>${vote_average}</span> / <span>${vote_count}</span>\n            </div>\n          </div>\n        \n          <div class=\"modal-card-popularity-wrap\">\n            <span class=\"modal-card-popularity-text\">Popularity</span>\n            <span class=\"modal-card-popularity-data\"\n              >${popularity.toFixed(1)}</span\n            >\n          </div>\n\n          <div class=\"modal-card-genre-wrap\">\n            <span class=\"modal-card-genre-text\">Genre</span>\n            <span class=\"modal-card-genre-data\">${formatedGenres}</span>\n          </div>\n        \n        <span class=\"modal-card-about-title\">About</span>\n\n        <p class=\"modal-card-about-text\">${overview}</p>\n\n        <button class=\"modal-button\" type=\"button\">Add to my library</button>\n      </div>\n    </div>`;\n\n  refs.upcomingWrapLi.innerHTML = markup;\n}\n"],"names":["$bpxeT","parcelRequire","$161b301ea1fa5d59$var$refs","openModal","document","querySelector","closeModal","backdrop","upcomingWrapLi","$161b301ea1fa5d59$var$onCloseModal","window","removeEventListener","$161b301ea1fa5d59$var$onEscKeyPress","classList","add","event","code","$161b301ea1fa5d59$var$_getMovieById","$parcel$interopDefault","$2TvXO","mark","_callee","id","$jyO6b","getInfoByMovie","$161b301ea1fa5d59$var$renderFilmInModal","_ctx","sent","apply","this","arguments","film","console","log","poster_path","backdrop_path","genres","overview","popularity","title","vote_average","vote_count","formatedGenres","map","genre","name","join","imagePath","concat","markup","toFixed","innerHTML","addEventListener","target","contains","$161b301ea1fa5d59$var$getMovieById","dataset","remove","currentTarget","$ef95d285b54824a0$var$listOfFilms","$ef95d285b54824a0$var$upcomingWrapLi","$ef95d285b54824a0$var$_getWeeklyTrends","data","firstThreeFilms","getWeeklyTrending","$ef95d285b54824a0$var$getFirstThreeElements","results","$ef95d285b54824a0$var$renderWeeklyThreeTrends","array","slice","$ef95d285b54824a0$var$_renderWeeklyThreeTrends","_callee1","Promise","all","param","release_date","genre_ids","first_air_date","listGenres","$ef95d285b54824a0$var$getGenresById","substring","_ctx1","ids","$ef95d285b54824a0$var$_getGenresById","arrGenres","getGenre","genre1","find","$ef95d285b54824a0$var$_getUpcomingFilm","ref","formattedStartDate","formattedEndDate","$ef95d285b54824a0$var$getCurrentEndLastDayOfMonth","getUpcoming","$ef95d285b54824a0$var$renderUpcomingFilm","$ef95d285b54824a0$var$getRandomValue","t0","message","upcomingFilm","$ef95d285b54824a0$var$_renderUpcomingFilm","insertAdjacentHTML","currentDate","Date","currentYear","getFullYear","currentMonth","String","getMonth","padStart","currentDay","getDate","nextMonthFirstDay","lastDayOfMonth","lastDayOfMonthFormatted","Math","floor","random","length","location","href"],"version":3,"file":"index.7730b71c.js.map"}