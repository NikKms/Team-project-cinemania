{"mappings":"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","sources":["src/partials/js/my-lib/lib-main.js","src/partials/js/my-lib/lib-refs.js","src/partials/js/my-lib/lib-markups.js","node_modules/@swc/helpers/lib/_define_property.js","src/partials/js/my-lib/loadMoreBtn.js"],"sourcesContent":["import * as hero from '../../js/modal';\nimport { swiper } from '../hero/hero';\nimport { getGenre } from '../api';\nimport { parsedFilms, parsedFilmsGenreIds } from './lib-storage';\nimport {\n  renderLibMoviesListMarkup,\n  renderLibSelectMarkup,\n} from './lib-markups';\nimport { libRefs } from './lib-refs';\nimport { LoadMoreBtn } from './loadMoreBtn';\nimport { Notify } from 'notiflix';\n\nconst {\n  libSelectEl,\n  libMoviesListEl,\n  libLoadMoreBtn,\n  libClearBtn,\n  libContainerEL,\n} = libRefs;\n\nconst loadMore = new LoadMoreBtn({\n  btnEl: libLoadMoreBtn,\n});\n\nlet selectedGenre = '1';\nconst movieByStep = 9;\nlet totalMoviesLoaded = 0;\n\nconst getFilteredGenres = async movieGenresIds => {\n  const { genres } = await getGenre();\n\n  return genres.filter(({ id }) => movieGenresIds.includes(id));\n};\n\nconst getGenreName = async movieGenreIds => {\n  const filteredGenres = await getFilteredGenres(movieGenreIds);\n  const genreNames = filteredGenres.map(({ name }) => name);\n  return genreNames.slice(0, 2).join(', ');\n};\n\nconst renderFilteredGenres = async moviesArr => {\n  const filteredGenres = await getFilteredGenres(moviesArr);\n  renderLibSelectMarkup(filteredGenres);\n};\n\nconst onLibSelectChange = () => {\n  selectedGenre = libSelectEl.value;\n  totalMoviesLoaded = 0;\n  clearHTML();\n  loadMoviesByGenre(selectedGenre);\n};\n\nconst loadMovies = moviesArr => {\n  const slicedArr = moviesArr.slice(\n    totalMoviesLoaded,\n    totalMoviesLoaded + movieByStep\n  );\n\n  totalMoviesLoaded += movieByStep;\n  renderLibMoviesListMarkup(slicedArr);\n};\n\nconst loadMoviesByGenre = selectedValue => {\n  filterMoviesListByGenre(selectedValue);\n};\n\nconst filterMoviesListByGenre = selectedValue => {\n  if (selectedValue === '1') {\n    loadMovies(parsedFilms);\n    checkArrLength(parsedFilms);\n  } else {\n    const filteredMovies = parsedFilms.filter(movie =>\n      movie.genresIds.includes(parseInt(selectedValue))\n    );\n    loadMovies(filteredMovies);\n    checkArrLength(filteredMovies);\n  }\n};\n\nconst handleDeleteFilm = event => {\n  const filmId = event.currentTarget.closest('.weekly-card').dataset.id;\n  console.log('filmId: ', filmId);\n  removeItemFromLocalStorage(parseInt(filmId));\n  window.location.reload();\n};\n\nconst removeItemFromLocalStorage = id => {\n  const items = JSON.parse(localStorage.getItem('films')) || [];\n\n  const index = items.findIndex(item => item.id === id);\n  console.log('index: ', index);\n\n  if (index !== -1) {\n    items.splice(index, 1);\n    localStorage.setItem('films', JSON.stringify(items));\n  }\n};\n\nconst checkArrLength = moviesArr => {\n  if (moviesArr.length <= totalMoviesLoaded) {\n    loadMore.hideBtn();\n  } else {\n    loadMore.showBtn();\n  }\n};\n\nconst onLoadBtnClick = () => {\n  loadMore.disableBtn();\n  loadMoviesByGenre(selectedGenre);\n  loadMore.enableBtn();\n};\n\nconst clearHTML = () => {\n  libMoviesListEl.innerHTML = '';\n};\n\nconst clearLibrary = () => {\n  localStorage.removeItem('films');\n  libContainerEL.innerHTML = '';\n  renderNotification();\n};\n\nconst renderNotification = () => {\n  const notification = `<h2 class=\"lib-empty-message\">OOOPS...<br>We are very sorry!<br>You don't have any movies at your library.</h2>\n  <a class=\"lib-link-search\" href=\"./catalog.html\"> Search movie</a>`;\n  libContainerEL.insertAdjacentHTML('beforeend', notification);\n};\nconst onClearBtnClick = () => {\n  clearLibrary();\n};\n\nlibSelectEl.addEventListener('change', onLibSelectChange);\n\nwindow.addEventListener('load', () => {\n  if (!parsedFilms.length) {\n    libContainerEL.innerHTML = '';\n    renderNotification();\n    return;\n  }\n  renderFilteredGenres(parsedFilmsGenreIds);\n  loadMovies(parsedFilms);\n  checkArrLength(parsedFilms);\n});\n\nlibLoadMoreBtn.addEventListener('click', onLoadBtnClick);\n\nlibClearBtn.addEventListener('click', onClearBtnClick);\n\nexport { getGenreName, handleDeleteFilm };\n","const libRefs = {\n  libSelectEl: document.getElementById('js-genre-select'),\n  libMoviesListEl: document.getElementById('js-lib-list'),\n  libLoadMoreBtn: document.getElementById('js-loadMore-btn'),\n  libClearBtn: document.getElementById('clear-lib-btn'),\n  libContainerEL: document.getElementById('lib-container-el'),\n};\n\nexport { libRefs };\n","import { libRefs } from './lib-refs';\nimport { handleDeleteFilm, getGenreName } from './lib-main';\n\nconst { libSelectEl, libMoviesListEl } = libRefs;\n\nconst createLibSelectMarkup = genre => {\n  return `<option class=\"option-item\" value=\"${genre.id}\">${genre.name}</option>`;\n};\n\nconst createLibMoviesListMarkup = async ({\n  title,\n  name,\n  release_date,\n  first_air_date,\n  genresIds,\n  poster_path,\n  vote_average,\n  id,\n}) => {\n  const genreName = await getGenreName(genresIds);\n  const movieTitle = title || name;\n  const movieReleaseYear = release_date || first_air_date;\n  let imagePath;\n  if (poster_path !== null) {\n    imagePath = `https://image.tmdb.org/t/p/original/${poster_path}`;\n  } else {\n    imagePath =\n      'https://d2ths1nqi4sbhh.cloudfront.net/images/no-image.png?v=3884857787';\n  }\n  return `<li class=\"mylibrary_movie is-id\"  data-id=${id}>\n  <div class=\"mylibrary_dark\">\n  <img src=\"https://image.tmdb.org/t/p/original${poster_path}\" alt=\"${movieTitle}\" />\n  </div>\n <div class=\"mylibrary_overlay\"></div>\n  <div class=\"mylibrary_info\">\n  <h3 class=\"mylibrary_movies_name\">${movieTitle}</h3>\n  <p class=\"mylibrary_genre_movie\">${genreName} | ${movieReleaseYear.substring(\n    0,\n    4\n  )}</p>\n  </div>\n<div class=\"hero_star_raiting\">\n <span>\n<div class=\"Stars thisstars\" style=\"--rating: ${\n    vote_average / 2\n  }; \" aria-label=\"Rating of this product is ${(vote_average / 2).toFixed(\n    1\n  )} out of 5.\"></div>\n  </div>\n  </span>   \n  </li>`;\n};\n\nconst renderLibSelectMarkup = async genresArr => {\n  const libSelectMarkupEls = await Promise.all(\n    genresArr.map(genre => createLibSelectMarkup(genre))\n  );\n  libSelectEl.insertAdjacentHTML('beforeend', libSelectMarkupEls.join(' '));\n};\n\nconst renderLibMoviesListMarkup = async movies => {\n  const libMovieListMarkup = await Promise.all(\n    movies.map(movie => createLibMoviesListMarkup(movie))\n  );\n  libMoviesListEl.insertAdjacentHTML('beforeend', libMovieListMarkup.join(' '));\n\n  const deleteFilmButtons =\n    libMoviesListEl.querySelectorAll('.delete-film-btn');\n\n  deleteFilmButtons.forEach(button => {\n    button.addEventListener('click', handleDeleteFilm);\n  });\n};\n\nexport { renderLibMoviesListMarkup, renderLibSelectMarkup };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","class LoadMoreBtn {\n  static classes = {\n    hidden: 'lib-btn-hidden',\n  };\n\n  constructor({ btnEl, isHidden = false }) {\n    this.button = btnEl;\n    isHidden && this.hideBtn();\n  }\n\n  getBtn(selector) {\n    return document.querySelector(selector);\n  }\n\n  hideBtn() {\n    this.button.classList.add(LoadMoreBtn.classes.hidden);\n  }\n\n  showBtn() {\n    this.button.classList.remove(LoadMoreBtn.classes.hidden);\n  }\n\n  disableBtn() {\n    this.button.disabled = true;\n    this.button.textContent = 'Loading...';\n  }\n\n  enableBtn() {\n    this.button.disabled = false;\n    this.button.textContent = 'Load more';\n  }\n}\n\nexport { LoadMoreBtn };\n"],"names":["parcelRequire","$16fc69f3f69317b5$export$a53e322463ec8607","libSelectEl","document","getElementById","libMoviesListEl","libLoadMoreBtn","libClearBtn","libContainerEL","$bc82bf5bb67ef049$var$libSelectEl","$bc82bf5bb67ef049$var$libMoviesListEl","$bc82bf5bb67ef049$export$c692ee4cf6f33e4e","async","genresArr","libSelectMarkupEls","Promise","all","map","genre","id","name","$bc82bf5bb67ef049$var$createLibSelectMarkup","insertAdjacentHTML","join","$bc82bf5bb67ef049$export$2bb7f8c502c8b895","movies","libMovieListMarkup","movie","title","release_date","first_air_date","genresIds","poster_path","vote_average","movieTitle","imagePath","$bf5bbfa7cc2fd989$export$e1e489d92e562b7b","substring","toFixed","$bc82bf5bb67ef049$var$createLibMoviesListMarkup","querySelectorAll","forEach","button","addEventListener","$bf5bbfa7cc2fd989$export$503977e03a921dcd","Object","defineProperty","$da4b248c00322402$exports","value","default","obj","key","enumerable","configurable","writable","$ffaaa39bb1dd764a$export$fa7cf5edad276a21","getBtn","selector","querySelector","hideBtn","this","classList","add","classes","hidden","showBtn","remove","disableBtn","disabled","textContent","enableBtn","constructor","btnEl","isHidden","$parcel$interopDefault","$bf5bbfa7cc2fd989$var$libSelectEl","$bf5bbfa7cc2fd989$var$libMoviesListEl","$bf5bbfa7cc2fd989$var$libLoadMoreBtn","$bf5bbfa7cc2fd989$var$libClearBtn","$bf5bbfa7cc2fd989$var$libContainerEL","$bf5bbfa7cc2fd989$var$loadMore","$bf5bbfa7cc2fd989$var$selectedGenre","$bf5bbfa7cc2fd989$var$totalMoviesLoaded","$bf5bbfa7cc2fd989$var$getFilteredGenres","movieGenresIds","genres","$19F3f","getGenre","filter","includes","movieGenreIds","slice","$bf5bbfa7cc2fd989$var$renderFilteredGenres","moviesArr","filteredGenres","$bf5bbfa7cc2fd989$var$loadMovies","slicedArr","$bf5bbfa7cc2fd989$var$loadMoviesByGenre","selectedValue","$bf5bbfa7cc2fd989$var$filterMoviesListByGenre","$cl7Eh","parsedFilms","$bf5bbfa7cc2fd989$var$checkArrLength","filteredMovies","parseInt","event","filmId","currentTarget","closest","dataset","console","log","$bf5bbfa7cc2fd989$var$removeItemFromLocalStorage","window","location","reload","items","JSON","parse","localStorage","getItem","index","findIndex","item","splice","setItem","stringify","length","$bf5bbfa7cc2fd989$var$clearHTML","innerHTML","$bf5bbfa7cc2fd989$var$renderNotification","parsedFilmsGenreIds","removeItem"],"version":3,"file":"my-lib-page.a8eb4826.js.map"}