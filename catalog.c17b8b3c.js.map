{"mappings":"qhBAAAA,EAAA,S,SCCAC,OAAOC,eAAeC,EAAS,aAAc,CACzCC,OAAO,IAEXD,EAAQE,QACR,SAAyBC,EAAKC,EAAKH,GAC3BG,KAAOD,EACPL,OAAOC,eAAeI,EAAKC,EAAK,CAC5BH,MAAOA,EACPI,YAAY,EACZC,cAAc,EACdC,UAAU,IAGdJ,EAAIC,GAAOH,EAEf,OAAOE,C,EChBX,MAAMK,EAAO,CACXC,WAAYC,SAASC,eAAe,cAEpCC,aAAcF,SAASG,cAAc,kBACrCC,WAAYJ,SAASG,cAAc,gBACnCE,aAAcL,SAASG,cAAc,iBACrCG,WAAYN,SAASG,cAAc,eACnCI,SAAUP,SAASG,cAAc,qBACjCK,MAAOR,SAASC,eAAe,eAC/BQ,UAAWT,SAASG,cAAc,eAClCO,UAAWV,SAASG,cAAc,gBCRvBQ,EAAcC,IACzB,MAAMC,EAAcb,SAASG,cAAc,mBACvB,OAAhBU,GAAsBA,EAAYC,SACtC,MAAMC,EAASH,EACZI,KAAIC,GACI,gBAAgBA,EAAKC,wFAEYD,EAAKE,qBACxCF,EAAKG,4IAKoBH,EAAKG,0FAEDH,EAAKI,YAAYJ,EAAKK,oFAGnCL,EAAKM,sHAO3BC,KAAK,IACR,IAAKT,EAAOU,OAAQ,CAClB,MAAMC,EAAcC,IAGpB,OAFA7B,EAAKI,aAAa0B,mBAAmB,cAAeF,QACpD5B,EAAKI,aAAa2B,UAAY,G,CAoBlC,IAAiBC,IAjBPf,EAkBRjB,EAAKI,aAAa2B,UAAYC,CAlBf,EAGXH,EAAqB,IACJ,wVCnCvB,MAAMI,EAAkBC,MAAMC,IAC5B,MAAMC,QAAcC,IACdC,EAAeH,EAAWjB,KAC9B,EAACE,GAAEA,EAAEE,MAAEA,EAAKiB,YAAEA,EAAWC,aAAEA,EAAYC,UAAEA,EAASC,aAAEA,MAC3C,CACLtB,GAAIA,EACJE,MAAOA,EACPD,OAAQkB,EACRd,OAAQe,EACRjB,OAAQoB,EAAeP,EAAOK,GAC9BjB,KAAMoB,EAAgBF,OAI5B7B,EAAYyB,EAAa,EAGrBK,EAAiB,CAACP,EAAOK,KAC7B,MAAMlB,EAAS,GAMf,OALAa,EAAMlB,KAAI,EAACE,GAAEA,EAAEyB,KAAEA,OACe,IAA1BJ,EAAUK,QAAQ1B,IACpBG,EAAOwB,KAAKF,EAAK,IAGdtB,EAAOyB,MAAM,EAAG,GAAGtB,KAAK,KAAK,EAIhCkB,EAAkBK,GACT,IAAIC,KAAKD,GACJE,cAIdC,EAAY,CAACxD,EAAKH,KACtB,IACE,MAAM4D,EAAkBC,KAAKC,UAAU9D,GACvC+D,aAAaC,QAAQ7D,EAAKyD,E,CAC1B,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,GAIvCC,EAAYjE,IAChB,IACE,MAAMyD,EAAkBG,aAAaM,QAAQlE,GAC7C,OAA2B,OAApByD,OAA2BU,EAAYT,KAAKU,MAAMX,E,CACzD,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,GChD9B,MAAMK,EAqKnBC,WAAWC,GACTC,KAAKC,YAAcF,EACnBC,KAAKE,c,CAtKPC,YAAYC,EAAYC,EAAMC,EAAWC,EAAS,IAQlDC,EAAApF,EAAA,CAAA4E,KAAA,gBAAelC,UACb,GAAIkC,KAAKI,YAAc,EAErB,YADAJ,KAAKS,QAIPT,KAAKU,mBAAqB,GAE1BV,KAAKW,cAAcX,KAAKU,oBACpBV,KAAKI,WAAa,IACpBJ,KAAKY,oBAAoBZ,KAAKU,oBAC9BV,KAAKa,eAAeb,KAAKU,oBACzBV,KAAKY,oBAAoBZ,KAAKU,oBAAoB,GAClDV,KAAKc,YAAYd,KAAKU,qBAGxB,MAAM7D,EAASmD,KAAKe,iBAAiBf,KAAKU,mBAAmBpD,KAAK,KAClE0C,KAAKgB,OAAOnE,GACZmC,EAAU,cAAegB,KAAKC,YAAY,IAG5CO,EAAApF,EAAA,CAAA4E,KAAA,iBAAgBiB,IACd,IAAK,IAAIlB,EAAO,EAAGA,GAAQmB,KAAKC,IAAI,EAAGnB,KAAKI,YAAaL,IAAQ,CAC/D,MAAMqB,EAAWpB,KAAKC,cAAgBF,EAAO,aAAe,GACtDsB,EAAMrB,KAAKsB,qBAAqB,IAAMvB,EAAMqB,GAClDH,EAAItC,KAAK0C,E,KAIbb,EAAApF,EAAA,CAAA4E,KAAA,kBAAiBiB,IACf,MAAMM,EAAYL,KAAKM,IAAI,EAAGxB,KAAKC,YAAc,GAC3CwB,EAAUP,KAAKC,IAAInB,KAAKC,YAAc,EAAGD,KAAKI,WAAa,GACjE,IAAK,IAAIL,EAAOwB,EAAWxB,GAAQ0B,EAAS1B,IAAQ,CAClD,MAAMqB,EAAWpB,KAAKC,cAAgBF,EAAO,aAAe,GAC5D,IAAIsB,EAAM,GAERA,EADEtB,GAAQ,EACJC,KAAKsB,qBAAqB,IAAMvB,EAAMqB,GAEtCpB,KAAKsB,qBAAqBvB,EAAMqB,GAExCH,EAAItC,KAAK0C,E,KAIbb,EAAApF,EAAA,CAAA4E,KAAA,uBAAsB,CAACiB,EAAKS,GAAQ,MAEhCA,GAAU1B,KAAKC,YAAcD,KAAKI,WAAa,IAC7CsB,GAAS1B,KAAKC,YAAc,IAE9BgB,EAAItC,KAAK,gDAAgD,IAI7D6B,EAAApF,EAAA,CAAA4E,KAAA,eAAciB,IACZ,MAAMU,EAAW3B,KAAKI,WAChBgB,EAAWpB,KAAKC,cAAgB0B,EAAW,aAAe,GAC1DN,EAAMrB,KAAKsB,qBAAqBK,EAAUP,GAChDH,EAAItC,KAAK0C,EAAI,IAGfb,EAAApF,EAAA,CAAA4E,KAAA,wBAAuB,CAACD,EAAM6B,IACrB,8BAA8BA,6CACF7B,6BAAgCA,6BAIrES,EAAApF,EAAA,CAAA4E,KAAA,oBAAmB6B,GACW,kCAExB7B,KAAKI,YAAc,EAAI,oBAAsB,mFAG7CJ,KAAKI,YAAc,EAAI,2BAA6B,0DAEtByB,uFAE5B7B,KAAKI,YAAc,EAAI,2BAA6B,oCAM5DI,EAAApF,EAAA,CAAA4E,KAAA,UAASnE,IACPmE,KAAKS,QACL7E,EAAKI,aAAa0B,mBAAmB,WAAY7B,GACjD,MAAMiG,EAAKhG,SAASG,cAAc,eAC5B8F,EAAsBjG,SAASG,cAAc,eAEnD6F,EAAGE,iBAAiB,QAAShC,KAAKiC,YAClCF,EAAoBC,iBAAiB,QAAShC,KAAKkC,cAEnD,MAAMC,EAAarG,SAASG,cAC1B,4CAEuB,IAArB+D,KAAKC,YACPkC,EAAWC,MAAMC,QAAU,OAE3BF,EAAWC,MAAMC,QAAU,QAG7B,MAAMC,EAAaxG,SAASG,cAC1B,4CAEE+D,KAAKC,cAAgBD,KAAKI,WAC5BkC,EAAWF,MAAMC,QAAU,OAE3BC,EAAWF,MAAMC,QAAU,OAAO,IAItC7B,EAAApF,EAAA,CAAA4E,KAAA,gBAAeuC,IACb,MAAMC,EAAWD,EAAEE,OAEfD,EAASE,UAAUC,SAAS,2BAC9B3C,KAAK4C,OAEHJ,EAASE,UAAUC,SAAS,2BAC9B3C,KAAK6C,MAAM,IAIfrC,EAAApF,EAAA,CAAA4E,KAAA,SAAQ,KACN,MAAM8B,EAAKhG,SAASG,cAAc,eAC9B6F,GAAIA,EAAGlF,QAAQ,IAGrB4D,EAAApF,EAAA,CAAA4E,KAAA,QAAO,KACL,GAAyB,IAArBA,KAAKC,YAAmB,OAC5BD,KAAKC,aAAe,EACpBD,KAAKE,eAEL,MAAMiC,EAAarG,SAASG,cAC1B,4CAEuB,IAArB+D,KAAKC,YACPkC,EAAWC,MAAMC,QAAU,OAE3BF,EAAWC,MAAMC,QAAU,OAAO,IAItC7B,EAAApF,EAAA,CAAA4E,KAAA,QAAO,KACL,GAAIA,KAAKC,cAAgBD,KAAKI,WAAY,OAC1CJ,KAAKC,aAAe,EACpBD,KAAKE,eAEL,MAAMoC,EAAaxG,SAASG,cAC1B,4CAEE+D,KAAKC,cAAgBD,KAAKI,WAC5BkC,EAAWF,MAAMC,QAAU,OAE3BC,EAAWF,MAAMC,QAAU,OAAO,IAStC7B,EAAApF,EAAA,CAAA4E,KAAA,cAAalC,MAAMyE,IACjBA,EAAEO,iBACF,MAAM/C,EAAOgD,SAASR,EAAEE,OAAOO,QAAQjD,MAClCkD,MAAMlD,KACTC,KAAKC,YAAcF,EACnBC,KAAKE,qBAECF,KAAKM,UAAUN,KAAKC,eAAgBD,KAAKO,Q,IA/KjDP,KAAKI,WAAaA,EAClBJ,KAAKC,YAAcI,EACnBL,KAAKM,UAAYA,EACjBN,KAAKO,OAASA,EACdP,KAAKU,mBAAqB,E,6CCYvB,MAAMwC,EAAmBpF,MAC9BqF,EACAC,EAAa,EACbhG,EAAO,MAEPxB,EAAKO,aAAakH,UAAW,EAC7BzH,EAAKQ,WAAWiH,UAAW,EAC3B,MAAMC,QAAEA,EAAOC,YAAEA,EAAWxD,KAAEA,SAAe,EAAAyD,EAAAC,YAC3CN,EACAC,EACAhG,GAGF,OADAS,EAAgByF,GACT,C,QACLA,E,YACAC,E,KACAxD,EACD,EAGU2D,EAAmB5F,MAAOsF,EAAYO,EAAW,KAC5D/H,EAAKO,aAAakH,UAAW,EAC7BzH,EAAKQ,WAAWiH,UAAW,EAE3B,MAAMO,KAAEA,SApCV9F,eAAyB+F,GACvB,KACE,EAAAC,EAAAC,YACA,MAAMH,QAAaI,EAAA1I,QAAM2I,IAAIJ,GAE7B,OADA,EAAAC,EAAAI,gBACON,C,CACP,MAAOtE,GAEP,OADA,EAAAwE,EAAAI,gBACO,I,EA4BcC,CACrB,gGAA0Ef,IACxEO,EAAW,gBAAgBA,IAAa,sBAGtCL,QAAEA,EAAOvD,KAAEA,EAAIwD,YAAEA,GAAgBK,EAEvC,OADA/F,EAAgByF,GACT,C,QACLA,E,KACAvD,E,YACAwD,EACD,EAGUtF,EAAaH,UACxB,MAAM8F,KAAEA,SAAeI,EAAA1I,QAAM2I,IAC3B,2FAEI9G,OAAEA,GAAWyG,EACnB,OAAOzG,CAAM,EC5DTiH,EAAatI,SAASG,cAAc,gBACpCoI,EAAevI,SAASG,cAAc,iBACtCqI,EAAaxI,SAASG,cAAc,eAcpCsI,EAAYzG,UAChB,MAAMiC,KAAEA,EAAIwD,YAAEA,SAAsBG,EAAiB,GAClC,IAAI7D,EAAW0D,EAAaxD,EAAM2D,GAC1CxD,cAAc,EAGrBsE,EAAiB1G,MAAM2G,IAC3B,MAAMtB,EAAa1D,EAAU,eACvBM,KAAEA,EAAIwD,YAAEA,SAAsBL,EAAiB,EAAGC,GAErC,IAAItD,EAAW0D,EAAaxD,EAAMmD,EAAkB,CACrEC,EACA,IAESjD,eACXoE,EAAWI,gBAAgB,WAAW,EAgDxCN,EAAWpC,iBAAiB,UA3ENO,IACpBA,EAAEO,iBACF,MAAM6B,EAAW,IAAIC,SAASrC,EAAEE,SAC1BgC,aAAEA,GAAiBvJ,OAAO2J,YAAYF,EAASG,WAChDL,EAAalH,QAIlByB,EAAU,aAAcyF,GACxBD,EAAeC,IAJbF,GAI0B,IAmE9BQ,OAAO/C,iBAAiB,OAAQuC,GAEhCQ,OAAO/C,iBAAiB,QAhDIlE,UAE1B,IAAIkH,SADiB/G,KACGnB,KAAImI,GACnB,kBAAkBA,EAAOjI,OAAOiI,EAAOxG,kBAEhDuG,EAAWE,QAAQ,oCACnBb,EAAa1G,UAAYqH,EAAW1H,KAAK,IACzC+G,EAAaK,gBAAgB,WAAW,IA0C1CK,OAAO/C,iBAAiB,QA9BE,KACxB,MAGMmD,EAAW,GAEjB,IAAK,IAAIC,GAJS,IAAItG,MAAOC,cAILqG,GALR,KAKsBA,IACpCD,EAASxG,KAAK,kBAAkByG,MAAMA,cAGxCd,EAAW3G,UAAYwH,EAAS7H,KAAK,GAAG,IAsB1C+G,EAAarC,iBAAiB,UAzCPlE,MAAMyE,IAC3B,MAAMlH,EAAQkH,EAAEE,OAAOpH,OAEjBkI,YAAEA,EAAWD,QAAEA,SAAkBI,EAAiB,EAAGnB,EAAEE,OAAOpH,OAEjD,IAAIwE,EAAW0D,EAAa,EAAGG,EAAkB,CAACrI,IAC1D6E,cAAc,IAoC3BoE,EAAWtC,iBAAiB,UApBNlE,MAAMyE,IAC1B,MAAMlH,EAAQkH,EAAEE,OAAOpH,MACjB8H,EAAa1D,EAAU,eAEvB8D,YAAEA,EAAWxD,KAAEA,SAAemD,EAAiB,EAAGC,EAAY9H,GAEjD,IAAIwE,EAAW0D,EAAa,EAAGL,EAAkB,CAClEC,EACA9H,IAES6E,cAAc,IAW3BkE,EAAWnI,cAAc,SAAS+F,iBAAiB,SAASO,IAC1D,MAAMlH,EAAQkH,EAAEE,OAAOpH,MACvBgJ,EAAahB,UAAW,EACnBhI,EAAMkC,SAAQ8G,EAAahB,UAAW,EAAK,I,4CC5FlDzH,EAAKS,SAAS2F,iBAAiB,SAAS,KACtCpG,EAAKU,MAAMjB,MAAQ,EAAE,IAGvBO,EAAKU,MAAM0F,iBAAiB,SAAS,KACV,KAArBpG,EAAKU,MAAMjB,MACbO,EAAKY,UAAUkG,UAAU2C,IAAI,eAE7BzJ,EAAKY,UAAUkG,UAAU9F,OAAO,cAAc,I","sources":["src/catalog.js","node_modules/@swc/helpers/lib/_define_property.js","src/partials/js/refs.js","src/partials/js/catalog/createCards.js","src/partials/js/catalog/catalogUtils.js","src/partials/js/catalog/pagination.js","src/partials/js/catalog/catalogApi.js","src/partials/js/catalog/example.js","src/partials/js/catalog/clearInput.js"],"sourcesContent":["import './partials/js/hero/hero';\nimport './partials/js/catalog/example';\nimport '@fontsource/roboto/400.css';\nimport '@fontsource/roboto/500.css';\nimport '@fontsource/roboto/700.css';\nimport * as hero from './partials/js/hero/hero';\nimport * as modal from './partials/js/modal';\nimport * as catalog from './partials/js/catalog/example';\nimport * as header from './partials/js/header/header';\nimport * as upBtn from './partials/js/up-btn';\nimport * as clear from './partials/js/catalog/clearInput';\nimport * as footer from './partials/js/footer/footer';\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","const refs = {\n  pagination: document.getElementById('pagination'),\n  //_______Catalog_______\n  catalogFilms: document.querySelector('.catalog-films'),\n  searchForm: document.querySelector('.search-form'),\n  selectGenres: document.querySelector('#selectGenres'),\n  selectDate: document.querySelector('#selectDate'),\n  btnClear: document.querySelector('.search-clear-btn'),\n  input: document.getElementById('search-form'),\n  btnSearch: document.querySelector('.search-btn'),\n  inputIcon: document.querySelector('.input-icon'),\n  //____________________\n};\n\nexport { refs };\n","import { refs } from '../refs';\n\nexport const createCards = dataCard => {\n  const errorModule = document.querySelector('.no-movie-found');\n  if (errorModule !== null) errorModule.remove();\n  const markup = dataCard\n    .map(card => {\n      return `<li data-id=\"${card.id}\" class=\"catalog-card is-id\">\n  <img\n    src=\"https://image.tmdb.org/t/p/original${card.poster}\"\n    alt=\"${card.title}\"\n    loading=\"lazy\"\n  />\n  <div class=\"catalog-overlay\"></div>\n  <div class=\"catalog-info\">\n    <h3 class=\"catalog-info-name\">${card.title}</h3>\n    <div class=\"catalog-info-date\">\n      <p class=\"catalog-info-details\">${card.genres} | ${card.date}</p>\n      <div\n        class=\"Stars stars-five\"\n        style=\"--rating: ${card.rating}\"\n        aria-label=\"Rating of this product is 2.3 out of 5.\"\n      ></div>\n    </div>\n  </div>\n</li>`;\n    })\n    .join('');\n  if (!markup.length) {\n    const errorMarkup = createSearchErrors();\n    refs.catalogFilms.insertAdjacentHTML('beforebegin', errorMarkup);\n    refs.catalogFilms.innerHTML = '';\n    return;\n  }\n  addHTML(markup);\n};\n\nconst createSearchErrors = () => {\n  const markupErrors = `<div class=\"no-movie-found\">\n    <p class=\"no-movie-found__text\">\n      <span class=\"no-movie-found__text-item\">OOPS...</span>\n      <span class=\"no-movie-found__text-item\">We are very sorry!</span>\n      <span class=\"no-movie-found__text-item\">\n        We don’t have any results matching your search.\n      </span>\n    </p>\n  </div>`;\n\n  return markupErrors;\n};\n\nfunction addHTML(cards) {\n  refs.catalogFilms.innerHTML = cards;\n}\n","import { fetchGenre } from './catalogApi';\nimport { createCards } from './createCards';\n\nconst createDataCards = async moviesData => {\n  const genre = await fetchGenre();\n  const newCardsDate = moviesData.map(\n    ({ id, title, poster_path, vote_average, genre_ids, release_date }) => {\n      return {\n        id: id,\n        title: title,\n        poster: poster_path,\n        rating: vote_average,\n        genres: createGenreStr(genre, genre_ids),\n        date: createMovieDate(release_date),\n      };\n    }\n  );\n  createCards(newCardsDate);\n};\n\nconst createGenreStr = (genre, genre_ids) => {\n  const genres = [];\n  genre.map(({ id, name }) => {\n    if (genre_ids.indexOf(id) !== -1) {\n      genres.push(name);\n    }\n  });\n  return genres.slice(0, 2).join(', ');\n  //return genres.join('');\n};\n\nconst createMovieDate = dateString => {\n  const date = new Date(dateString);\n  const year = date.getFullYear();\n  return year;\n};\n\nconst saveLocal = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nconst loadLocal = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nexport {\n  createDataCards,\n  createGenreStr,\n  createMovieDate,\n  saveLocal,\n  loadLocal,\n};\n","import { refs } from '../refs';\nimport { saveLocal } from './catalogUtils';\n\nexport default class Pagination {\n  constructor(totalPages, page, getMovies, params = []) {\n    this.totalPages = totalPages;\n    this.currentPage = page;\n    this.getMovies = getMovies;\n    this.params = params;\n    this.arrPaginationItems = [];\n  }\n\n  createButton = async () => {\n    if (this.totalPages <= 1) {\n      this.reset();\n      return;\n    }\n\n    this.arrPaginationItems = [];\n\n    this.addFirstPages(this.arrPaginationItems);\n    if (this.totalPages > 6) {\n      this.addEllipsisIfNeeded(this.arrPaginationItems);\n      this.addMiddlePages(this.arrPaginationItems);\n      this.addEllipsisIfNeeded(this.arrPaginationItems, true);\n      this.addLastPage(this.arrPaginationItems);\n    }\n\n    const markup = this.createPagination(this.arrPaginationItems.join(''));\n    this.render(markup);\n    saveLocal('currentPage', this.currentPage);\n  };\n\n  addFirstPages = arr => {\n    for (let page = 1; page <= Math.min(3, this.totalPages); page++) {\n      const activeEl = this.currentPage === page ? 'btn-active' : '';\n      const btn = this.createPaginationItem('0' + page, activeEl);\n      arr.push(btn);\n    }\n  };\n\n  addMiddlePages = arr => {\n    const startPage = Math.max(4, this.currentPage - 2);\n    const endPage = Math.min(this.currentPage + 1, this.totalPages - 1);\n    for (let page = startPage; page <= endPage; page++) {\n      const activeEl = this.currentPage === page ? 'btn-active' : '';\n      let btn = [];\n      if (page <= 9) {\n        btn = this.createPaginationItem('0' + page, activeEl);\n      } else {\n        btn = this.createPaginationItem(page, activeEl);\n      }\n      arr.push(btn);\n    }\n  };\n\n  addEllipsisIfNeeded = (arr, atEnd = false) => {\n    if (\n      (atEnd && this.currentPage < this.totalPages - 2) ||\n      (!atEnd && this.currentPage > 3)\n    ) {\n      arr.push('<li class=\"pagination-item ellipsis\">...</li>');\n    }\n  };\n\n  addLastPage = arr => {\n    const lastPage = this.totalPages;\n    const activeEl = this.currentPage === lastPage ? 'btn-active' : '';\n    const btn = this.createPaginationItem(lastPage, activeEl);\n    arr.push(btn);\n  };\n\n  createPaginationItem = (page, activeClass) => {\n    return `<li class='pagination-item ${activeClass}'>\n              <a href='#' data-page='${page}' class='pagination-btn'>${page}</a>\n            </li>`;\n  };\n\n  createPagination = paginationItems => {\n    const paginationContainer = `\n      <div class='pagination ${\n        this.totalPages <= 1 ? 'pagination-hidden' : ''\n      }'>\n      <button type=\"button\" class='pagination-arrow pagination-arrows-prev${\n        this.totalPages <= 1 ? 'pagination-arrows-hidden' : ''\n      }'>prev</button>\n        <ul class='pagination-list'>${paginationItems}</ul>\n        <button type=\"button\" class='pagination-arrow pagination-arrows-next${\n          this.totalPages <= 1 ? 'pagination-arrows-hidden' : ''\n        }'>next</button>\n      </div>`;\n    return paginationContainer;\n  };\n\n  render = pagination => {\n    this.reset();\n    refs.catalogFilms.insertAdjacentHTML('afterend', pagination);\n    const el = document.querySelector('.pagination');\n    const paginationContainer = document.querySelector('.pagination');\n\n    el.addEventListener('click', this.handlerBtn);\n    paginationContainer.addEventListener('click', this.arrowHandler);\n\n    const prevButton = document.querySelector(\n      '.pagination-arrow.pagination-arrows-prev'\n    );\n    if (this.currentPage === 1) {\n      prevButton.style.display = 'none';\n    } else {\n      prevButton.style.display = 'block';\n    }\n\n    const nextButton = document.querySelector(\n      '.pagination-arrow.pagination-arrows-next'\n    );\n    if (this.currentPage === this.totalPages) {\n      nextButton.style.display = 'none';\n    } else {\n      nextButton.style.display = 'block';\n    }\n  };\n\n  arrowHandler = e => {\n    const targetEl = e.target;\n\n    if (targetEl.classList.contains('pagination-arrows-prev')) {\n      this.prev();\n    }\n    if (targetEl.classList.contains('pagination-arrows-next')) {\n      this.next();\n    }\n  };\n\n  reset = () => {\n    const el = document.querySelector('.pagination');\n    if (el) el.remove();\n  };\n\n  prev = () => {\n    if (this.currentPage === 1) return;\n    this.currentPage -= 1;\n    this.createButton();\n\n    const prevButton = document.querySelector(\n      '.pagination-arrow.pagination-arrows-prev'\n    );\n    if (this.currentPage === 1) {\n      prevButton.style.display = 'none';\n    } else {\n      prevButton.style.display = 'block';\n    }\n  };\n\n  next = () => {\n    if (this.currentPage === this.totalPages) return;\n    this.currentPage += 1;\n    this.createButton();\n\n    const nextButton = document.querySelector(\n      '.pagination-arrow.pagination-arrows-next'\n    );\n    if (this.currentPage === this.totalPages) {\n      nextButton.style.display = 'none';\n    } else {\n      nextButton.style.display = 'block';\n    }\n  };\n\n  updatePage(page) {\n    this.currentPage = page;\n    this.createButton();\n  }\n\n  handlerBtn = async e => {\n    e.preventDefault();\n    const page = parseInt(e.target.dataset.page);\n    if (!isNaN(page)) {\n      this.currentPage = page;\n      this.createButton();\n\n      await this.getMovies(this.currentPage, ...this.params);\n    }\n  };\n}\n","import Pagination from './pagination';\nimport { getByQuery } from '../api';\nimport { createDataCards, loadLocal } from './catalogUtils';\nimport axios from 'axios';\nimport { refs } from '../refs';\nimport { onLoader, removeLoader } from '../loader';\n\nconst API_KEY = '88b8a7c5d221d3120fb29d734050dc7d';\n\nasync function fetchData(url) {\n  try {\n    onLoader();\n    const data = await axios.get(url);\n    removeLoader();\n    return data;\n  } catch (error) {\n    removeLoader();\n    return null;\n  }\n}\n\nexport const getMoviesByQuery = async (\n  searchTerm,\n  chosenPage = 1,\n  date = ''\n) => {\n  refs.selectGenres.disabled = true;\n  refs.selectDate.disabled = false;\n  const { results, total_pages, page } = await getByQuery(\n    searchTerm,\n    chosenPage,\n    date\n  );\n  createDataCards(results);\n  return {\n    results,\n    total_pages,\n    page,\n  };\n};\n\nexport const showNewestMovies = async (chosenPage, genre_id = 0) => {\n  refs.selectGenres.disabled = false;\n  refs.selectDate.disabled = true;\n\n  const { data } = await fetchData(\n    `https://api.themoviedb.org/3/movie/now_playing?api_key=${API_KEY}&page=${chosenPage}${\n      genre_id ? `&with_genres=${genre_id}` : ''\n    }&language=en-US`\n  );\n  const { results, page, total_pages } = data;\n  createDataCards(results);\n  return {\n    results,\n    page,\n    total_pages,\n  };\n};\n\nexport const fetchGenre = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`\n  );\n  const { genres } = data;\n  return genres;\n};\n","import { fetchGenre, getMoviesByQuery, showNewestMovies } from './catalogApi';\nimport { createDataCards, loadLocal, saveLocal } from './catalogUtils';\nimport Pagination from './pagination';\n\nconst searchForm = document.querySelector('.search-form');\nconst selectGenres = document.querySelector('#selectGenres');\nconst selectDate = document.querySelector('#selectDate');\n\nconst submitHandler = e => {\n  e.preventDefault();\n  const formData = new FormData(e.target);\n  const { searchMovies } = Object.fromEntries(formData.entries());\n  if (!searchMovies.length) {\n    afterLoad();\n    return;\n  }\n  saveLocal('searchTerm', searchMovies);\n  afterSearching(searchMovies);\n};\n\nconst afterLoad = async () => {\n  const { page, total_pages } = await showNewestMovies(1);\n  const pagination = new Pagination(total_pages, page, showNewestMovies);\n  pagination.createButton();\n};\n\nconst afterSearching = async searchMovies => {\n  const searchTerm = loadLocal('searchTerm');\n  const { page, total_pages } = await getMoviesByQuery(1, searchTerm);\n\n  const pagination = new Pagination(total_pages, page, getMoviesByQuery, [\n    searchTerm,\n    1,\n  ]);\n  pagination.createButton();\n  selectDate.removeAttribute('disabled');\n};\n\nconst filterSelectOptions = async () => {\n  const genres = await fetchGenre();\n  let arrOptions = genres.map(option => {\n    return `<option value=\"${option.id}\">${option.name}</option>`;\n  });\n  arrOptions.unshift(`<option value='all'>All</option>`);\n  selectGenres.innerHTML = arrOptions.join('');\n  selectGenres.removeAttribute('disabled');\n};\n\nconst setGenreFilter = async e => {\n  const value = e.target.value;\n\n  const { total_pages, results } = await showNewestMovies(1, e.target.value);\n\n  const pagination = new Pagination(total_pages, 1, showNewestMovies, [value]);\n  pagination.createButton();\n};\n\nconst dateSelectOptions = () => {\n  const endDate = 1970;\n  const startDate = new Date().getFullYear();\n\n  const yearList = [];\n\n  for (let i = startDate; i >= endDate; i--) {\n    yearList.push(`<option value=\"${i}\">${i}</option>`);\n  }\n\n  selectDate.innerHTML = yearList.join('');\n};\n\nconst setDateFilter = async e => {\n  const value = e.target.value;\n  const searchTerm = loadLocal('searchTerm');\n\n  const { total_pages, page } = await getMoviesByQuery(1, searchTerm, value);\n\n  const pagination = new Pagination(total_pages, 1, getMoviesByQuery, [\n    searchTerm,\n    value,\n  ]);\n  pagination.createButton();\n};\n\nsearchForm.addEventListener('submit', submitHandler);\nwindow.addEventListener('load', afterLoad);\n\nwindow.addEventListener('load', filterSelectOptions);\nwindow.addEventListener('load', dateSelectOptions);\n\nselectGenres.addEventListener('change', setGenreFilter);\nselectDate.addEventListener('change', setDateFilter);\nsearchForm.querySelector('input').addEventListener('input', e => {\n  const value = e.target.value;\n  selectGenres.disabled = true;\n  if (!value.length) selectGenres.disabled = false;\n});\n\nexport { createDataCards };\n","import { refs } from '../refs';\n\nrefs.btnClear.addEventListener('click', () => {\n  refs.input.value = '';\n});\n\nrefs.input.addEventListener('input', () => {\n  if (refs.input.value === '') {\n    refs.inputIcon.classList.add('icon-hidden');\n  } else {\n    refs.inputIcon.classList.remove('icon-hidden');\n  }\n});\n"],"names":["parcelRequire","Object","defineProperty","$da4b248c00322402$exports","value","default","obj","key","enumerable","configurable","writable","$97b4d273c2f21ef2$export$21666b427502ea6d","pagination","document","getElementById","catalogFilms","querySelector","searchForm","selectGenres","selectDate","btnClear","input","btnSearch","inputIcon","$900f3e5968da7b57$export$659b6b545718ce73","dataCard","errorModule","remove","markup","map","card","id","poster","title","genres","date","rating","join","length","errorMarkup","$900f3e5968da7b57$var$createSearchErrors","insertAdjacentHTML","innerHTML","cards","$80ce91662cd26072$export$f3fd225445632348","async","moviesData","genre","$df1db51f1d31cfcf$export$13a873f6c4b5d516","newCardsDate","poster_path","vote_average","genre_ids","release_date","$80ce91662cd26072$export$44f0485a2f926b66","$80ce91662cd26072$export$e57ec8acbf34a811","name","indexOf","push","slice","dateString","Date","getFullYear","$80ce91662cd26072$export$b38f1b11c5e38f18","serializedState","JSON","stringify","localStorage","setItem","error","console","message","$80ce91662cd26072$export$9f183916f445c495","getItem","undefined","parse","$f2e078fcec063076$export$2e2bcd8739ae039","updatePage","page","this","currentPage","createButton","constructor","totalPages","page1","getMovies","params","$parcel$interopDefault","reset","arrPaginationItems","addFirstPages","addEllipsisIfNeeded","addMiddlePages","addLastPage","createPagination","render","arr","Math","min","activeEl","btn","createPaginationItem","startPage","max","endPage","atEnd","lastPage","activeClass","paginationItems","el","paginationContainer","addEventListener","handlerBtn","arrowHandler","prevButton","style","display","nextButton","e","targetEl","target","classList","contains","prev","next","preventDefault","parseInt","dataset","isNaN","$df1db51f1d31cfcf$export$4a3145eab4db56d2","searchTerm","chosenPage","disabled","results","total_pages","$19F3f","getByQuery","$df1db51f1d31cfcf$export$49f9e704d857526c","genre_id","data","url","$kHmXk","onLoader","$2shzp","get","removeLoader","$df1db51f1d31cfcf$var$fetchData","$e5c465ec961d44e9$var$searchForm","$e5c465ec961d44e9$var$selectGenres","$e5c465ec961d44e9$var$selectDate","$e5c465ec961d44e9$var$afterLoad","$e5c465ec961d44e9$var$afterSearching","searchMovies","removeAttribute","formData","FormData","fromEntries","entries","window","arrOptions","option","unshift","yearList","i","add"],"version":3,"file":"catalog.c17b8b3c.js.map"}