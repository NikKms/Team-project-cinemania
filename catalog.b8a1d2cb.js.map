{"mappings":"oeAIAA,EAAA,SCJA,IAAAC,EAAAD,EAAA,S,aAGA,MAkCME,EAAaC,UACjB,MAAMC,KAAEA,SAAeH,EAAAI,QAAMC,IAC3B,2FAEIC,OAAEA,GAAWH,EACnB,OAAOG,CAAM,EAGTC,EAAiB,CAACC,EAAOC,KAC7B,MAAMH,EAAS,GAMf,OALAE,EAAME,KAAI,EAACC,GAAEA,EAAEC,KAAEA,OACe,IAA1BH,EAAUI,QAAQF,IACpBL,EAAOQ,KAAKF,EAAK,IAGdN,EAAOS,KAAK,IAAI,EAGnBC,EAAkBC,GACT,IAAIC,KAAKD,GACJE,cApDIjB,WAEtB,MACMkB,QAAY,EAAAC,EAAAC,YADN,UACsB,IAC5BC,QAAEA,GAAYH,EAGdZ,QAAcP,IAsBpB,OArBqBsB,EAAQb,KAC3B,EAACC,GACCA,EAAEa,MACFA,EAAKC,YAELA,EAAWC,aACXA,EAAYjB,UACZA,EAASkB,aACTA,MAEO,CACLhB,GAAIA,EACJa,MAAOA,EAEPI,OAAQH,EACRI,OAAQH,EACRpB,OAAQC,EAAeC,EAAOC,GAC9BqB,KAAMd,EAAgBW,MAIT,EA2BrBI,GAAkBC,MAAKZ,GAAOa,QAAQC,IAAId","sources":["src/catalog.js","src/partials/js/catalog/example.js"],"sourcesContent":["// import { Roboto400, Roboto500, Roboto700 } from './partials/js/fonts';\n// import '@fontsource/roboto/400.css';\n// import '@fontsource/roboto/500.css';\n// import '@fontsource/roboto/700.css';\nimport './partials/js/hero/hero';\nimport './partials/js/catalog/example';\n","import axios from 'axios';\nimport { getByQuery, getMovie } from '../api';\n\nconst API_KEY = '88b8a7c5d221d3120fb29d734050dc7d';\n\nconst createDataCards = async () => {\n  //////////////////////////////////////////\n  const str = 'ghosted';\n  const res = await getByQuery(str, 1);\n  const { results } = res;\n  //////////////////////////////////////////\n\n  const genre = await fetchGenre();\n  const newCardsDate = results.map(\n    ({\n      id,\n      title,\n      //original_language,\n      poster_path,\n      vote_average,\n      genre_ids,\n      release_date,\n    }) => {\n      return {\n        id: id,\n        title: title,\n        //language: original_language,\n        poster: poster_path,\n        rating: vote_average,\n        genres: createGenreStr(genre, genre_ids),\n        date: createMovieDate(release_date),\n      };\n    }\n  );\n  return newCardsDate;\n};\n\nconst fetchGenre = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`\n  );\n  const { genres } = data;\n  return genres;\n};\n\nconst createGenreStr = (genre, genre_ids) => {\n  const genres = [];\n  genre.map(({ id, name }) => {\n    if (genre_ids.indexOf(id) !== -1) {\n      genres.push(name);\n    }\n  });\n  return genres.join(',');\n};\n\nconst createMovieDate = dateString => {\n  const date = new Date(dateString);\n  const year = date.getFullYear();\n  return year;\n};\n\ncreateDataCards().then(res => console.log(res));\n\nexport { createDataCards };\n"],"names":["parcelRequire","$2shzp","$e5c465ec961d44e9$var$fetchGenre","async","data","default","get","genres","$e5c465ec961d44e9$var$createGenreStr","genre","genre_ids","map","id","name","indexOf","push","join","$e5c465ec961d44e9$var$createMovieDate","dateString","Date","getFullYear","res","$19F3f","getByQuery","results","title","poster_path","vote_average","release_date","poster","rating","date","$e5c465ec961d44e9$export$f3fd225445632348","then","console","log"],"version":3,"file":"catalog.b8a1d2cb.js.map"}