{"mappings":"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","sources":["src/partials/js/home/example-home.js"],"sourcesContent":["import * as hero from '../../js/modal';\nimport { getWeeklyTrending } from '../api';\nimport { getUpcoming } from '../api';\nimport { getGenre } from '../api';\n\nconst listOfFilms = document.querySelector('.weekly-cards-wrap');\nconst upcomingWrapEl = document.querySelector('.upcoming_wrap');\nconst seeAll = document.querySelector('.weekly-title-link');\n\n// ================See all=================\n\nseeAll.addEventListener('click', () => {\n  location.href = 'catalog.html';\n});\n\n// ================ Weekly trends section ==============\n\nasync function getWeeklyTrends() {\n  const data = await getWeeklyTrending();\n\n  const firstThreeFilms = getFirstThreeElements(data.results);\n  renderWeeklyThreeTrends(firstThreeFilms);\n}\n\nfunction getFirstThreeElements(array) {\n  return array.slice(0, 3);\n}\n\nasync function renderWeeklyThreeTrends(firstThreeFilms) {\n  console.log(firstThreeFilms);\n  const markup = await Promise.all(\n    firstThreeFilms.map(\n      async ({\n        backdrop_path,\n        title,\n        release_date,\n        genre_ids,\n        id,\n        poster_path,\n        name,\n        first_air_date,\n        vote_average,\n      }) => {\n        genre_ids = filterGenres(genre_ids);\n        const listGenres = await getGenresById(genre_ids);\n\n        return `<li class=\"weekly-card is-id\" data-id=${id}>\n        <div class=\"weekly-container-image\">\n          <img\n            class=\"weekly-card-image\"\n           src=\"https://image.tmdb.org/t/p/original/${poster_path}\"\n            alt=\"\"\n          />\n         <div class=\"overlay\"></div>       \n        </div>\n        <div class=\"weekly-card-description\">\n          <div>\n            <title class=\"weekly-card-description-title\">${\n              title || name\n            }</title>\n            <p class=\"weekly-card-description-other\">${listGenres} | ${\n          release_date\n            ? release_date.substring(0, 4)\n            : first_air_date.substring(0, 4)\n        }</p>\n          </div>\n         <div class=\"Stars\" style=\"--rating: ${parseFloat(\n           (vote_average / 2).toFixed(1)\n         )};\" aria-label=\"Rating of this product is 2.3 out of 5.\"></div> \n        </div>\n        \n      </li>`;\n      }\n    )\n  );\n\n  listOfFilms.innerHTML = markup.join('');\n}\n\nasync function getGenresById(ids) {\n  const data = await getGenre();\n  const genres = data.genres;\n\n  const arrGenres = ids.map(id => {\n    const genre = genres.find(genre => genre.id === id);\n    return genre ? genre.name : '';\n  });\n  return arrGenres.join(', ');\n}\n\n// ================ Upcoming this month section ==============\n\nasync function getUpcomingFilm() {\n  const { formattedStartDate, formattedEndDate } =\n    getCurrentEndLastDayOfMonth();\n  try {\n    const data = await getUpcoming(formattedStartDate, formattedEndDate);\n    const randomValue = getRandomValue(data.results);\n    renderUpcomingFilm(randomValue);\n  } catch (error) {\n    upcomingWrapEl.innerHTML =\n      '<p class=\"upcoming-not-found\">OOPS...We are very sorry! We don’t have any results matching your search.</p>';\n  }\n}\n\nasync function renderUpcomingFilm(upcomingFilm) {\n  let {\n    backdrop_path,\n    poster_path,\n    genre_ids,\n    popularity,\n    release_date,\n    title,\n    vote_average,\n    vote_count,\n    overview,\n  } = upcomingFilm;\n\n  genre_ids = filterGenres(genre_ids);\n\n  const listGenres = await getGenresById(genre_ids);\n\n  const isMobile = window.innerWidth < 767;\n  let imagePath = getImagePath(backdrop_path, poster_path, isMobile);\n\n  const markup = `<div class=\"upcoming-card\">\n\n            <img class=\"upcoming-card-img\" src=\"${imagePath}\" alt=\" \" />\n\n          <div class=\"upcoming-card-wrap\">\n            <h3 class=\"upcoming-card-title\">${title}</h3>\n\n            <div class=\"upcoming-card-numbers-wrap-top\">\n              <div class=\"upcoming-card-release-wrap\">\n                <span class=\"upcoming-card-release-text\">Release date</span>\n                <span class=\"upcoming-card-release-data\">${release_date}</span>\n              </div>\n\n              <div class=\"upcoming-card-vote-wrap\">\n                <div class=\"upcoming-card-vote\"><span>Vote / Votes</span></div>\n                <div class=\"upcoming-card-vote-data\">\n                  <span>${vote_average}</span> / <span>${vote_count}</span>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"upcoming-card-numbers-wrap-down\">\n              <div class=\"upcoming-card-popularity-wrap\">\n                <span class=\"upcoming-card-popularity-text\">Popularity</span>\n                <span class=\"upcoming-card-popularity-data\">${popularity.toFixed(\n                  1\n                )}</span>\n              </div>\n\n              <div class=\"upcoming-card-genre-wrap\">\n                <span class=\"upcoming-card-genre-text\">Genre</span>\n                <span class=\"upcoming-card-genre-data\">${listGenres}</span>\n              </div>\n            </div>\n \n\n            <span class=\"upcoming-card-about-title\">About</span>\n\n            <p class=\"upcoming-card-about-text\">${overview}</p>\n\n            <button class=\"upcoming-button\" type=\"button\">\n              Add to my library\n            </button>\n          </div>\n        </div>`;\n  upcomingWrapEl.insertAdjacentHTML('beforeend', markup);\n}\n\n// Функція для визначення шляху зображення на основі ширини екрану\n\nfunction getImagePath(backdropPath, posterPath, isMobile) {\n  if (isMobile === true && posterPath !== null) {\n    return `https://image.tmdb.org/t/p/original/${posterPath}`;\n  } else if (\n    isMobile === true &&\n    posterPath === null &&\n    backdropPath !== null\n  ) {\n    return `https://image.tmdb.org/t/p/original/${backdropPath}`;\n  } else if (isMobile === false && backdropPath !== null) {\n    return `https://image.tmdb.org/t/p/original/${backdropPath}`;\n  } else if (\n    isMobile === false &&\n    backdropPath === null &&\n    posterPath !== null\n  ) {\n    return `https://image.tmdb.org/t/p/original/${posterPath}`;\n  } else {\n    return 'https://pbs.twimg.com/media/C5OTOt3UEAAExIk.jpg';\n  }\n}\n\nfunction filterGenres(genre_ids) {\n  if (genre_ids.length > 2) {\n    return genre_ids.slice(0, 2);\n  }\n\n  return genre_ids;\n}\n\nfunction getCurrentEndLastDayOfMonth() {\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const currentMonth = String(currentDate.getMonth() + 1).padStart(2, '0');\n  const currentDay = String(currentDate.getDate()).padStart(2, '0');\n\n  const formattedStartDate = `${currentYear}-${currentMonth}-${currentDay}`;\n\n  const nextMonthFirstDay = new Date(currentYear, currentMonth, 1);\n  const lastDayOfMonth = new Date(nextMonthFirstDay - 1).getDate();\n  const lastDayOfMonthFormatted = String(lastDayOfMonth).padStart(2, '0');\n\n  const formattedEndDate = `${currentYear}-${currentMonth}-${lastDayOfMonthFormatted}`;\n\n  return { formattedStartDate, formattedEndDate };\n}\n\n// =========== function getRandomValue =============\n\nfunction getRandomValue(array) {\n  const randomIndex = Math.floor(Math.random() * array.length);\n  return array[randomIndex];\n}\n\nwindow.addEventListener('DOMContentLoaded', getUpcomingFilm);\nwindow.addEventListener('DOMContentLoaded', getWeeklyTrends);\n"],"names":["$bpxeT","parcelRequire","$ef95d285b54824a0$var$listOfFilms","document","querySelector","$ef95d285b54824a0$var$upcomingWrapEl","$ef95d285b54824a0$var$_getWeeklyTrends","$parcel$interopDefault","$2TvXO","mark","_callee","data","$jyO6b","getWeeklyTrending","_ctx","sent","$ef95d285b54824a0$var$renderWeeklyThreeTrends","$ef95d285b54824a0$var$getFirstThreeElements","results","apply","this","arguments","array","slice","firstThreeFilms","$ef95d285b54824a0$var$_renderWeeklyThreeTrends","_callee1","markup","console","log","Promise","all","map","param","title","release_date","genre_ids","id","poster_path","name","first_air_date","vote_average","listGenres","backdrop_path","$ef95d285b54824a0$var$filterGenres","$ef95d285b54824a0$var$getGenresById","concat","substring","parseFloat","toFixed","_ctx1","innerHTML","join","ids","$ef95d285b54824a0$var$_getGenresById","genres","arrGenres","getGenre","genre1","find","genre","$ef95d285b54824a0$var$_getUpcomingFilm","ref","formattedStartDate","formattedEndDate","$ef95d285b54824a0$var$getCurrentEndLastDayOfMonth","getUpcoming","$ef95d285b54824a0$var$renderUpcomingFilm","$ef95d285b54824a0$var$getRandomValue","upcomingFilm","$ef95d285b54824a0$var$_renderUpcomingFilm","popularity","vote_count","overview","isMobile","imagePath","window","innerWidth","$ef95d285b54824a0$var$getImagePath","insertAdjacentHTML","backdropPath","posterPath","length","currentDate","Date","currentYear","getFullYear","currentMonth","String","getMonth","padStart","currentDay","getDate","nextMonthFirstDay","lastDayOfMonth","lastDayOfMonthFormatted","Math","floor","random","addEventListener","location","href"],"version":3,"file":"index.16b96785.js.map"}