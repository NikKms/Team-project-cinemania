{"mappings":"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","sources":["src/partials/js/my-lib/lib-storage.js","src/partials/js/my-lib/lib-refs.js","src/partials/js/modal.js","src/partials/js/home/example-home.js"],"sourcesContent":["import { Notify } from 'notiflix';\nimport { libRefs } from './lib-refs';\n\nconst localMoviesArr = JSON.parse(localStorage.getItem('films')) || [];\n\nconst clearLibrary = () => {\n  localStorage.removeItem('films');\n};\n\nconst addFilmToStorage = film => {\n  const filmId = film.id;\n  const isFilmExists = localMoviesArr.some(({ id }) => id === filmId);\n\n  if (!isFilmExists) {\n    localMoviesArr.unshift(film);\n    localStorage.setItem('films', JSON.stringify(localMoviesArr));\n    Notify.success('Film was added to library successfully');\n    return;\n  }\n  alert('!!!');\n  // removeItemFromLocalStorage(film.id);\n};\n\nconst removeItemFromLocalStorage = id => {\n  const items = JSON.parse(localStorage.getItem('films')) || [];\n\n  const index = items.findIndex(item => item.id === id);\n\n  if (index !== -1) {\n    items.splice(index, 1);\n    localStorage.setItem('films', JSON.stringify(items));\n  }\n};\n\nconst getParsedFilms = () => {\n  try {\n    const filmsArr = localStorage.getItem('films');\n    return JSON.parse(filmsArr) || [];\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst parsedFilms = getParsedFilms();\n\nconst parsedFilmsGenreIds = [\n  ...new Set(parsedFilms.flatMap(({ genres }) => genres.map(({ id }) => id))),\n];\n\nexport { parsedFilms, parsedFilmsGenreIds, addFilmToStorage, clearLibrary };\n","const libRefs = {\n  libSelectEl: document.getElementById('js-genre-select'),\n  libMoviesListEl: document.getElementById('js-lib-list'),\n  libLoadMoreBtn: document.getElementById('js-loadMore-btn'),\n  libClearBtn: document.getElementById('clear-lib-btn'),\n};\n\nexport { libRefs };\n","import { swiper } from '../../partials/js/hero/hero';\nimport { getInfoByMovie } from './api';\nimport { getGenre } from './api';\nimport { addFilmToStorage } from './my-lib/lib-storage';\nimport { onWatchTrailer } from './hero/trailer-modal';\nimport { getGenresById } from './home/example-home';\n\nconst refs = {\n  openModal: document.querySelector('[data-modal-open]'),\n  closeModal: document.querySelector('[data-modal-close]'),\n  backdrop: document.querySelector('[data-modal]'),\n  upcomingWrapLi: document.querySelector('.modal-info'),\n  addToLibBtn: null,\n};\n\ndocument.addEventListener('click', onOpenModal);\nrefs.closeModal.addEventListener('click', onCloseModal);\nrefs.backdrop.addEventListener('click', onBackdropClick);\n\nfunction onOpenModal(event) {\n  const cardEl = event.target.closest('.is-id');\n  if (cardEl === null) return;\n\n  const cardId = cardEl.dataset.id;\n  getMovieById(cardId);\n\n  let currentUrl = window.location.href;\n  if (!currentUrl.includes('my-lib-page.html')) {\n    swiper.autoplay.stop();\n  }\n\n  document.body.classList.add('not-scroll-body');\n  window.addEventListener('keydown', onEscKeyPress);\n  refs.backdrop.classList.remove('is-hidden');\n}\n\nfunction onCloseModal() {\n  window.removeEventListener('keydown', onEscKeyPress);\n\n  let currentUrl = window.location.href;\n  if (!currentUrl.includes('my-lib-page.html')) {\n    swiper.autoplay.start();\n  }\n\n  document.body.classList.remove('not-scroll-body');\n  refs.backdrop.classList.add('is-hidden');\n}\n\nfunction onBackdropClick(event) {\n  if (event.currentTarget === event.target) {\n    onCloseModal();\n  }\n}\n\nfunction onEscKeyPress(event) {\n  if (event.code === 'Escape') onCloseModal();\n}\n\nasync function getMovieById(id) {\n  const data = await getInfoByMovie(id);\n  renderFilmInModal(data);\n}\n\nasync function renderFilmInModal(film) {\n  console.log(film);\n  const {\n    poster_path,\n    backdrop_path,\n    genres,\n    overview,\n    popularity,\n    title,\n    vote_average,\n    vote_count,\n    id,\n  } = film;\n\n  const genresListIds = genres.map(genre => genre.id);\n  const formatedGenres = await getGenresById(genresListIds);\n\n  let imagePath = '';\n  if (poster_path !== null) {\n    imagePath = `https://image.tmdb.org/t/p/original/${poster_path}`;\n  } else if (backdrop_path !== null) {\n    imagePath = `https://image.tmdb.org/t/p/original/${backdrop_path}`;\n  } else {\n    imagePath =\n      'https://d2ths1nqi4sbhh.cloudfront.net/images/no-image.png?v=3884857787';\n  }\n\n  const markup = `\n    <div class=\"modal-card\">\n      <img\n        class=\"modal-img\"\n        src=\"${imagePath}\"\n        alt=\" \"\n      />\n\n      <div class=\"modal-card-wrap\">\n        <h3 class=\"modal-card-title\">${title}</h3>\n\n          <div class=\"modal-card-vote-wrap\">\n            <div class=\"modal-card-vote color-description\"><span>Vote / Votes</span></div>\n            <div class=\"modal-card-vote-data\">\n              <span>${vote_average.toFixed(\n                1\n              )}</span> / <span>${vote_count}</span>\n            </div>\n          </div>\n        \n          <div class=\"modal-card-popularity-wrap\">\n            <span class=\"modal-card-popularity-text color-description\">Popularity</span>\n            <span class=\"modal-card-popularity-data\"\n              >${popularity.toFixed(1)}</span\n            >\n          </div>\n\n          <div class=\"modal-card-genre-wrap\">\n            <span class=\"modal-card-genre-text color-description\">Genre</span>\n            <span class=\"modal-card-genre-data\">${formatedGenres}</span>\n          </div>\n        \n        <span class=\"modal-card-about-title color-description\">About</span>\n\n        <p class=\"modal-card-about-text\">${overview}</p>\n\n        <button class=\"modal-button gap-right\" type=\"button\"><span>Add to my library</span></button>\n         <button type=\"button\" class=\" modal-button hero-btn-trailer\" id=\"hero-btn-trailer\" data-id=\"${id}\">\n    Watch trailer\n  </button>\n      </div>\n    </div>`;\n\n  refs.upcomingWrapLi.innerHTML = markup;\n\n  refs.addToLibBtn = document.querySelector('.modal-button');\n\n  const addToLib = evt => {\n    addFilmToStorage(film);\n    evt.currentTarget.textContent = '!!';\n  };\n  refs.addToLibBtn.addEventListener('click', addToLib);\n}\n\nexport { refs };\n","import * as hero from '../../js/modal';\nimport { getWeeklyTrending } from '../api';\nimport { getUpcoming } from '../api';\nimport { getGenre } from '../api';\n\nconst listOfFilms = document.querySelector('.weekly-cards-wrap');\nconst upcomingWrapEl = document.querySelector('.upcoming_wrap');\nconst seeAll = document.querySelector('.weekly-title-link');\n\n// ================See all=================\n\n// seeAll.addEventListener('click', () => {\n//   location.href = 'catalog.html';\n// });\n\n// ================ Weekly trends section ==============\n\nasync function getWeeklyTrends() {\n  const data = await getWeeklyTrending();\n\n  const firstThreeFilms = getFirstThreeElements(data.results);\n  renderWeeklyThreeTrends(firstThreeFilms);\n}\n\nfunction getFirstThreeElements(array) {\n  return array.slice(0, 3);\n}\n\nasync function renderWeeklyThreeTrends(firstThreeFilms) {\n  console.log(firstThreeFilms);\n  const markup = await Promise.all(\n    firstThreeFilms.map(\n      async ({\n        backdrop_path,\n        title,\n        release_date,\n        genre_ids,\n        id,\n        poster_path,\n        name,\n        first_air_date,\n        vote_average,\n      }) => {\n        genre_ids = filterGenres(genre_ids);\n        const listGenres = await getGenresById(genre_ids);\n\n        return `<li class=\"weekly-card is-id\" data-id=${id}>\n        <div class=\"weekly-container-image\">\n          <img\n            class=\"weekly-card-image\"\n           src=\"https://image.tmdb.org/t/p/original/${poster_path}\"\n            alt=\"\"\n          />\n         <div class=\"overlay\"></div>       \n        </div>\n  <div class=\"weekly-card-description\">\n    <h3 class=\"weekly-card-description-title\">${title || name}</h3>\n    <div class='weekly-card-description-wrap'>\n       <p class=\"weekly-card-description-other\">${listGenres} | ${\n          release_date\n            ? release_date.substring(0, 4)\n            : first_air_date.substring(0, 4)\n        }</p>\n\n     <div class=\"Stars\" style=\"--rating: ${parseFloat(\n       (vote_average / 2).toFixed(1)\n     )};\" aria-label=\"Rating of this product is 2.3 out of 5.\"></div>\n      </div>\n  </div>\n      </li>`;\n      }\n    )\n  );\n\n  listOfFilms.innerHTML = markup.join('');\n}\n\nasync function getGenresById(ids) {\n  const data = await getGenre();\n  const genres = data.genres;\n\n  const arrGenres = ids.map(id => {\n    const genre = genres.find(genre => genre.id === id);\n    return genre ? genre.name : '';\n  });\n  return arrGenres.join(', ');\n}\n\n// ================ Upcoming this month section ==============\n\nasync function getUpcomingFilm() {\n  const { formattedStartDate, formattedEndDate } =\n    getCurrentEndLastDayOfMonth();\n  try {\n    const data = await getUpcoming(formattedStartDate, formattedEndDate);\n    const randomValue = getRandomValue(data.results);\n    renderUpcomingFilm(randomValue);\n  } catch (error) {\n    upcomingWrapEl.insertAdjacentHTML(\n      'beforeend',\n      '<p class=\"upcoming-not-found\">OOPS...We are very sorry! We don’t have any results</p>'\n    );\n  }\n}\n\nasync function renderUpcomingFilm(upcomingFilm) {\n  let {\n    backdrop_path,\n    poster_path,\n    genre_ids,\n    popularity,\n    release_date,\n    title,\n    vote_average,\n    vote_count,\n    overview,\n  } = upcomingFilm;\n\n  genre_ids = filterGenres(genre_ids);\n\n  const listGenres = await getGenresById(genre_ids);\n\n  const isMobile = window.innerWidth < 767;\n  let imagePath = getImagePath(backdrop_path, poster_path, isMobile);\n\n  const markup = `<div class=\"upcoming-card\">\n\n            <img class=\"upcoming-card-img\" src=\"${imagePath}\" alt=\" \" />\n\n          <div class=\"upcoming-card-wrap\">\n            <h3 class=\"upcoming-card-title\">${title}</h3>\n\n            <div class=\"upcoming-card-numbers-wrap-top\">\n              <div class=\"upcoming-card-release-wrap\">\n                <span class=\"upcoming-card-release-text\">Release date</span>\n                <span class=\"upcoming-card-release-data\">${release_date}</span>\n              </div>\n\n              <div class=\"upcoming-card-vote-wrap\">\n                <div class=\"upcoming-card-vote\"><span>Vote / Votes</span></div>\n                <div class=\"upcoming-card-vote-data\">\n                  <span>${vote_average}</span> / <span>${vote_count}</span>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"upcoming-card-numbers-wrap-down\">\n              <div class=\"upcoming-card-popularity-wrap\">\n                <span class=\"upcoming-card-popularity-text\">Popularity</span>\n                <span class=\"upcoming-card-popularity-data\">${popularity.toFixed(\n                  1\n                )}</span>\n              </div>\n\n              <div class=\"upcoming-card-genre-wrap\">\n                <span class=\"upcoming-card-genre-text\">Genre</span>\n                <span class=\"upcoming-card-genre-data\">${listGenres}</span>\n              </div>\n            </div>\n \n            <span class=\"upcoming-card-about-title\">About</span>\n\n            <p class=\"upcoming-card-about-text\">${overview}</p>\n\n            <button class=\"upcoming-button\" type=\"button\">\n              Add to my library\n            </button>\n          </div>\n        </div>`;\n  upcomingWrapEl.insertAdjacentHTML('beforeend', markup);\n}\n\n// Функція для визначення шляху зображення на основі ширини екрану\n\nfunction getImagePath(backdropPath, posterPath, isMobile) {\n  if (isMobile === true && posterPath !== null) {\n    return `https://image.tmdb.org/t/p/original/${posterPath}`;\n  } else if (isMobile === false && backdropPath !== null) {\n    return `https://image.tmdb.org/t/p/original/${backdropPath}`;\n  } else if (\n    isMobile === false &&\n    backdropPath === null &&\n    posterPath !== null\n  ) {\n    return `https://image.tmdb.org/t/p/original/${posterPath}`;\n  } else if (\n    isMobile === true &&\n    posterPath === null &&\n    backdropPath !== null\n  ) {\n    return `https://image.tmdb.org/t/p/original/${backdropPath}`;\n  } else {\n    return 'https://d2ths1nqi4sbhh.cloudfront.net/images/no-image.png?v=3884857787';\n  }\n}\n\nfunction filterGenres(genre_ids) {\n  if (genre_ids.length > 2) {\n    return genre_ids.slice(0, 2);\n  }\n\n  return genre_ids;\n}\n\nfunction getCurrentEndLastDayOfMonth() {\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const currentMonth = String(currentDate.getMonth() + 1).padStart(2, '0');\n  const currentDay = String(currentDate.getDate()).padStart(2, '0');\n\n  const formattedStartDate = `${currentYear}-${currentMonth}-${currentDay}`;\n\n  const nextMonthFirstDay = new Date(currentYear, currentMonth, 1);\n  const lastDayOfMonth = new Date(nextMonthFirstDay - 1).getDate();\n  const lastDayOfMonthFormatted = String(lastDayOfMonth).padStart(2, '0');\n\n  const formattedEndDate = `${currentYear}-${currentMonth}-${lastDayOfMonthFormatted}`;\n\n  return { formattedStartDate, formattedEndDate };\n}\n\n// =========== function getRandomValue =============\n\nfunction getRandomValue(array) {\n  const randomIndex = Math.floor(Math.random() * array.length);\n  return array[randomIndex];\n}\n\nwindow.addEventListener('DOMContentLoaded', getUpcomingFilm);\nwindow.addEventListener('DOMContentLoaded', getWeeklyTrends);\n\nexport { getGenresById, filterGenres };\n"],"names":["$8nrFW","parcelRequire","$eae986af956624d5$var$localMoviesArr","JSON","parse","localStorage","getItem","$eae986af956624d5$export$72aeb3fdc096d21d","removeItem","$eae986af956624d5$export$d326f28fa561aa06","film","filmId","id","some","param","unshift","setItem","stringify","$6JpON","Notify","success","alert","$eae986af956624d5$export$c118d883ed694a49","filmsArr","error","console","$eae986af956624d5$var$getParsedFilms","$eae986af956624d5$export$c149f286d6cc84b6","$parcel$interopDefault","Set","flatMap","param1","genres","map","$01147738748aa13a$export$a53e322463ec8607","libSelectEl","document","getElementById","libMoviesListEl","libLoadMoreBtn","libClearBtn","$bpxeT","$161b301ea1fa5d59$export$21666b427502ea6d","openModal","querySelector","closeModal","backdrop","upcomingWrapLi","addToLibBtn","$161b301ea1fa5d59$var$onCloseModal","window","removeEventListener","$161b301ea1fa5d59$var$onEscKeyPress","location","href","includes","$i6wQM","swiper","autoplay","start","body","classList","remove","add","event","code","$161b301ea1fa5d59$var$_getMovieById","$2TvXO","mark","_callee","$jyO6b","getInfoByMovie","$161b301ea1fa5d59$var$renderFilmInModal","_ctx","sent","apply","this","arguments","$161b301ea1fa5d59$var$_renderFilmInModal","poster_path","backdrop_path","overview","popularity","title","vote_average","vote_count","genresListIds","formatedGenres","imagePath","markup","addToLib","log","genre","$kzj0G","getGenresById","concat","toFixed","innerHTML","evt","$kaqNk","addFilmToStorage","currentTarget","textContent","addEventListener","cardEl","target","closest","$161b301ea1fa5d59$var$getMovieById","dataset","stop","$ef95d285b54824a0$var$listOfFilms","$ef95d285b54824a0$var$upcomingWrapEl","$ef95d285b54824a0$var$_getWeeklyTrends","data","getWeeklyTrending","$ef95d285b54824a0$var$renderWeeklyThreeTrends","$ef95d285b54824a0$var$getFirstThreeElements","results","array","slice","firstThreeFilms","$ef95d285b54824a0$var$_renderWeeklyThreeTrends","_callee1","Promise","all","release_date","genre_ids","name","first_air_date","listGenres","$ef95d285b54824a0$export$d1804f076a27e43a","$ef95d285b54824a0$export$f32c0af4ea6694a5","substring","parseFloat","_ctx1","join","ids","$ef95d285b54824a0$var$_getGenresById","arrGenres","getGenre","genre1","find","$ef95d285b54824a0$var$_getUpcomingFilm","ref","formattedStartDate","formattedEndDate","$ef95d285b54824a0$var$getCurrentEndLastDayOfMonth","getUpcoming","$ef95d285b54824a0$var$renderUpcomingFilm","$ef95d285b54824a0$var$getRandomValue","insertAdjacentHTML","upcomingFilm","$ef95d285b54824a0$var$_renderUpcomingFilm","isMobile","innerWidth","$ef95d285b54824a0$var$getImagePath","backdropPath","posterPath","length","currentDate","Date","currentYear","getFullYear","currentMonth","String","getMonth","padStart","currentDay","getDate","nextMonthFirstDay","lastDayOfMonth","lastDayOfMonthFormatted","Math","floor","random"],"version":3,"file":"my-lib-page.364d851e.js.map"}