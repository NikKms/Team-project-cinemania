{"mappings":"4iBAAA,IAAAA,EAAAC,EAAA,S,gBCAAA,EAAA,S,WCAAA,EAAA,S,mDCAMC,G,WAAO,CACXC,WAAYC,SAASC,eAAe,cAEpCC,aAAcF,SAASG,cAAc,kBACrCC,WAAYJ,SAASG,cAAc,gBACnCE,aAAcL,SAASG,cAAc,iBACrCG,WAAYN,SAASG,cAAc,iBCJxBI,GCFbX,EAAAC,EAAA,S,aDE2B,SAAAW,GACzB,IA6BeC,EA7BTC,EAASF,EACZG,KAAI,SAAAC,GACH,MAAO,eACwCC,OADzBD,EAAKE,GAAG,gFAE5BD,OAD6CD,EAAKG,OAAO,YAI5BF,OAH7BD,EAAKI,MACN,8FAKaH,OAHiBD,EAAKI,MAAM,sHAI5BH,OADAD,EAAKK,OAAO,+BAKHJ,OAJTD,EAAKM,KAAK,iGAIeL,OAAhBD,EAAKO,OAAS,EAAE,iK,IAQxCC,KAAK,IAMOX,EALPC,EAMRZ,EAAKI,aAAamB,UAAYZ,C,GC9BhC,I,EAAMa,G,EAAkBC,EAAA3B,EAAA,CAAA2B,EAAAC,GAAAC,MAAA,SAAAC,EAAMC,G,IACtBC,EACAC,E,kFADcC,I,OAAdF,EAAKG,EAAAC,KACLH,EAAeF,EAAWhB,KAC9B,SAAAsB,G,IAAGnB,EAAEmB,EAAFnB,GAAIE,EAAKiB,EAALjB,MAAOkB,EAAWD,EAAXC,YAAaC,EAAYF,EAAZE,aAAcC,EAASH,EAATG,UAAWC,EAAYJ,EAAZI,aAClD,MAAO,CACLvB,GAAIA,EACJE,MAAOA,EACPD,OAAQmB,EACRf,OAAQgB,EACRlB,OAAQqB,EAAeV,EAAOQ,GAC9BlB,KAAMqB,EAAgBF,G,IAI5B9B,EAAYsB,G,oDAdgBF,G,iCAiBxBW,EAAiB,SAACV,EAAOQ,GAC7B,IAAMnB,EAAS,GAMf,OALAW,EAAMjB,KAAI,SAAAsB,G,IAAGnB,EAAEmB,EAAFnB,GAAI0B,EAAIP,EAAJO,MACe,IAA1BJ,EAAUK,QAAQ3B,IACpBG,EAAOyB,KAAKF,E,IAGTvB,EAAO0B,MAAM,EAAG,GAAGvB,KAAK,K,EAI3BmB,EAAkB,SAAAK,GAGtB,OAFa,IAAIC,KAAKD,GACJE,a,EAIdC,EAAY,SAACC,EAAKC,GACtB,IACE,IAAMC,EAAkBC,KAAKC,UAAUH,GACvCI,aAAaC,QAAQN,EAAKE,E,CAC1B,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,GAIvCC,EAAY,SAAAV,GAChB,IACE,IAAME,EAAkBG,aAAaM,QAAQX,GAC7C,OAA2B,OAApBE,OAA2BU,EAAYT,KAAKU,MAAMX,E,CACzD,MAAOK,GACPC,QAAQD,MAAM,oBAAqBA,EAAME,Q,GHhD9BK,EIHZ,W,sBJGkBC,EACPC,EAAYC,EAAMC,G,IAAWC,EAAAC,UAAAC,OAAA,YAAAD,UAAA,GAAWA,UAAA,GAAF,G,+BASlD7C,EAAA+C,EAAA,CAAAC,KAAA,eAAehD,EAAA3B,EAAA,CAAA2B,EAAAC,GAAAC,MAAA,SAAAC,I,IAoBb8C,EAHM9D,E,qEAhBN8C,QAAQiB,IAAIC,EAAKP,UACbO,EAAKV,YAAc,GAAC,C,sBACtBU,EAAKC,Q,iCAIPD,EAAKE,mBAAqB,GAE1BF,EAAKG,cAAcH,EAAKE,oBACpBF,EAAKV,WAAa,IACpBU,EAAKI,oBAAoBJ,EAAKE,oBAC9BF,EAAKK,eAAeL,EAAKE,oBACzBF,EAAKI,oBAAoBJ,EAAKE,oBAAoB,GAClDF,EAAKM,YAAYN,EAAKE,qBAGlBlE,EAASgE,EAAKO,iBAAiBP,EAAKE,mBAAmBxD,KAAK,KAClEsD,EAAKQ,OAAOxE,GACZqC,EAAU,cAAe2B,EAAKS,cAC9BX,EAAAhB,SAAQiB,IAARW,MAAAZ,EAAYjD,EAAA8D,EAAA,CAAGX,EAAKP,S,UACdO,EAAKR,UAALkB,MAAgDV,EAAhD,CAAeA,EAAKS,aAApBtE,OAAiCU,EAAA8D,EAAA,CAAGX,EAAKP,U,QAC/CX,QAAQiB,IAAIC,EAAKV,Y,6CAGnBzC,EAAA+C,EAAA,CAAAC,KAAA,iBAAgB,SAAAe,GACd,IAAK,IAAIC,EAAO,EAAGA,GAAQC,KAAKC,IAAI,EAAGC,EAAK1B,YAAauB,IAAQ,CAC/D,IAAMI,EAAWD,EAAKP,cAAgBI,EAAO,aAAe,GACtDK,EAAMF,EAAKG,qBAAqB,IAAMN,EAAMI,GAClDL,EAAI5C,KAAKkD,E,KAIbrE,EAAA+C,EAAA,CAAAC,KAAA,kBAAiB,SAAAe,GAGf,IAFA,IAAMQ,EAAYN,KAAKO,IAAI,EAAGL,EAAKP,YAAc,GAC3Ca,EAAUR,KAAKC,IAAIC,EAAKP,YAAc,EAAGO,EAAK1B,WAAa,GACxDuB,EAAOO,EAAWP,GAAQS,EAAST,IAAQ,CAClD,IAAMI,EAAWD,EAAKP,cAAgBI,EAAO,aAAe,GACxDK,EAAM,GAERA,EADEL,GAAQ,EACJG,EAAKG,qBAAqB,IAAMN,EAAMI,GAEtCD,EAAKG,qBAAqBN,EAAMI,GAExCL,EAAI5C,KAAKkD,E,KAIbrE,EAAA+C,EAAA,CAAAC,KAAA,uBAAsB,SAACe,G,IAAKW,EAAK7B,UAAAC,OAAA,YAAAD,UAAA,IAAAA,UAAA,IAE7B6B,GAAUP,EAAKP,YAAcO,EAAK1B,WAAa,IAC7CiC,GAASP,EAAKP,YAAc,IAE9BG,EAAI5C,KAAK,gD,IAIbnB,EAAA+C,EAAA,CAAAC,KAAA,eAAc,SAAAe,GACZ,IAAMY,EAAWR,EAAK1B,WAChB2B,EAAWD,EAAKP,cAAgBe,EAAW,aAAe,GAC1DN,EAAMF,EAAKG,qBAAqBK,EAAUP,GAChDL,EAAI5C,KAAKkD,E,IAGXrE,EAAA+C,EAAA,CAAAC,KAAA,wBAAuB,SAAC4B,EAAMC,GAC5B,MAAO,8BAC4BvF,OADEuF,EAAY,6CACkBvF,OAAhCsF,EAAK,6BAAgCtF,OAALsF,EAAK,0B,IAI1E5E,EAAA+C,EAAA,CAAAC,KAAA,oBAAmB,SAAA8B,GAajB,MAZ4B,kCAKxBxF,OAHA6E,EAAK1B,YAAc,EAAI,oBAAsB,GAC9C,oFAI+BnD,OAF9B6E,EAAK1B,YAAc,EAAI,2BAA6B,GACrD,yDAGGnD,OAF4BwF,EAAgB,wFAG7CxF,OADC6E,EAAK1B,YAAc,EAAI,2BAA6B,GACrD,gC,IAKPzC,EAAA+C,EAAA,CAAAC,KAAA,UAAS,SAAAxE,GACP2F,EAAKf,QACL7E,EAAKI,aAAaoG,mBAAmB,WAAYvG,GACjD,IAAMwG,EAAKvG,SAASG,cAAc,eAC5BqG,EAAsBxG,SAASG,cAAc,eAEnDoG,EAAGE,iBAAiB,QAASf,EAAKgB,YAClCF,EAAoBC,iBAAiB,QAASf,EAAKiB,cAEnD,IAAMC,EAAa5G,SAASG,cAC1B,4CAEuB,IAArBuF,EAAKP,YACPyB,EAAWC,MAAMC,QAAU,OAE3BF,EAAWC,MAAMC,QAAU,QAG7B,IAAMC,EAAa/G,SAASG,cAC1B,4CAEEuF,EAAKP,cAAgBO,EAAK1B,WAC5B+C,EAAWF,MAAMC,QAAU,OAE3BC,EAAWF,MAAMC,QAAU,O,IAI/BvF,EAAA+C,EAAA,CAAAC,KAAA,gBAAe,SAAAyC,GACb,IAAMC,EAAWD,EAAEE,OAEfD,EAASE,UAAUC,SAAS,2BAC9B1B,EAAK2B,OAEHJ,EAASE,UAAUC,SAAS,2BAC9B1B,EAAK4B,M,IAIT/F,EAAA+C,EAAA,CAAAC,KAAA,SAAQ,WACN,IAAMgC,EAAKvG,SAASG,cAAc,eAC9BoG,GAAIA,EAAGgB,Q,IAGbhG,EAAA+C,EAAA,CAAAC,KAAA,QAAO,WACL,GAAyB,IAArBmB,EAAKP,YAAT,CACAO,EAAKP,aAAe,EACpBO,EAAK8B,eAEL,IAAMZ,EAAa5G,SAASG,cAC1B,4CAEuB,IAArBuF,EAAKP,YACPyB,EAAWC,MAAMC,QAAU,OAE3BF,EAAWC,MAAMC,QAAU,OAVD,C,IAc9BvF,EAAA+C,EAAA,CAAAC,KAAA,QAAO,WACL,GAAImB,EAAKP,cAAgBO,EAAK1B,WAA9B,CACA0B,EAAKP,aAAe,EACpBO,EAAK8B,eAEL,IAAMT,EAAa/G,SAASG,cAC1B,4CAEEuF,EAAKP,cAAgBO,EAAK1B,WAC5B+C,EAAWF,MAAMC,QAAU,OAE3BC,EAAWF,MAAMC,QAAU,OAVa,C,IAmB5CvF,EAAA+C,EAAA,CAAAC,KAAA,cAAa,SAAAyC,GACXA,EAAES,iBACF,IAAMlC,EAAOmC,SAASV,EAAEE,OAAOS,QAAQxB,MAClCyB,MAAMrC,KACTG,EAAKP,YAAcI,EACnBG,EAAK8B,e,IAlLPhE,QAAQiB,IAAIN,GACZI,KAAKP,WAAaA,EAClBO,KAAKY,YAAclB,EACnBM,KAAKL,UAAYA,EACjBK,KAAKJ,OAASA,EACdI,KAAKK,mBAAqB,E,iBAmK5B5B,IAAA,a,MAAA,SAAWmD,GACT5B,KAAKY,YAAcgB,EACnB5B,KAAKiD,c,OI/KN,G,uCLOGK,EAAU,mC,SAEDC,EAAUC,G,OAAVC,EAAS5C,MAAAb,KAAAH,U,UAAT4D,I,OAAAA,EAAfzG,EAAA3B,EAAA,CAAA2B,EAAAC,GAAAC,MAAA,SAAAC,EAAyBqG,G,IAGfE,E,mFADN,EAAAC,EAAAC,Y,SACmBC,EAAAC,QAAMC,IAAIP,G,cAAvBE,EAAIlG,EAAAC,MACV,EAAAkG,EAAAK,gB,kBACON,G,uCAEPzE,QAAQiB,IAAG1C,EAAAyG,KACX,EAAAN,EAAAK,gB,kBACO,M,0DATanD,MAAAb,KAAAH,U,CAajB,IAAMqE,EAAgB,W,MAAGlH,EAAA3B,EAAA,CAAA2B,EAAAC,GAAAC,MAAA,SAAAC,EAC9BgH,G,IACAC,EACAzH,EAKuC0H,EAA/BC,EAASC,EAAa3C,EAAI4C,EAAA3E,U,yEANlCuE,EAAUI,EAAA1E,OAAA,YAAA0E,EAAA,GAAAA,EAAA,GAAG,EACb7H,EAAI6H,EAAA1E,OAAA,YAAA0E,EAAA,GAAAA,EAAA,GAAG,GAEPjJ,EAAKO,aAAa2I,UAAW,EAC7BlJ,EAAKQ,WAAW0I,UAAW,EAC3BxF,QAAQiB,IAAIiE,EAAYC,EAAYzH,G,UACS,EAAA+H,EAAAC,YAC3CR,EACAC,EACAzH,G,cAHqC0H,EAItC7G,EAAAC,KAJO6G,EAA+BD,EAA/BC,QAASC,EAAsBF,EAAtBE,YAAa3C,EAASyC,EAATzC,KAK9B7E,EAAgBuH,G,kBACT,CACLA,UACAC,cACA3C,S,4DAhBFuC,G,gCAD2B,GAqBhBS,EAAgB,W,MAAG5H,EAAA3B,EAAA,CAAA2B,EAAAC,GAAAC,MAAA,SAAAC,EAAOiH,G,IAAYS,EAIzCnB,EAMAY,EAAS1C,EAAM2C,EAAWC,EAAA3E,U,yEAVegF,EAAQL,EAAA1E,OAAA,YAAA0E,EAAA,GAAAA,EAAA,GAAG,EAC5DjJ,EAAKO,aAAa2I,UAAW,EAC7BlJ,EAAKQ,WAAW0I,UAAW,E,SAEJlB,EACrB,0DAA0EjH,OAAhBgH,EAAQ,UAChEhH,OADwE8H,GAEzE9H,OADCuI,EAAW,gBAAyBvI,OAATuI,GAAa,GACzC,oB,cAHGnB,EAAMlG,EAAAC,KAAJiG,KAKRzE,QAAQiB,IAAIwD,GACJY,EAA+BZ,EAA/BY,QAAS1C,EAAsB8B,EAAtB9B,KAAM2C,EAAgBb,EAAhBa,YACvBtF,QAAQiB,IAAIoE,GACZvH,EAAgBuH,G,kBACT,CACLA,UACA1C,OACA2C,gB,4DAhBmCH,G,gCAAV,GAoBhB7G,EAAU,W,MAAGP,EAAA3B,EAAA,CAAA2B,EAAAC,GAAAC,MAAA,SAAAC,I,IAChBuG,EAGAhH,E,kFAHemH,EAAAC,QAAMC,IAC3B,yDAAiEzH,OAARgH,I,cADrDI,EAAMlG,EAAAC,KAAJiG,KAGFhH,EAAagH,EAAXhH,O,kBACDA,G,6FALc,GD3DjBoI,EAAarJ,SAASG,cAAc,gBACpCmJ,EAAetJ,SAASG,cAAc,iBACtCoJ,EAAavJ,SAASG,cAAc,eAcpCqJ,EAAS,W,MAAGjI,EAAA3B,EAAA,CAAA2B,EAAAC,GAAAC,MAAA,SAAAC,I,IACckH,EAAtBzC,EAAM2C,E,kFAAsBK,EAAiB,G,OAAvBP,EAAyB7G,EAAAC,KAA/CmE,EAAsByC,EAAtBzC,KAAM2C,EAAgBF,EAAhBE,YACK,IAAIhF,EAAWgF,EAAa3C,EAAMgD,GAC1C3B,e,6FAHE,GAMTiC,EAAc,W,MAAGlI,EAAA3B,EAAA,CAAA2B,EAAAC,GAAAC,MAAA,SAAAC,EAAMgI,G,IACrBhB,EAEwBE,EAAtBzC,EAAM2C,E,yEAFRJ,EAAahF,EAAU,cAC7BF,QAAQiB,IAAI,iBAAkBiE,G,SACMD,EAAiBC,EAAY,G,OAAnCE,EAAqC7G,EAAAC,KAA3DmE,EAAsByC,EAAtBzC,KAAM2C,EAAgBF,EAAhBE,YAEK,IAAIhF,EAAWgF,EAAa3C,EAAMsC,EAAkB,CACrEC,EACAvC,IAESqB,eACX+B,EAAWI,gBAAgB,Y,4DAVAD,G,gCAAT,GAadE,EAAmB,W,MAAGrI,EAAA3B,EAAA,CAAA2B,EAAAC,GAAAC,MAAA,SAAAC,I,IACpBT,EACF4I,E,kFADiB/H,I,OAAfb,EAAMc,EAAAC,MACR6H,EAAa5I,EAAON,KAAI,SAAAmJ,GAC1B,MAAO,kBAAgCjJ,OAAdiJ,EAAOhJ,GAAG,MAAgBD,OAAZiJ,EAAOtH,KAAK,Y,KAE1CuH,QAAS,oCACpBT,EAAajI,UAAYwI,EAAWzI,KAAK,IACzCkI,EAAaK,gBAAgB,Y,6FAPN,GAUnBK,EAAc,W,MAAGzI,EAAA3B,EAAA,CAAA2B,EAAAC,GAAAC,MAAA,SAAAC,EAAMsF,G,IACrB/D,EAE2B2F,EAAzBE,E,yEAFF7F,EAAQ+D,EAAEE,OAAOjE,M,SAEgBkG,EAAiB,EAAGnC,EAAEE,OAAOjE,O,OAAnC2F,EAAyC7G,EAAAC,KAAlE8G,EAAyBF,EAAzBE,YAAyBF,EAAZC,QAEF,IAAI/E,EAAWgF,EAAa,EAAGK,EAAkB,CAAClG,IAC1DuE,e,2DANgBR,G,gCAAT,GAsBdiD,EAAa,W,MAAG1I,EAAA3B,EAAA,CAAA2B,EAAAC,GAAAC,MAAA,SAAAC,EAAMsF,G,IACpB/D,EACAyF,EAEwBE,EAAtBE,E,yEAHF7F,EAAQ+D,EAAEE,OAAOjE,MACjByF,EAAahF,EAAU,c,SAEO+E,EAAiBC,EAAY,EAAGzF,G,OAAtC2F,EAA4C7G,EAAAC,KAAlE8G,EAAsBF,EAAtBE,YAAsBF,EAATzC,KAEF,IAAIrC,EAAWgF,EAAa,EAAGL,EAAkB,CAClEC,EACA,EACAzF,IAESuE,e,2DAXeR,G,gCAAT,GAcnBqC,EAAW5C,iBAAiB,UA7EN,SAAAO,GACpBA,EAAES,iBACF,IAAMyC,EAAW,IAAIC,SAASnD,EAAEE,QAC1BwC,EAAmBU,OAAOC,YAAYH,EAASI,WAA7CZ,aACHA,EAAarF,QAIlBtB,EAAU,aAAc2G,GACxBD,EAAeC,IAJbF,G,IAyEJe,OAAO9D,iBAAiB,OAAQ+C,GAEhCe,OAAO9D,iBAAiB,OAAQmD,GAChCW,OAAO9D,iBAAiB,QA/BE,WAMxB,IALA,IAGM+D,EAAW,GAERC,GAJS,IAAI5H,MAAOC,cAIL2H,GALR,KAKsBA,IACpCD,EAAS9H,KAAK,kBAAwB7B,OAAN4J,EAAE,MAAM5J,OAAF4J,EAAE,cAG1ClB,EAAWlI,UAAYmJ,EAASpJ,KAAK,G,IAuBvCkI,EAAa7C,iBAAiB,SAAUuD,GACxCT,EAAW9C,iBAAiB,SAAUwD,G","sources":["src/partials/js/catalog/example.js","src/partials/js/catalog/catalogApi.js","src/partials/js/catalog/pagination.js","src/partials/js/refs.js","src/partials/js/catalog/createCards.js","src/partials/js/catalog/catalogUtils.js","<<jsx-config-pragma.js>>"],"sourcesContent":["import { fetchGenre, getMoviesByQuery, showNewestMovies } from './catalogApi';\nimport { createDataCards, loadLocal, saveLocal } from './catalogUtils';\nimport Pagination from './pagination';\n\nconst searchForm = document.querySelector('.search-form');\nconst selectGenres = document.querySelector('#selectGenres');\nconst selectDate = document.querySelector('#selectDate');\n\nconst submitHandler = e => {\n  e.preventDefault();\n  const formData = new FormData(e.target);\n  const { searchMovies } = Object.fromEntries(formData.entries());\n  if (!searchMovies.length) {\n    afterLoad();\n    return;\n  }\n  saveLocal('searchTerm', searchMovies);\n  afterSearching(searchMovies);\n};\n\nconst afterLoad = async () => {\n  const { page, total_pages } = await showNewestMovies(1);\n  const pagination = new Pagination(total_pages, page, showNewestMovies);\n  pagination.createButton();\n};\n\nconst afterSearching = async searchMovies => {\n  const searchTerm = loadLocal('searchTerm');\n  console.log('afterSearching', searchTerm);\n  const { page, total_pages } = await getMoviesByQuery(searchTerm, 1);\n\n  const pagination = new Pagination(total_pages, page, getMoviesByQuery, [\n    searchTerm,\n    page,\n  ]);\n  pagination.createButton();\n  selectDate.removeAttribute('disabled');\n};\n\nconst filterSelectOptions = async () => {\n  const genres = await fetchGenre();\n  let arrOptions = genres.map(option => {\n    return `<option value=\"${option.id}\">${option.name}</option>`;\n  });\n  arrOptions.unshift(`<option value='all'>All</option>`);\n  selectGenres.innerHTML = arrOptions.join('');\n  selectGenres.removeAttribute('disabled');\n};\n\nconst setGenreFilter = async e => {\n  const value = e.target.value;\n\n  const { total_pages, results } = await showNewestMovies(1, e.target.value);\n\n  const pagination = new Pagination(total_pages, 1, showNewestMovies, [value]);\n  pagination.createButton();\n};\n\nconst dateSelectOptions = () => {\n  const endDate = 1970;\n  const startDate = new Date().getFullYear();\n\n  const yearList = [];\n\n  for (let i = startDate; i >= endDate; i--) {\n    yearList.push(`<option value=\"${i}\">${i}</option>`);\n  }\n\n  selectDate.innerHTML = yearList.join('');\n};\n\nconst setDateFilter = async e => {\n  const value = e.target.value;\n  const searchTerm = loadLocal('searchTerm');\n\n  const { total_pages, page } = await getMoviesByQuery(searchTerm, 1, value);\n\n  const pagination = new Pagination(total_pages, 1, getMoviesByQuery, [\n    searchTerm,\n    1,\n    value,\n  ]);\n  pagination.createButton();\n};\n\nsearchForm.addEventListener('submit', submitHandler);\nwindow.addEventListener('load', afterLoad);\n\nwindow.addEventListener('load', filterSelectOptions);\nwindow.addEventListener('load', dateSelectOptions);\n\nselectGenres.addEventListener('change', setGenreFilter);\nselectDate.addEventListener('change', setDateFilter);\n\nexport { createDataCards };\n","import Pagination from './pagination';\nimport { getByQuery } from '../api';\nimport { createDataCards, loadLocal } from './catalogUtils';\nimport axios from 'axios';\nimport { refs } from '../refs';\nimport { onLoader, removeLoader } from '../loader';\n\nconst API_KEY = '88b8a7c5d221d3120fb29d734050dc7d';\n\nasync function fetchData(url) {\n  try {\n    onLoader();\n    const data = await axios.get(url);\n    removeLoader();\n    return data;\n  } catch (error) {\n    console.log(error);\n    removeLoader();\n    return null;\n  }\n}\n\nexport const getMoviesByQuery = async (\n  searchTerm,\n  chosenPage = 1,\n  date = ''\n) => {\n  refs.selectGenres.disabled = true;\n  refs.selectDate.disabled = false;\n  console.log(searchTerm, chosenPage, date);\n  const { results, total_pages, page } = await getByQuery(\n    searchTerm,\n    chosenPage,\n    date\n  );\n  createDataCards(results);\n  return {\n    results,\n    total_pages,\n    page,\n  };\n};\n\nexport const showNewestMovies = async (chosenPage, genre_id = 0) => {\n  refs.selectGenres.disabled = false;\n  refs.selectDate.disabled = true;\n\n  const { data } = await fetchData(\n    `https://api.themoviedb.org/3/movie/now_playing?api_key=${API_KEY}&page=${chosenPage}${\n      genre_id ? `&with_genres=${genre_id}` : ''\n    }&language=en-US`\n  );\n  console.log(data);\n  const { results, page, total_pages } = data;\n  console.log(results);\n  createDataCards(results);\n  return {\n    results,\n    page,\n    total_pages,\n  };\n};\n\nexport const fetchGenre = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`\n  );\n  const { genres } = data;\n  return genres;\n};\n","import { refs } from '../refs';\nimport { saveLocal } from './catalogUtils';\n\nexport default class Pagination {\n  constructor(totalPages, page, getMovies, params = []) {\n    console.log(params);\n    this.totalPages = totalPages;\n    this.currentPage = page;\n    this.getMovies = getMovies;\n    this.params = params;\n    this.arrPaginationItems = [];\n  }\n\n  createButton = async () => {\n    console.log(this.params);\n    if (this.totalPages <= 1) {\n      this.reset();\n      return;\n    }\n\n    this.arrPaginationItems = [];\n\n    this.addFirstPages(this.arrPaginationItems);\n    if (this.totalPages > 6) {\n      this.addEllipsisIfNeeded(this.arrPaginationItems);\n      this.addMiddlePages(this.arrPaginationItems);\n      this.addEllipsisIfNeeded(this.arrPaginationItems, true);\n      this.addLastPage(this.arrPaginationItems);\n    }\n\n    const markup = this.createPagination(this.arrPaginationItems.join(''));\n    this.render(markup);\n    saveLocal('currentPage', this.currentPage);\n    console.log(...this.params);\n    await this.getMovies(this.currentPage, ...this.params);\n    console.log(this.totalPages);\n  };\n\n  addFirstPages = arr => {\n    for (let page = 1; page <= Math.min(3, this.totalPages); page++) {\n      const activeEl = this.currentPage === page ? 'btn-active' : '';\n      const btn = this.createPaginationItem('0' + page, activeEl);\n      arr.push(btn);\n    }\n  };\n\n  addMiddlePages = arr => {\n    const startPage = Math.max(4, this.currentPage - 2);\n    const endPage = Math.min(this.currentPage + 1, this.totalPages - 1);\n    for (let page = startPage; page <= endPage; page++) {\n      const activeEl = this.currentPage === page ? 'btn-active' : '';\n      let btn = [];\n      if (page <= 9) {\n        btn = this.createPaginationItem('0' + page, activeEl);\n      } else {\n        btn = this.createPaginationItem(page, activeEl);\n      }\n      arr.push(btn);\n    }\n  };\n\n  addEllipsisIfNeeded = (arr, atEnd = false) => {\n    if (\n      (atEnd && this.currentPage < this.totalPages - 2) ||\n      (!atEnd && this.currentPage > 3)\n    ) {\n      arr.push('<li class=\"pagination-item ellipsis\">...</li>');\n    }\n  };\n\n  addLastPage = arr => {\n    const lastPage = this.totalPages;\n    const activeEl = this.currentPage === lastPage ? 'btn-active' : '';\n    const btn = this.createPaginationItem(lastPage, activeEl);\n    arr.push(btn);\n  };\n\n  createPaginationItem = (page, activeClass) => {\n    return `<li class='pagination-item ${activeClass}'>\n              <a href='#' data-page='${page}' class='pagination-btn'>${page}</a>\n            </li>`;\n  };\n\n  createPagination = paginationItems => {\n    const paginationContainer = `\n      <div class='pagination ${\n        this.totalPages <= 1 ? 'pagination-hidden' : ''\n      }'>\n      <button type=\"button\" class='pagination-arrow pagination-arrows-prev${\n        this.totalPages <= 1 ? 'pagination-arrows-hidden' : ''\n      }'>prev</button>\n        <ul class='pagination-list'>${paginationItems}</ul>\n        <button type=\"button\" class='pagination-arrow pagination-arrows-next${\n          this.totalPages <= 1 ? 'pagination-arrows-hidden' : ''\n        }'>next</button>\n      </div>`;\n    return paginationContainer;\n  };\n\n  render = pagination => {\n    this.reset();\n    refs.catalogFilms.insertAdjacentHTML('afterend', pagination);\n    const el = document.querySelector('.pagination');\n    const paginationContainer = document.querySelector('.pagination');\n\n    el.addEventListener('click', this.handlerBtn);\n    paginationContainer.addEventListener('click', this.arrowHandler);\n\n    const prevButton = document.querySelector(\n      '.pagination-arrow.pagination-arrows-prev'\n    );\n    if (this.currentPage === 1) {\n      prevButton.style.display = 'none';\n    } else {\n      prevButton.style.display = 'block';\n    }\n\n    const nextButton = document.querySelector(\n      '.pagination-arrow.pagination-arrows-next'\n    );\n    if (this.currentPage === this.totalPages) {\n      nextButton.style.display = 'none';\n    } else {\n      nextButton.style.display = 'block';\n    }\n  };\n\n  arrowHandler = e => {\n    const targetEl = e.target;\n\n    if (targetEl.classList.contains('pagination-arrows-prev')) {\n      this.prev();\n    }\n    if (targetEl.classList.contains('pagination-arrows-next')) {\n      this.next();\n    }\n  };\n\n  reset = () => {\n    const el = document.querySelector('.pagination');\n    if (el) el.remove();\n  };\n\n  prev = () => {\n    if (this.currentPage === 1) return;\n    this.currentPage -= 1;\n    this.createButton();\n\n    const prevButton = document.querySelector(\n      '.pagination-arrow.pagination-arrows-prev'\n    );\n    if (this.currentPage === 1) {\n      prevButton.style.display = 'none';\n    } else {\n      prevButton.style.display = 'block';\n    }\n  };\n\n  next = () => {\n    if (this.currentPage === this.totalPages) return;\n    this.currentPage += 1;\n    this.createButton();\n\n    const nextButton = document.querySelector(\n      '.pagination-arrow.pagination-arrows-next'\n    );\n    if (this.currentPage === this.totalPages) {\n      nextButton.style.display = 'none';\n    } else {\n      nextButton.style.display = 'block';\n    }\n  };\n\n  updatePage(page) {\n    this.currentPage = page;\n    this.createButton();\n  }\n\n  handlerBtn = e => {\n    e.preventDefault();\n    const page = parseInt(e.target.dataset.page);\n    if (!isNaN(page)) {\n      this.currentPage = page;\n      this.createButton();\n    }\n  };\n}\n","const refs = {\n  pagination: document.getElementById('pagination'),\n  //_______Catalog_______\n  catalogFilms: document.querySelector('.catalog-films'),\n  searchForm: document.querySelector('.search-form'),\n  selectGenres: document.querySelector('#selectGenres'),\n  selectDate: document.querySelector('#selectDate'),\n  //____________________\n};\n\nexport { refs };\n","import { refs } from '../refs';\n\nexport const createCards = dataCard => {\n  const markup = dataCard\n    .map(card => {\n      return `<li data-id=${card.id} class=\"catalog-card\">\n      <img src='https://image.tmdb.org/t/p/original${card.poster}' alt=\"${\n        card.title\n      }\" loading=\"lazy\" />\n      <div class=\"catalog-info\">\n      <p class=\"catalog-info-name\">${card.title}</p>\n        <div class=\"catalog-info-container\">\n          <p class=\"catalog-info-details\">\n            <span>${card.genres}</span>\n            <span>${card.date}</span>\n          </p>\n          <div\n          class=\"Stars\"\n          style=\"--rating: ${card.rating / 2}\"\n          aria-label=\"Rating of this product is 2.3 out of 5.\"\n        ></div>\n        </div>\n      </div>\n      <div class=\"overlay\"></div>\n    </li>`;\n    })\n    .join('');\n  addHTML(markup);\n  //console.log(markup);\n  //   dataCard.map(el => console.log(el));\n};\n\nfunction addHTML(cards) {\n  refs.catalogFilms.innerHTML = cards;\n}\n","import { fetchGenre } from './catalogApi';\nimport { createCards } from './createCards';\n\nconst createDataCards = async moviesData => {\n  const genre = await fetchGenre();\n  const newCardsDate = moviesData.map(\n    ({ id, title, poster_path, vote_average, genre_ids, release_date }) => {\n      return {\n        id: id,\n        title: title,\n        poster: poster_path,\n        rating: vote_average,\n        genres: createGenreStr(genre, genre_ids),\n        date: createMovieDate(release_date),\n      };\n    }\n  );\n  createCards(newCardsDate);\n};\n\nconst createGenreStr = (genre, genre_ids) => {\n  const genres = [];\n  genre.map(({ id, name }) => {\n    if (genre_ids.indexOf(id) !== -1) {\n      genres.push(name);\n    }\n  });\n  return genres.slice(0, 2).join(', ');\n  //return genres.join('');\n};\n\nconst createMovieDate = dateString => {\n  const date = new Date(dateString);\n  const year = date.getFullYear();\n  return year;\n};\n\nconst saveLocal = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nconst loadLocal = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nexport {\n  createDataCards,\n  createGenreStr,\n  createMovieDate,\n  saveLocal,\n  loadLocal,\n};\n",null],"names":["$bpxeT","parcelRequire","$5f0c02a003d98366$export$21666b427502ea6d","pagination","document","getElementById","catalogFilms","querySelector","searchForm","selectGenres","selectDate","$66edc2a1388134fa$export$659b6b545718ce73","dataCard","cards","markup","map","card","concat","id","poster","title","genres","date","rating","join","innerHTML","$1fe4b2be6ef53714$export$f3fd225445632348","$parcel$interopDefault","$2TvXO","mark","_callee","moviesData","genre","newCardsDate","$fe622946adcb22aa$export$13a873f6c4b5d516","_ctx","sent","param","poster_path","vote_average","genre_ids","release_date","$1fe4b2be6ef53714$export$44f0485a2f926b66","$1fe4b2be6ef53714$export$e57ec8acbf34a811","name","indexOf","push","slice","dateString","Date","getFullYear","$1fe4b2be6ef53714$export$b38f1b11c5e38f18","key","value","serializedState","JSON","stringify","localStorage","setItem","error","console","message","$1fe4b2be6ef53714$export$9f183916f445c495","getItem","undefined","parse","$eca5539537a6497d$export$2e2bcd8739ae039","Pagination","totalPages","page1","getMovies","params","arguments","length","$hKHmD","this","_console","log","_this1","reset","arrPaginationItems","addFirstPages","addEllipsisIfNeeded","addMiddlePages","addLastPage","createPagination","render","currentPage","apply","$8nrFW","arr","_$page","Math","min","_this","activeEl","btn","createPaginationItem","startPage","max","endPage","atEnd","lastPage","page","activeClass","paginationItems","insertAdjacentHTML","el","paginationContainer","addEventListener","handlerBtn","arrowHandler","prevButton","style","display","nextButton","e","targetEl","target","classList","contains","prev","next","remove","createButton","preventDefault","parseInt","dataset","isNaN","$fe622946adcb22aa$var$API_KEY","$fe622946adcb22aa$var$fetchData","url","$fe622946adcb22aa$var$_fetchData","data","$3KAdz","onLoader","$dIxxU","default","get","removeLoader","t0","$fe622946adcb22aa$export$4a3145eab4db56d2","searchTerm","chosenPage","ref","results","total_pages","_args","disabled","$jyO6b","getByQuery","$fe622946adcb22aa$export$49f9e704d857526c","genre_id","$bfa640fc158a0d39$var$searchForm","$bfa640fc158a0d39$var$selectGenres","$bfa640fc158a0d39$var$selectDate","$bfa640fc158a0d39$var$afterLoad","$bfa640fc158a0d39$var$afterSearching","searchMovies","removeAttribute","$bfa640fc158a0d39$var$filterSelectOptions","arrOptions","option","unshift","$bfa640fc158a0d39$var$setGenreFilter","$bfa640fc158a0d39$var$setDateFilter","formData","FormData","Object","fromEntries","entries","window","yearList","i"],"version":3,"file":"catalog.1f86f101.js.map"}