{"mappings":"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","sources":["src/partials/js/home/example-home.js"],"sourcesContent":["import * as hero from '../../js/modal';\nimport { getWeeklyTrending } from '../api';\nimport { getUpcoming } from '../api';\nimport { getGenre } from '../api';\n\nconst listOfFilms = document.querySelector('.weekly-cards-wrap');\nconst upcomingWrapLi = document.querySelector('.upcoming_wrap');\nconst seeAll = document.querySelector('.weekly-title-link');\n\n// ================See all=================\n\nseeAll.addEventListener('click', () => {\n  location.href = 'catalog.html';\n});\n\n// ================ Weekly trends section ==============\n\nasync function getWeeklyTrends() {\n  const data = await getWeeklyTrending();\n\n  const firstThreeFilms = getFirstThreeElements(data.results);\n  console.log(firstThreeFilms);\n  renderWeeklyThreeTrends(firstThreeFilms);\n}\n\nfunction getFirstThreeElements(array) {\n  return array.slice(0, 3);\n}\n\nasync function renderWeeklyThreeTrends(firstThreeFilms) {\n  console.log(firstThreeFilms);\n  const markup = await Promise.all(\n    firstThreeFilms.map(\n      async ({\n        backdrop_path,\n        title,\n        release_date,\n        genre_ids,\n        id,\n        poster_path,\n        name,\n        first_air_date,\n        vote_average,\n      }) => {\n        const listGenres = await getGenresById(genre_ids);\n\n        return `<li class=\"weekly-card\" >\n        <div class=\"weekly-container-image\">\n          <img\n            class=\"weekly-card-image\"\n           src=\"https://image.tmdb.org/t/p/original/${poster_path}\"\n            alt=\"\"\n          />\n         <div class=\"overlay is-id\" data-id=${id}></div>       \n        </div>\n        <ul class=\"weekly-card-description\">\n        <li><span class=\"weekly-card-description-title\">${title || name}</span>\n          <span class=\"weekly-card-description-other\">${listGenres} | ${\n          release_date\n            ? release_date.substring(0, 4)\n            : first_air_date.substring(0, 4)\n        }</span>\n        </li>\n         <li class=\"Stars\" style=\"--rating: ${parseFloat(\n           (vote_average / 2).toFixed(1)\n         )};\" aria-label=\"Rating of this product is 2.3 out of 5.\"></li> \n        </ul>\n        \n      </li>`;\n      }\n\n      //   return `<li class=\"weekly-card\" >\n      //   <div class=\"weekly-container-image\">\n      //     <img\n      //       class=\"weekly-card-image\"\n      //      src=\"https://image.tmdb.org/t/p/original/${poster_path}\"\n      //       alt=\"\"\n      //     />\n      //    <div class=\"overlay is-id\" data-id=${id}></div>\n      //   </div>\n      //   <div class=\"weekly-card-description\">\n      //     <span class=\"weekly-card-description-title\">${title || name}</span>\n      //     <span class=\"weekly-card-description-other\">${listGenres} | ${\n      //     release_date\n      //       ? release_date.substring(0, 4)\n      //       : first_air_date.substring(0, 4)\n      //   }</span>\n      //   </div>\n      //   <div class=\"weekly-card-raiting\">Stars5*</div>\n      // </li>`;\n      // }\n    )\n  );\n\n  listOfFilms.innerHTML = markup.join('');\n}\n\nasync function getGenresById(ids) {\n  const data = await getGenre();\n  const genres = data.genres;\n\n  const arrGenres = ids.map(id => {\n    const genre = genres.find(genre => genre.id === id);\n    return genre ? genre.name : '';\n  });\n  return arrGenres.join(', ');\n}\n\n// ================ Upcoming this month section ==============\n\nasync function getUpcomingFilm() {\n  const { formattedStartDate, formattedEndDate } =\n    getCurrentEndLastDayOfMonth();\n  try {\n    const data = await getUpcoming(formattedStartDate, formattedEndDate);\n    const randomValue = getRandomValue(data.results);\n    renderUpcomingFilm(randomValue);\n  } catch (error) {\n    console.log(error.message);\n  }\n}\n\nasync function renderUpcomingFilm(upcomingFilm) {\n  const {\n    backdrop_path,\n    genre_ids,\n    popularity,\n    release_date,\n    title,\n    vote_average,\n    vote_count,\n    overview,\n  } = upcomingFilm;\n\n  const listGenres = await getGenresById(genre_ids);\n\n  const markup = `<div class=\"upcoming-card\">\n\n            <img class=\"upcoming-card-img\" src=\"https://image.tmdb.org/t/p/original/${backdrop_path}\" alt=\" \" />\n\n          <div class=\"upcoming-card-wrap\">\n            <h3 class=\"upcoming-card-title\">${title}</h3>\n\n            <div class=\"upcoming-card-numbers-wrap-top\">\n              <div class=\"upcoming-card-release-wrap\">\n                <span class=\"upcoming-card-release-text\">Release date</span>\n                <span class=\"upcoming-card-release-data\">${release_date}</span>\n              </div>\n\n              <div class=\"upcoming-card-vote-wrap\">\n                <div class=\"upcoming-card-vote\"><span>Vote / Votes</span></div>\n                <div class=\"upcoming-card-vote-data\">\n                  <span>${vote_average}</span> / <span>${vote_count}</span>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"upcoming-card-numbers-wrap-down\">\n              <div class=\"upcoming-card-popularity-wrap\">\n                <span class=\"upcoming-card-popularity-text\">Popularity</span>\n                <span class=\"upcoming-card-popularity-data\">${popularity.toFixed(\n                  1\n                )}</span>\n              </div>\n\n              <div class=\"upcoming-card-genre-wrap\">\n                <span class=\"upcoming-card-genre-text\">Genre</span>\n                <span class=\"upcoming-card-genre-data\">${listGenres}</span>\n              </div>\n            </div>\n \n\n            <span class=\"upcoming-card-about-title\">About</span>\n\n            <p class=\"upcoming-card-about-text\">${overview}</p>\n\n            <button class=\"upcoming-button\" type=\"button\">\n              Add to my library\n            </button>\n          </div>\n        </div>`;\n  upcomingWrapLi.insertAdjacentHTML('beforeend', markup);\n}\n\nfunction getCurrentEndLastDayOfMonth() {\n  const currentDate = new Date();\n  const currentYear = currentDate.getFullYear();\n  const currentMonth = String(currentDate.getMonth() + 1).padStart(2, '0'); // Додаємо 1, оскільки номер місяця починається з 0\n  const currentDay = String(currentDate.getDate()).padStart(2, '0');\n\n  const formattedStartDate = `${currentYear}-${currentMonth}-${currentDay}`;\n\n  const nextMonthFirstDay = new Date(currentYear, currentMonth, 1);\n  const lastDayOfMonth = new Date(nextMonthFirstDay - 1).getDate();\n  const lastDayOfMonthFormatted = String(lastDayOfMonth).padStart(2, '0');\n\n  const formattedEndDate = `${currentYear}-${currentMonth}-${lastDayOfMonthFormatted}`;\n\n  return { formattedStartDate, formattedEndDate };\n}\n\n// =========== function getRandomValue =============\n\nfunction getRandomValue(array) {\n  const randomIndex = Math.floor(Math.random() * array.length);\n  return array[randomIndex];\n}\n\nwindow.addEventListener('DOMContentLoaded', getUpcomingFilm);\nwindow.addEventListener('DOMContentLoaded', getWeeklyTrends);\n"],"names":["$bpxeT","parcelRequire","$ef95d285b54824a0$var$listOfFilms","document","querySelector","$ef95d285b54824a0$var$upcomingWrapLi","$ef95d285b54824a0$var$_getWeeklyTrends","$parcel$interopDefault","$2TvXO","mark","_callee","data","firstThreeFilms","$jyO6b","getWeeklyTrending","_ctx","sent","$ef95d285b54824a0$var$getFirstThreeElements","results","console","log","$ef95d285b54824a0$var$renderWeeklyThreeTrends","apply","this","arguments","array","slice","$ef95d285b54824a0$var$_renderWeeklyThreeTrends","_callee1","markup","Promise","all","map","param","title","release_date","genre_ids","id","poster_path","name","first_air_date","vote_average","listGenres","backdrop_path","$ef95d285b54824a0$var$getGenresById","concat","substring","parseFloat","toFixed","_ctx1","innerHTML","join","ids","$ef95d285b54824a0$var$_getGenresById","genres","arrGenres","getGenre","genre1","find","genre","$ef95d285b54824a0$var$_getUpcomingFilm","ref","formattedStartDate","formattedEndDate","$ef95d285b54824a0$var$getCurrentEndLastDayOfMonth","getUpcoming","$ef95d285b54824a0$var$renderUpcomingFilm","$ef95d285b54824a0$var$getRandomValue","t0","message","upcomingFilm","$ef95d285b54824a0$var$_renderUpcomingFilm","popularity","vote_count","overview","insertAdjacentHTML","currentDate","Date","currentYear","getFullYear","currentMonth","String","getMonth","padStart","currentDay","getDate","nextMonthFirstDay","lastDayOfMonth","lastDayOfMonthFormatted","Math","floor","random","length","addEventListener","location","href","window"],"version":3,"file":"index.6ef7d2df.js.map"}