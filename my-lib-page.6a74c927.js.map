{"mappings":"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","sources":["src/partials/js/my-lib/lib-main.js","src/partials/js/my-lib/lib-markups.js","node_modules/@swc/helpers/lib/_define_property.js","src/partials/js/my-lib/loadMoreBtn.js"],"sourcesContent":["import { getGenre } from '../api';\nimport { parsedFilms, parsedFilmsGenreIds, clearLibrary } from './lib-storage';\nimport {\n  renderLibMoviesListMarkup,\n  renderLibSelectMarkup,\n} from './lib-markups';\nimport { libRefs } from './lib-refs';\nimport { LoadMoreBtn } from './loadMoreBtn';\n\nconst { libSelectEl, libMoviesListEl, libLoadMoreBtn, libClearBtn } = libRefs;\n\nconst loadMore = new LoadMoreBtn({\n  btnEl: libLoadMoreBtn,\n});\n\nlet selectedGenre = '1';\nconst movieByStep = 9;\nlet totalMoviesLoaded = 0;\n\nconst getFilteredGenres = async movieGenresIds => {\n  const { genres } = await getGenre();\n\n  return genres.filter(({ id }) => movieGenresIds.includes(id));\n};\n\nconst renderFilteredGenres = async moviesArr => {\n  const filteredGenres = await getFilteredGenres(moviesArr);\n  renderLibSelectMarkup(filteredGenres);\n};\n\nconst loadMovies = moviesArr => {\n  const slicedArr = moviesArr.slice(\n    totalMoviesLoaded,\n    totalMoviesLoaded + movieByStep\n  );\n\n  totalMoviesLoaded += movieByStep;\n  renderLibMoviesListMarkup(slicedArr);\n};\n\nconst onLibSelectChange = () => {\n  selectedGenre = libSelectEl.value;\n  totalMoviesLoaded = 0;\n  clearHTML();\n  loadMoviesByGenre(selectedGenre);\n};\n\nconst loadMoviesByGenre = selectedValue => {\n  filterMoviesListByGenre(selectedValue);\n};\n\nconst filterMoviesListByGenre = selectedValue => {\n  if (selectedValue === '1') {\n    loadMovies(parsedFilms);\n    checkArrLength(parsedFilms);\n  } else {\n    const filteredMovies = parsedFilms.filter(movie =>\n      movie.genres.some(genre => genre.id === parseInt(selectedValue))\n    );\n    loadMovies(filteredMovies);\n    checkArrLength(filteredMovies);\n  }\n};\n\nconst checkArrLength = moviesArr => {\n  if (moviesArr.length <= totalMoviesLoaded) {\n    loadMore.hideBtn();\n  } else {\n    loadMore.showBtn();\n  }\n};\n\nconst onLoadBtnClick = () => {\n  loadMore.disableBtn();\n  loadMoviesByGenre(selectedGenre);\n  loadMore.enableBtn();\n};\n\nconst clearHTML = () => {\n  libMoviesListEl.innerHTML = '';\n};\n\nconst onClearBtnClick = () => {\n  clearLibrary();\n};\n\nlibSelectEl.addEventListener('change', onLibSelectChange);\n\nwindow.addEventListener('load', () => {\n  renderFilteredGenres(parsedFilmsGenreIds);\n  loadMovies(parsedFilms);\n  checkArrLength(parsedFilms);\n});\n\nlibLoadMoreBtn.addEventListener('click', onLoadBtnClick);\nconst onClick = evt => {\n  console.log(evt.target);\n};\n\nlibMoviesListEl.addEventListener('click', onClick);\n\nlibClearBtn.addEventListener('click', onClearBtnClick);\n\nexport { getGenreName };\n","import { libRefs } from './lib-refs';\n\nconst { libSelectEl, libMoviesListEl } = libRefs;\n\nconst createLibSelectMarkup = genre => {\n  return `<option value=\"${genre.id}\">${genre.name}</option>`;\n};\n\nconst createLibMoviesListMarkup = ({\n  title,\n  name,\n  release_date,\n  first_air_date,\n  genres,\n  poster_path,\n  vote_average,\n  id,\n}) => {\n  const genreNames = genres.map(genre => genre.name).slice(0, 2);\n\n  const movieTitle = title || name;\n  const movieReleaseYear = release_date || first_air_date;\n  return `<li class=\"mylibrary_movie\">\n  <div class=\"mylibrary_dark\">\n  <img src=\"https://image.tmdb.org/t/p/original${poster_path}\" alt=\"${movieTitle}\" />\n  </div>\n <div class=\"mylibrary_overlay is-id\" data-id=${id}></div>\n  <div class=\"mylibrary_info\">\n  <h3 class=\"mylibrary_movies_name\">${movieTitle}</h3>\n  <p class=\"mylibrary_genre_movie\">${genreNames.join(\n    ' '\n  )} | ${movieReleaseYear.substring(0, 4)}</p>\n  </div>\n<div class=\"hero_star_raiting\">\n <span>\n<div class=\"Stars thisstars\" style=\"--rating: ${\n    vote_average / 2\n  }; \" aria-label=\"Rating of this product is ${(vote_average / 2).toFixed(\n    1\n  )} out of 5.\"></div>\n  </div>\n  </span>   \n  </li>`;\n};\nconst renderLibSelectMarkup = genresArr => {\n  const libSelectMarkupEls = genresArr.map(genre =>\n    createLibSelectMarkup(genre)\n  );\n  libSelectEl.insertAdjacentHTML('beforeend', libSelectMarkupEls.join(' '));\n};\n\nconst renderLibMoviesListMarkup = movies => {\n  const libMovieListMarkup = movies.map(movie =>\n    createLibMoviesListMarkup(movie)\n  );\n  libMoviesListEl.insertAdjacentHTML('beforeend', libMovieListMarkup.join(' '));\n};\n\nexport { renderLibMoviesListMarkup, renderLibSelectMarkup };\n","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","class LoadMoreBtn {\n  static classes = {\n    hidden: 'lib-btn-hidden',\n  };\n\n  constructor({ btnEl, isHidden = false }) {\n    this.button = btnEl;\n    isHidden && this.hideBtn();\n  }\n\n  getBtn(selector) {\n    return document.querySelector(selector);\n  }\n\n  hideBtn() {\n    this.button.classList.add(LoadMoreBtn.classes.hidden);\n  }\n\n  showBtn() {\n    this.button.classList.remove(LoadMoreBtn.classes.hidden);\n  }\n\n  disableBtn() {\n    this.button.disabled = true;\n    this.button.textContent = 'Loading...';\n  }\n\n  enableBtn() {\n    this.button.disabled = false;\n    this.button.textContent = 'Load more';\n  }\n}\n\nexport { LoadMoreBtn };\n"],"names":["$19F3f","parcelRequire","$1YlWm","libSelectEl","$bc82bf5bb67ef049$var$libSelectEl","libMoviesListEl","$bc82bf5bb67ef049$var$libMoviesListEl","libRefs","$bc82bf5bb67ef049$export$c692ee4cf6f33e4e","genresArr","libSelectMarkupEls","map","genre","id","name","$bc82bf5bb67ef049$var$createLibSelectMarkup","insertAdjacentHTML","join","$bc82bf5bb67ef049$export$2bb7f8c502c8b895","movies","libMovieListMarkup","movie","title","release_date","first_air_date","genres","poster_path","vote_average","movieTitle","movieReleaseYear","slice","substring","toFixed","$bc82bf5bb67ef049$var$createLibMoviesListMarkup","Object","defineProperty","$da4b248c00322402$exports","value","default","obj","key","enumerable","configurable","writable","$ffaaa39bb1dd764a$export$fa7cf5edad276a21","getBtn","selector","document","querySelector","hideBtn","this","button","classList","add","classes","hidden","showBtn","remove","disableBtn","disabled","textContent","enableBtn","constructor","btnEl","isHidden","$parcel$interopDefault","$bf5bbfa7cc2fd989$var$libSelectEl","$bf5bbfa7cc2fd989$var$libMoviesListEl","libLoadMoreBtn","$bf5bbfa7cc2fd989$var$libLoadMoreBtn","libClearBtn","$bf5bbfa7cc2fd989$var$libClearBtn","$bf5bbfa7cc2fd989$var$loadMore","$bf5bbfa7cc2fd989$var$selectedGenre","$bf5bbfa7cc2fd989$var$totalMoviesLoaded","$bf5bbfa7cc2fd989$var$renderFilteredGenres","async","moviesArr","filteredGenres","movieGenresIds","getGenre","filter","includes","$bf5bbfa7cc2fd989$var$getFilteredGenres","$bf5bbfa7cc2fd989$var$loadMovies","slicedArr","$bf5bbfa7cc2fd989$var$loadMoviesByGenre","selectedValue","$bf5bbfa7cc2fd989$var$filterMoviesListByGenre","$cl7Eh","parsedFilms","$bf5bbfa7cc2fd989$var$checkArrLength","filteredMovies","some","parseInt","length","$bf5bbfa7cc2fd989$var$clearHTML","innerHTML","addEventListener","window","parsedFilmsGenreIds","evt","console","log","target","clearLibrary"],"version":3,"file":"my-lib-page.6a74c927.js.map"}