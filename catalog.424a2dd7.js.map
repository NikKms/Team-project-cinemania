{"mappings":"iiBAIAA,EAAA,SCJA,IAAAC,EAAAD,EAAA,S,uCCAME,EAAO,CACXC,WAAYC,SAASC,eAAe,cAEpCC,aAAcF,SAASG,cAAc,mBCD1BC,EAAc,SAAAC,GACzB,IA4BeC,EA5BTC,EAASF,EACZG,KAAI,SAAAC,GACH,MAAO,gBACwCC,OADxBD,EAAKE,GAAG,gFACqCD,OAArBD,EAAKG,OAAO,YAIhDF,OAJyDD,EAAKI,MAAM,kIAOjEH,OAHHD,EAAKI,MAAM,wFAIqBH,OAD7BD,EAAKK,OAAO,4DAMHJ,OALoBD,EAAKM,KAAK,+GAKlBL,OAAZD,EAAKO,OAAO,+G,IAMpCC,KAAK,IAMOX,EALPC,EAMRT,EAAKI,aAAagB,UAAYZ,EAL9Ba,QAAQC,IAAIb,E,IFrBUc,EAAAxB,EAAA,CAAAwB,EAAAC,GAAAC,MAAA,SAAAC,I,IAGhBC,EACEC,EAGFC,EACAC,E,mFALY,EAAAC,EAAAC,YADN,UACsB,G,cAA5BL,EAAGM,EAAAC,KACHN,EAAcD,EAAZC,Q,SAGYO,I,OAAdN,EAAKI,EAAAC,KACLJ,EAAeF,EAAQlB,KAC3B,SAAA0B,G,IACEvB,EAAEuB,EAAFvB,GACAE,EAAKqB,EAALrB,MAEAsB,EAAWD,EAAXC,YACAC,EAAYF,EAAZE,aACAC,EAASH,EAATG,UACAC,EAAYJ,EAAZI,aAEA,MAAO,CACL3B,GAAIA,EACJE,MAAOA,EAEPD,OAAQuB,EACRnB,OAAQoB,EACRtB,OAAQyB,EAAeZ,EAAOU,GAC9BtB,KAAMyB,EAAgBF,G,IAI5BlC,EAAYwB,G,4CA/Bd,I,EAkCMK,EAAU,W,MAAGZ,EAAAxB,EAAA,CAAAwB,EAAAC,GAAAC,MAAA,SAAAC,I,IACTiB,EAGA3B,E,kFAHe4B,EAAAC,QAAMC,IAC3B,yDAAiElC,OApCrD,qC,cAmCR+B,EAAMV,EAAAC,KAAJS,KAGF3B,EAAa2B,EAAX3B,O,kBACDA,G,6FALO,GAQVyB,EAAiB,SAACZ,EAAOU,GAC7B,IAAMvB,EAAS,GAMf,OALAa,EAAMnB,KAAI,SAAA0B,G,IAAGvB,EAAEuB,EAAFvB,GAAIkC,EAAIX,EAAJW,MACe,IAA1BR,EAAUS,QAAQnC,IACpBG,EAAOiC,KAAKF,E,IAGT/B,EAAOG,KAAK,I,EAGfuB,EAAkB,SAAAQ,GAGtB,OAFa,IAAIC,KAAKD,GACJE,a","sources":["src/catalog.js","src/partials/js/catalog/example.js","src/partials/js/refs.js","src/partials/js/catalog/createCards.js"],"sourcesContent":["// import { Roboto400, Roboto500, Roboto700 } from './partials/js/fonts';\n// import '@fontsource/roboto/400.css';\n// import '@fontsource/roboto/500.css';\n// import '@fontsource/roboto/700.css';\nimport './partials/js/hero/hero';\nimport './partials/js/catalog/example';\n","import axios from 'axios';\nimport { getByQuery, getMovie } from '../api';\nimport { createCards } from './createCards';\n\nconst API_KEY = '88b8a7c5d221d3120fb29d734050dc7d';\n\nconst createDataCards = async () => {\n  //////////////////////////////////////////\n  const str = 'ghosted';\n  const res = await getByQuery(str, 1);\n  const { results } = res;\n  //////////////////////////////////////////\n\n  const genre = await fetchGenre();\n  const newCardsDate = results.map(\n    ({\n      id,\n      title,\n      //original_language,\n      poster_path,\n      vote_average,\n      genre_ids,\n      release_date,\n    }) => {\n      return {\n        id: id,\n        title: title,\n        //language: original_language,\n        poster: poster_path,\n        rating: vote_average,\n        genres: createGenreStr(genre, genre_ids),\n        date: createMovieDate(release_date),\n      };\n    }\n  );\n  createCards(newCardsDate);\n};\n\nconst fetchGenre = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`\n  );\n  const { genres } = data;\n  return genres;\n};\n\nconst createGenreStr = (genre, genre_ids) => {\n  const genres = [];\n  genre.map(({ id, name }) => {\n    if (genre_ids.indexOf(id) !== -1) {\n      genres.push(name);\n    }\n  });\n  return genres.join(',');\n};\n\nconst createMovieDate = dateString => {\n  const date = new Date(dateString);\n  const year = date.getFullYear();\n  return year;\n};\n\n// createDataCards().then(res => console.log(res));\n\nexport { createDataCards };\n","const refs = {\n  pagination: document.getElementById('pagination'),\n  //_______Catalog_______\n  catalogFilms: document.querySelector('.catalog-films'),\n  //____________________\n};\n\nexport { refs };\n","import { refs } from '../refs';\n\nexport const createCards = dataCard => {\n  const markup = dataCard\n    .map(card => {\n      return `<div data-id=${card.id} class=\"catalog-card\">\n      <img src='https://image.tmdb.org/t/p/original${card.poster}' alt=\"${card.title}\" loading=\"lazy\" />\n      <div class=\"catalog-info\">\n        <div>\n          <p class=\"catalog-info-name\">\n            <b>${card.title}</b>\n          </p>\n          <p class=\"catalog-info-details\">\n            <span>${card.genres}</span>\n            <span class=\"catalog-info-border\" >${card.date}</span>\n          </p>\n        </div>\n        <div\n          class=\"Stars\"\n          style=\"--rating: ${card.rating}\"\n          aria-label=\"Rating of this product is 2.3 out of 5.\"\n        ></div>\n      </div>\n    </div>`;\n    })\n    .join('');\n  addHTML(markup);\n  console.log(markup);\n  //   dataCard.map(el => console.log(el));\n};\n\nfunction addHTML(cards) {\n  refs.catalogFilms.innerHTML = cards;\n}\n"],"names":["parcelRequire","$bpxeT","$5f0c02a003d98366$export$21666b427502ea6d","pagination","document","getElementById","catalogFilms","querySelector","$66edc2a1388134fa$export$659b6b545718ce73","dataCard","cards","markup","map","card","concat","id","poster","title","genres","date","rating","join","innerHTML","console","log","$parcel$interopDefault","$2TvXO","mark","_callee","res","results","genre","newCardsDate","$jyO6b","getByQuery","_ctx","sent","$bfa640fc158a0d39$var$fetchGenre","param","poster_path","vote_average","genre_ids","release_date","$bfa640fc158a0d39$var$createGenreStr","$bfa640fc158a0d39$var$createMovieDate","data","$dIxxU","default","get","name","indexOf","push","dateString","Date","getFullYear"],"version":3,"file":"catalog.424a2dd7.js.map"}