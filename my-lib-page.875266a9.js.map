{"mappings":"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","sources":["src/partials/js/my-lib/lib-main.js","src/partials/js/my-lib/lib-storage.js","src/partials/js/my-lib/lib-refs.js","src/partials/js/my-lib/lib-markups.js","src/partials/js/my-lib/loadMoreBtn.js"],"sourcesContent":["import { getGenre } from '../api';\nimport { parsedFilms, parsedFilmsGenreIds } from './lib-storage';\nimport {\n  renderLibMoviesListMarkup,\n  renderLibSelectMarkup,\n} from './lib-markups';\nimport { libRefs } from './lib-refs';\nimport { LoadMoreBtn } from './loadMoreBtn';\n\nconst { libSelectEl, libMoviesListEl, libLoadMoreBtn } = libRefs;\n\nconst loadMore = new LoadMoreBtn({\n  btnEl: libLoadMoreBtn,\n});\n\nlet selectedGenre = '1';\nconst movieByStep = 9;\nlet totalMoviesLoaded = 0;\n\nconst getFilteredGenres = async moviesGenreIds => {\n  const { genres } = await getGenre();\n  return genres.filter(({ id }) => moviesGenreIds.includes(id));\n};\n\nconst getGenreName = async movieGenreIds => {\n  const filteredGenres = await getFilteredGenres(movieGenreIds);\n  const genreNames = filteredGenres.map(({ name }) => name);\n  return genreNames.slice(0, 2).join(', ');\n};\n\nconst renderFilteredGenres = async moviesGenreIds => {\n  const filteredGenres = await getFilteredGenres(moviesGenreIds);\n  renderLibSelectMarkup(filteredGenres);\n};\n\nconst loadMovies = moviesArr => {\n  const slicedArr = moviesArr.slice(\n    totalMoviesLoaded,\n    totalMoviesLoaded + movieByStep\n  );\n\n  totalMoviesLoaded += movieByStep;\n  renderLibMoviesListMarkup(slicedArr);\n};\n\nconst onLibSelectChange = () => {\n  selectedGenre = libSelectEl.value;\n  totalMoviesLoaded = 0;\n  clearHTML();\n  loadMoviesByGenre(selectedGenre);\n};\n\nconst loadMoviesByGenre = selectedValue => {\n  filterMoviesListByGenre(selectedValue);\n};\n\nconst filterMoviesListByGenre = selectedValue => {\n  if (selectedValue === '1') {\n    loadMovies(parsedFilms);\n    checkArrLength(parsedFilms);\n  } else {\n    const moviesGenreById = parsedFilms.filter(({ genre_ids }) =>\n      genre_ids.includes(parseInt(selectedValue))\n    );\n    loadMovies(moviesGenreById);\n    checkArrLength(moviesGenreById);\n  }\n};\n\nconst checkArrLength = moviesArr => {\n  if (moviesArr.length <= totalMoviesLoaded) {\n    loadMore.hideBtn();\n  } else {\n    loadMore.showBtn();\n  }\n};\n\nconst onLoadBtnClick = () => {\n  loadMore.disableBtn();\n  loadMoviesByGenre(selectedGenre);\n  loadMore.enableBtn();\n};\n\nconst clearHTML = () => {\n  libMoviesListEl.innerHTML = '';\n};\n\nlibSelectEl.addEventListener('change', onLibSelectChange);\n\nwindow.addEventListener('load', async () => {\n  await renderFilteredGenres(parsedFilmsGenreIds);\n  loadMovies(parsedFilms);\n});\n\nlibLoadMoreBtn.addEventListener('click', onLoadBtnClick);\n\nexport { getGenreName };\n","import {getTrending} from \"../api\"\n\n\ngetTrending().then(response =>\n  localStorage.setItem('test', JSON.stringify(response.results))\n);\n\nconst getParsedFilms = () => {\n  try {\n    const filmsArr = localStorage.getItem('test');\n    return JSON.parse(filmsArr);\n  } catch (error) {\n    console.error(error);\n  }\n};\n\nconst parsedFilms = getParsedFilms();\nconst parsedFilmsGenreIds = parsedFilms.flatMap(({ genre_ids }) => genre_ids);\n\nexport { parsedFilms, parsedFilmsGenreIds };\n","const libRefs = {\n  libSelectEl: document.getElementById('js-genre-select'),\n  libMoviesListEl: document.getElementById('js-lib-list'),\n  libLoadMoreBtn: document.getElementById('js-loadMore-btn'),\n};\n\nexport { libRefs };\n","import { libRefs } from './lib-refs';\nimport { getGenreName } from './lib-main';\n\nconst { libSelectEl, libMoviesListEl, libLoadMoreBtn } = libRefs;\n\nconst createLibSelectMarkup = genre => {\n  return `<option value=\"${genre.id}\">${genre.name}</option>`;\n};\n\nconst createLibMoviesListMarkup = async ({\n  title,\n  name,\n  release_date,\n  first_air_date,\n  genre_ids,\n  poster_path,\n  vote_average,\n}) => {\n  const genreNames = await getGenreName(genre_ids);\n  const movieTitle = title || name;\n  const movieReleaseYear = release_date || first_air_date;\n  return ` <li class=\"mylibrary_movie is-id\">\n  <div class=\"mylibrary_poster\">\n  <img src=\"https://image.tmdb.org/t/p/original${poster_path}\" alt=\"${movieTitle}\" />\n      <div class=\"mylibrary_move_dark\"></div>\n  </div>\n  <h3 class=\"mylibrary_movies_name\">${movieTitle}</h3>\n  <p class=\"mylibrary_genre_movie\">${genreNames} | ${movieReleaseYear.substring(\n    0,\n    4\n  )}</p>\n  <div class=\"hero-star-raiting\" data-swiper-parallax=\"-350\">\n      <span>\n          <div class=\"Stars\" style=\"--rating: ${\n            vote_average / 2\n          }; \" aria-label=\"Rating of this product is ${(\n    vote_average / 2\n  ).toFixed(1)} out of 5.\">\n      </span>\n  </div>\n</li>`;\n};\n\nconst renderLibSelectMarkup = genresArr => {\n  const libSelectMarkupEls = genresArr.map(genre =>\n    createLibSelectMarkup(genre)\n  );\n  libSelectEl.insertAdjacentHTML('beforeend', libSelectMarkupEls.join(' '));\n};\n\nconst renderLibMoviesListMarkup = async movies => {\n  const libMovieListMarkup = await Promise.all(\n    movies.map(async movie => await createLibMoviesListMarkup(movie))\n  );\n  libMoviesListEl.insertAdjacentHTML('beforeend', libMovieListMarkup.join(' '));\n};\n\nexport { renderLibMoviesListMarkup, renderLibSelectMarkup };\n","class LoadMoreBtn {\n  static classes = {\n    hidden: 'lib-btn-hidden',\n  };\n\n  constructor({ btnEl, isHidden = false }) {\n    this.button = btnEl;\n    isHidden && this.hideBtn();\n  }\n\n  getBtn(selector) {\n    return document.querySelector(selector);\n  }\n\n  hideBtn() {\n    this.button.classList.add(LoadMoreBtn.classes.hidden);\n  }\n\n  showBtn() {\n    this.button.classList.remove(LoadMoreBtn.classes.hidden);\n  }\n\n  disableBtn() {\n    this.button.disabled = true;\n    this.button.textContent = 'Loading...';\n  }\n\n  enableBtn() {\n    this.button.disabled = false;\n    this.button.textContent = 'Load more';\n  }\n}\n\nexport { LoadMoreBtn };\n"],"names":["$bpxeT","parcelRequire","$jyO6b","getTrending","then","response","localStorage","setItem","JSON","stringify","results","$eae986af956624d5$export$c118d883ed694a49","filmsArr","getItem","parse","error","console","$eae986af956624d5$var$getParsedFilms","$eae986af956624d5$export$c149f286d6cc84b6","flatMap","param","genre_ids","$01147738748aa13a$export$a53e322463ec8607","libSelectEl","document","getElementById","libMoviesListEl","libLoadMoreBtn","$693fde924ddead04$var$libSelectEl","$693fde924ddead04$var$libMoviesListEl","$693fde924ddead04$var$createLibMoviesListMarkup","$parcel$interopDefault","$2TvXO","mark","_callee","title","name","release_date","first_air_date","poster_path","vote_average","genreNames","movieTitle","movieReleaseYear","$e984e962385f4ee6$export$e1e489d92e562b7b","_ctx","sent","concat","substring","toFixed","_","$693fde924ddead04$export$2bb7f8c502c8b895","_callee1","movies","libMovieListMarkup","Promise","all","map","movie","_ctx1","insertAdjacentHTML","join","$8MBJY","$91bfe49cf4d88e3f$export$fa7cf5edad276a21","LoadMoreBtn","btnEl","_isHidden","isHidden","this","button","hideBtn","key","selector","querySelector","classList","add","classes","hidden","remove","disabled","textContent","$hKHmD","$e984e962385f4ee6$var$libSelectEl","$e984e962385f4ee6$var$libMoviesListEl","$e984e962385f4ee6$var$libLoadMoreBtn","$e984e962385f4ee6$var$loadMore","$e984e962385f4ee6$var$selectedGenre","$e984e962385f4ee6$var$totalMoviesLoaded","$e984e962385f4ee6$var$getFilteredGenres","moviesGenreIds","genres","getGenre","filter","id","includes","movieGenreIds","filteredGenres","slice","$e984e962385f4ee6$var$renderFilteredGenres","libSelectMarkupEls","genre","$693fde924ddead04$var$createLibSelectMarkup","$e984e962385f4ee6$var$loadMovies","moviesArr","slicedArr","$e984e962385f4ee6$var$loadMoviesByGenre","selectedValue","$e984e962385f4ee6$var$filterMoviesListByGenre","$e984e962385f4ee6$var$checkArrLength","moviesGenreById","parseInt","length","showBtn","$e984e962385f4ee6$var$clearHTML","innerHTML","addEventListener","value","window","disableBtn","enableBtn"],"version":3,"file":"my-lib-page.875266a9.js.map"}