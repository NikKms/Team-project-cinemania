{"mappings":"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","sources":["node_modules/@swc/helpers/lib/_define_property.js","src/partials/js/refs.js","src/partials/js/catalog/createCards.js","src/partials/js/catalog/catalogUtils.js","src/partials/js/catalog/pagination.js","src/partials/js/catalog/catalogApi.js","src/partials/js/catalog/example.js"],"sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.default = _defineProperty;\nfunction _defineProperty(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\n","const refs = {\n  pagination: document.getElementById('pagination'),\n  //_______Catalog_______\n  catalogFilms: document.querySelector('.catalog-films'),\n  searchForm: document.querySelector('.search-form'),\n  selectGenres: document.querySelector('#selectGenres'),\n  selectDate: document.querySelector('#selectDate'),\n  //____________________\n};\n\nexport { refs };\n","import { refs } from '../refs';\n\nexport const createCards = dataCard => {\n  const markup = dataCard\n    .map(card => {\n      return `<li data-id=${card.id} class=\"catalog-card\">\n      <img src='https://image.tmdb.org/t/p/original${card.poster}' alt=\"${\n        card.title\n      }\" loading=\"lazy\" />\n      <div class=\"catalog-info\">\n      <p class=\"catalog-info-name\">${card.title}</p>\n        <div class=\"catalog-info-container\">\n          <p class=\"catalog-info-details\">\n            <span>${card.genres}</span>\n            <span>${card.date}</span>\n          </p>\n          <div\n          class=\"Stars\"\n          style=\"--rating: ${card.rating / 2}\"\n          aria-label=\"Rating of this product is 2.3 out of 5.\"\n        ></div>\n        </div>\n      </div>\n      <div class=\"overlay\"></div>\n    </li>`;\n    })\n    .join('');\n  addHTML(markup);\n  //console.log(markup);\n  //   dataCard.map(el => console.log(el));\n};\n\nfunction addHTML(cards) {\n  refs.catalogFilms.innerHTML = cards;\n}\n","import { fetchGenre } from './catalogApi';\nimport { createCards } from './createCards';\n\nconst createDataCards = async moviesData => {\n  const genre = await fetchGenre();\n  const newCardsDate = moviesData.map(\n    ({ id, title, poster_path, vote_average, genre_ids, release_date }) => {\n      return {\n        id: id,\n        title: title,\n        poster: poster_path,\n        rating: vote_average,\n        genres: createGenreStr(genre, genre_ids),\n        date: createMovieDate(release_date),\n      };\n    }\n  );\n  createCards(newCardsDate);\n};\n\nconst createGenreStr = (genre, genre_ids) => {\n  const genres = [];\n  genre.map(({ id, name }) => {\n    if (genre_ids.indexOf(id) !== -1) {\n      genres.push(name);\n    }\n  });\n  return genres.slice(0, 2).join(', ');\n  //return genres.join('');\n};\n\nconst createMovieDate = dateString => {\n  const date = new Date(dateString);\n  const year = date.getFullYear();\n  return year;\n};\n\nconst saveLocal = (key, value) => {\n  try {\n    const serializedState = JSON.stringify(value);\n    localStorage.setItem(key, serializedState);\n  } catch (error) {\n    console.error('Set state error: ', error.message);\n  }\n};\n\nconst loadLocal = key => {\n  try {\n    const serializedState = localStorage.getItem(key);\n    return serializedState === null ? undefined : JSON.parse(serializedState);\n  } catch (error) {\n    console.error('Get state error: ', error.message);\n  }\n};\n\nexport {\n  createDataCards,\n  createGenreStr,\n  createMovieDate,\n  saveLocal,\n  loadLocal,\n};\n","import { refs } from '../refs';\nimport { saveLocal } from './catalogUtils';\n\nexport default class Pagination {\n  constructor(totalPages, page, getMovies) {\n    this.totalPages = totalPages;\n    this.currentPage = page;\n    this.getMovies = getMovies;\n    this.arrPaginationItems = [];\n  }\n\n  createButton = () => {\n    if (this.totalPages <= 1) {\n      this.reset();\n      return;\n    }\n\n    this.arrPaginationItems = [];\n\n    this.addFirstPages(this.arrPaginationItems);\n    if (this.totalPages > 6) {\n      this.addEllipsisIfNeeded(this.arrPaginationItems);\n      this.addMiddlePages(this.arrPaginationItems);\n      this.addEllipsisIfNeeded(this.arrPaginationItems, true);\n      this.addLastPage(this.arrPaginationItems);\n    }\n\n    const markup = this.createPagination(this.arrPaginationItems.join(''));\n    this.render(markup);\n    saveLocal('currentPage', this.currentPage);\n    this.getMovies(this.currentPage);\n    console.log(this.totalPages);\n  };\n\n  addFirstPages = arr => {\n    for (let page = 1; page <= Math.min(3, this.totalPages); page++) {\n      const activeEl = this.currentPage === page ? 'btn-active' : '';\n      const btn = this.createPaginationItem(page, activeEl);\n      arr.push(btn);\n    }\n  };\n\n  addMiddlePages = arr => {\n    const startPage = Math.max(4, this.currentPage - 2);\n    const endPage = Math.min(this.currentPage + 1, this.totalPages - 1);\n    for (let page = startPage; page <= endPage; page++) {\n      const activeEl = this.currentPage === page ? 'btn-active' : '';\n      const btn = this.createPaginationItem(page, activeEl);\n      arr.push(btn);\n    }\n  };\n\n  addEllipsisIfNeeded = (arr, atEnd = false) => {\n    if (\n      (atEnd && this.currentPage < this.totalPages - 2) ||\n      (!atEnd && this.currentPage > 3)\n    ) {\n      arr.push('<li class=\"pagination-item ellipsis\">...</li>');\n    }\n  };\n\n  addLastPage = arr => {\n    const lastPage = this.totalPages;\n    const activeEl = this.currentPage === lastPage ? 'btn-active' : '';\n    const btn = this.createPaginationItem(lastPage, activeEl);\n    arr.push(btn);\n  };\n\n  createPaginationItem = (page, activeClass) => {\n    return `<li class='pagination-item ${activeClass}'>\n              <a href='#' data-page='${page}' class='pagination-btn'>${page}</a>\n            </li>`;\n  };\n\n  createPagination = paginationItems => {\n    const paginationContainer = `\n      <div class='pagination ${\n        this.totalPages <= 1 ? 'pagination-hidden' : ''\n      }'>\n      <button type=\"button\" class='pagination-arrow pagination-arrows-prev${\n        this.totalPages <= 1 ? 'pagination-arrows-hidden' : ''\n      }'>prev</button>\n        <ul class='pagination-list'>${paginationItems}</ul>\n        <button type=\"button\" class='pagination-arrow pagination-arrows-next${\n          this.totalPages <= 1 ? 'pagination-arrows-hidden' : ''\n        }'>next</button>\n      </div>`;\n    return paginationContainer;\n  };\n\n  render = pagination => {\n    this.reset();\n    refs.catalogFilms.insertAdjacentHTML('afterend', pagination);\n    const el = document.querySelector('.pagination');\n    const paginationContainer = document.querySelector('.pagination');\n\n    el.addEventListener('click', this.handlerBtn);\n    paginationContainer.addEventListener('click', this.arrowHandler);\n\n    const prevButton = document.querySelector(\n      '.pagination-arrow.pagination-arrows-prev'\n    );\n    if (this.currentPage === 1) {\n      prevButton.style.display = 'none';\n    } else {\n      prevButton.style.display = 'block';\n    }\n\n    const nextButton = document.querySelector(\n      '.pagination-arrow.pagination-arrows-next'\n    );\n    if (this.currentPage === this.totalPages) {\n      nextButton.style.display = 'none';\n    } else {\n      nextButton.style.display = 'block';\n    }\n  };\n\n  arrowHandler = e => {\n    const targetEl = e.target;\n\n    if (targetEl.classList.contains('pagination-arrows-prev')) {\n      this.prev();\n    }\n    if (targetEl.classList.contains('pagination-arrows-next')) {\n      this.next();\n    }\n  };\n\n  reset = () => {\n    const el = document.querySelector('.pagination');\n    if (el) el.remove();\n  };\n\n  prev = () => {\n    if (this.currentPage === 1) return;\n    this.currentPage -= 1;\n    this.createButton();\n\n    const prevButton = document.querySelector(\n      '.pagination-arrow.pagination-arrows-prev'\n    );\n    if (this.currentPage === 1) {\n      prevButton.style.display = 'none';\n    } else {\n      prevButton.style.display = 'block';\n    }\n  };\n\n  next = () => {\n    if (this.currentPage === this.totalPages) return;\n    this.currentPage += 1;\n    this.createButton();\n\n    const nextButton = document.querySelector(\n      '.pagination-arrow.pagination-arrows-next'\n    );\n    if (this.currentPage === this.totalPages) {\n      nextButton.style.display = 'none';\n    } else {\n      nextButton.style.display = 'block';\n    }\n  };\n\n  updatePage(page) {\n    this.currentPage = page;\n    this.createButton();\n  }\n\n  handlerBtn = e => {\n    e.preventDefault();\n    const page = parseInt(e.target.dataset.page);\n    if (!isNaN(page)) {\n      this.currentPage = page;\n      this.createButton();\n    }\n  };\n}\n","import Pagination from './pagination';\nimport { getByQuery } from '../api';\nimport { createDataCards, loadLocal } from './catalogUtils';\nimport axios from 'axios';\nimport { refs } from '../refs';\n\nconst API_KEY = '88b8a7c5d221d3120fb29d734050dc7d';\n\nexport const getMoviesByQuery = async (chosenPage = 1, date = 0) => {\n  refs.selectGenres.disabled = true;\n  refs.selectDate.disabled = false;\n  const searchTerm = loadLocal('searchTerm');\n  console.log(chosenPage, searchTerm, date);\n  const { results, total_pages, page } = await getByQuery(\n    searchTerm,\n    chosenPage,\n    date\n  );\n  createDataCards(results);\n  return {\n    results,\n    total_pages,\n    page,\n  };\n};\n\nexport const showNewestMovies = async (currentPage, genre_id = 0) => {\n  console.log(genre_id);\n  refs.selectGenres.disabled = false;\n  refs.selectDate.disabled = true;\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/movie/now_playing?api_key=${API_KEY}&page=${currentPage}${\n      genre_id ? `&with_genres=${genre_id}` : ''\n    }&language=en-US`\n  );\n  const { results, page, total_pages } = data;\n  createDataCards(results);\n  return {\n    results,\n    page,\n    total_pages,\n  };\n};\n\nexport const fetchGenre = async () => {\n  const { data } = await axios.get(\n    `https://api.themoviedb.org/3/genre/movie/list?api_key=${API_KEY}`\n  );\n  const { genres } = data;\n  return genres;\n};\n","import { fetchGenre, getMoviesByQuery, showNewestMovies } from './catalogApi';\nimport { createDataCards, loadLocal, saveLocal } from './catalogUtils';\nimport Pagination from './pagination';\n\nconst searchForm = document.querySelector('.search-form');\nconst selectGenres = document.querySelector('#selectGenres');\nconst selectDate = document.querySelector('#selectDate');\n\nconst submitHandler = e => {\n  e.preventDefault();\n  const formData = new FormData(e.target);\n  const { searchMovies } = Object.fromEntries(formData.entries());\n  if (!searchMovies.length) {\n    afterLoad();\n    return;\n  }\n  saveLocal('searchTerm', searchMovies);\n  afterSearching(searchMovies);\n};\n\nconst afterLoad = async () => {\n  const { page, total_pages } = await showNewestMovies();\n  const pagination = new Pagination(total_pages, page, showNewestMovies);\n  pagination.createButton();\n  localStorage.removeItem('searchTerm');\n};\n\nconst afterSearching = async searchMovies => {\n  const { page, total_pages } = await getMoviesByQuery();\n  const pagination = new Pagination(total_pages, page, getMoviesByQuery);\n  pagination.createButton();\n  selectDate.removeAttribute('disabled');\n};\n\nconst filterSelectOptions = async () => {\n  const genres = await fetchGenre();\n  let arrOptions = genres.map(option => {\n    return `<option value=\"${option.id}\">${option.name}</option>`;\n  });\n  arrOptions.unshift(`<option value='all'>All</option>`);\n  selectGenres.innerHTML = arrOptions.join('');\n  selectGenres.removeAttribute('disabled');\n};\n\nconst setGenreFilter = async e => {\n  const value = e.target.value;\n  const currentPage = loadLocal('currentPage');\n  const searchTerm = loadLocal('searchTerm');\n\n  if (searchTerm) {\n    if (value === 'all') {\n      getMoviesByQuery(currentPage, 0);\n      return;\n    }\n    const { results } = await getMoviesByQuery(currentPage, value);\n    createDataCards(results);\n    console.log(results);\n    return;\n  }\n  const { results } = await showNewestMovies(currentPage, value);\n  console.log(results);\n  createDataCards(results);\n};\n\nconst dateSelectOptions = () => {\n  const endDate = 1970;\n  const startDate = new Date().getFullYear();\n\n  const yearList = [];\n\n  for (let i = startDate; i >= endDate; i--) {\n    yearList.push(`<option value=\"${i}\">${i}</option>`);\n  }\n\n  selectDate.innerHTML = yearList.join('');\n};\n\nconst setDateFilter = async e => {\n  const value = e.target.value;\n  const currentPage = loadLocal('currentPage');\n\n  const { total_pages, page } = await getMoviesByQuery(currentPage, value);\n  const pagination = new Pagination(total_pages, 1, getMoviesByQuery);\n  pagination.createButton();\n};\n\nsearchForm.addEventListener('submit', submitHandler);\nwindow.addEventListener('load', afterLoad);\nwindow.addEventListener('load', filterSelectOptions);\nwindow.addEventListener('load', dateSelectOptions);\nselectGenres.addEventListener('change', setGenreFilter);\nselectDate.addEventListener('change', setDateFilter);\n\nexport { createDataCards };\n"],"names":["Object","defineProperty","$da4b248c00322402$exports","value","default","obj","key","enumerable","configurable","writable","$97b4d273c2f21ef2$export$21666b427502ea6d","pagination","document","getElementById","catalogFilms","querySelector","searchForm","selectGenres","selectDate","$900f3e5968da7b57$export$659b6b545718ce73","dataCard","markup","map","card","id","poster","title","genres","date","rating","join","cards","innerHTML","$80ce91662cd26072$export$f3fd225445632348","async","moviesData","genre","$df1db51f1d31cfcf$export$13a873f6c4b5d516","newCardsDate","poster_path","vote_average","genre_ids","release_date","$80ce91662cd26072$export$44f0485a2f926b66","$80ce91662cd26072$export$e57ec8acbf34a811","name","indexOf","push","slice","dateString","Date","getFullYear","$80ce91662cd26072$export$b38f1b11c5e38f18","serializedState","JSON","stringify","localStorage","setItem","error","console","message","$80ce91662cd26072$export$9f183916f445c495","getItem","undefined","parse","$f2e078fcec063076$export$2e2bcd8739ae039","updatePage","page","this","currentPage","createButton","constructor","totalPages","page1","getMovies","$parcel$interopDefault","reset","arrPaginationItems","addFirstPages","addEllipsisIfNeeded","addMiddlePages","addLastPage","createPagination","render","log","arr","Math","min","activeEl","btn","createPaginationItem","startPage","max","endPage","atEnd","lastPage","activeClass","paginationItems","insertAdjacentHTML","el","paginationContainer","addEventListener","handlerBtn","arrowHandler","prevButton","style","display","nextButton","e","targetEl","target","classList","contains","prev","next","remove","preventDefault","parseInt","dataset","isNaN","$df1db51f1d31cfcf$export$4a3145eab4db56d2","chosenPage","disabled","searchTerm","results","total_pages","$19F3f","getByQuery","$df1db51f1d31cfcf$export$49f9e704d857526c","genre_id","data","$2shzp","get","$e5c465ec961d44e9$var$searchForm","$e5c465ec961d44e9$var$selectGenres","$e5c465ec961d44e9$var$selectDate","$e5c465ec961d44e9$var$afterLoad","removeItem","$e5c465ec961d44e9$var$afterSearching","searchMovies","removeAttribute","formData","FormData","fromEntries","entries","length","window","arrOptions","option","unshift","yearList","i"],"version":3,"file":"catalog.6353e2bb.js.map"}